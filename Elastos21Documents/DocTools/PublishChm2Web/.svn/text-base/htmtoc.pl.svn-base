############################################################################
#
# File:     htmtoc.pl
# Purpose:  Generate a foldable content .htm page from a pre-prepared
#           content file
# Usage:    perl -w htmtoc.pl content_file
# Date:     2006-09-08
#
# BUGBUG:
# 1. The html page generated are slow when loading in browser and then exit.
#    Don't know why.
#
############################################################################
#
# Pseudo code:
#
# for (every line) {
#     indent = indent of line
#     if (exist next line) {
#         indent_next = indent of next line
#         if (indent - indent_next < 0) {
#             type = node;
#         } else {
#             type = leaf
#         }
#     } else {
#         type = leaf
#     }
# }
#
if (scalar(@ARGV) != 1) {
    usage();
    exit(1);
}

# load the content file in one go
$content_file = $ARGV[0];
open(CONTENT, $content_file) || die "htmtoc.pl: Cannot open the content file: $content_file\n";
@line = <CONTENT>;
close(CONTENT);

# remove ending \n from all lines
chomp(@line);

print "<!-- generated by htmtoc.pl -->\n";

# <IMG> id
$id = 0;
# preserve the current indent for next line's reference
$indent_prev = 0;
for ($i = 0; $i <= $#line; $i++) {
    # print "$line[$i]\n";

    # determine the current line's type
    # get current line's indent
    $line[$i] =~ /^(\s*)/;
    $indent = length($1);
    if ($i == $#line) { # the last line is always leaf
        $type = "leaf";
    } else {
        # get next line's indent
        $line[$i + 1] =~ /^(\s*)/;
        $indent_next = length($1);
        if ($indent - $indent_next < 0) {
            $type = "node";
        } else {
            $type = "leaf";
        }
    }

    # render HTML: close <div>
    if ($indent - $indent_prev < 0) {
        for ($ind = $indent_prev - 2; $ind >= $indent; $ind -= 2) {
            print " " x $ind . "</div>\n";
        }
    }

    print " " x $indent . "<p>";

    # render HTML
    if ($type eq "node") {
        put_BLANK($indent / 2);
        put_PNODE($id);
        put_CFOLDER($id);
    } elsif ($type eq "leaf") {
        put_BLANK($indent / 2 + 1);
        put_DOC();
    } else {
        print "htmtoc.pl: unknown type: $type\n";
    }

    # $pair[0]: name
    # $pair[1]: url
    @pair = split(/\s*,\s*/, $line[$i]);
    $pair[0] =~ s/^\s*//;
    if (scalar @pair == 2) {
        put_LINK($pair[0], $pair[1]);
    } else {
        put_TEXT($pair[0]);
    }

    print "</p>\n";

    # open a <div> after a node
    if ($type eq "node") {
        print " " x $indent . "<div id=\"folder" . $id++ . "\">\n";
    }

    # close </div> after last node
    if ($i == $#line) {
        for ($ind = $indent - 2; $ind >= 0; $ind -= 2) {
            print " " x $ind . "</div>\n";
        }
    }

    $indent_prev = $indent;
}

exit(0);

#
# subroutines start here
#
sub put_BLANK
{
    # Using space instead of blank.png to make html page loading and exiting
    # faster in browser
    print '&nbsp&nbsp' x $_[0];
    # print '<img src="blank.png" width=16 height=22 />' x $_[0];
}

sub put_DOC
{
    print '<img src="doc.png" width=24 height=22 />';
}

sub put_PNODE
{
    print '<img src="pnode.png" width=16 height=22 onclick="toggleFolder(\'folder' . $_[0] . '\', this)"/>';
}

sub put_CFOLDER
{
    print '<img src="folderclosed.png" width=24 height=22 onclick="toggleFolder(\'folder' . $_[0] . '\', this)"/>';
}

sub put_LINK
{
    # modify target to override the default form
    print '<a class="el" href="' . $_[1]. '" target="right">' . $_[0] . '</a>';
}

sub put_TEXT
{
    print $_[0];
}

sub usage
{
    print "Usage: htmtoc.pl CONTENT_FILE\n";
    print "Generate a foldable content .htm page from a pre-prepared content file.\n";
    print "\n";
    print "An sample content file:\n";
    print "Operating System,\n";
    print "  Elastos,http://www.koretide.com\n";
    print "  Windows,http://www.microsoft.com\n";
    print "  Unix,http://www.att.com\n";
    print "Search Engine,\n";
    print "  Baidu,http://www.baidu.com\n";
    print "  Google,http://www.google.com\n";
    print "\n";
}
