<!--==========================================================================-->
<!-- Copyright (c) 2000-2006,  Elastos, Inc.  All Rights Reserved.-->
<!--==========================================================================-->

<html>
<head>
<title>CAR构件的四级版本编号方法</title>
<meta http-equiv="Content-Type" content="text/html; charset=gb2312">
<script src="/xsl/docstyles.js"></script>
</head>

<body>
<h2>CAR构件的四级版本编号方法</h2>
<p>在Elastos系统中，CAR构件的版本采取四级编次方法，即：</p>
<p>格式：&nbsp;主版本号&nbsp;次版本号&nbsp;生成编号&nbsp;修改编号</p>
<p>范例：&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;8&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2</p>
<p>以上版本号表示为：1.0.8.2。</p>
    <h3>主版本号</h3>
    <p>主版本号标识一次重大的改变，构件的功能有比较大的改变或升级，在某个功能方面与之前的版本有较大的区别或改进，在一定时期内达到相对的稳定。主版本的改变通常具有里程碑的意义，根据公司整体产品的进展而确定。</p>
    <h3>次版本号</h3>
    <p>构件的内容有一些改变或扩展，或者构件的某项功能有所改变或完善。在绝大多数情况之下，在不同次版本号中的运行代码的修改不影响该构件的兼容性。</p>
    <h3>生成编号</h3>
    <p>生成编号标识构件的生成批次。例如：自动编译系统每天都要编译运行Elastos系统和CAR构件，每天的程序可能相同也可能不同，但每天编译都生成相应的系统程序和CAR构件，我们据此给定它的生成编号。在1.0.8.3中，表示通过系统的第8次编译而得到的构件版本号。</p>
    <h3>修改编号</h3>
    <p>在两个生成编号之间，也即在构件的下一次编译之前，我们可能发现了一些BUG，而且需要在当天对相应程序进行修改，修改之后需要在当天再次编译，于是出现了修改编号。1.0.8.3表示1.0.8版本的第3次修改版。</p>
    <h3>版本识别</h3>
    <p>CAR构件的版本识别方法：</p>
    <ol>
        <li>由CAR构件的生成规范可知，CAR构件是一种自描述的构件，所有CAR构件的版本信息均采用自描述语言进行封装，可以通过提取相关属性而获得。
        <li>对于少数特殊的CAR构件，或者用于不同场合的同一构件，有时候在名称上也进行了区别。例如Hello_dbg.dll和Hello_rls.dll，其功能均输出“Hello world!”字样，甚至其四级版本编号都可能完全相同，但很明显，它们是在不同编译环境下产生的构件。
    </ol>
    
<script>footer("chinese")</script>
</body>
</html>    