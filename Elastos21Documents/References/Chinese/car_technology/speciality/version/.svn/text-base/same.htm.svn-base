<!--==========================================================================-->
<!-- Copyright (c) 2000-2006,  Elastos, Inc.  All Rights Reserved.-->
<!--==========================================================================-->

<html>
<head>
<title>多个应用引用同一构件时的版本管理</title>
<meta http-equiv="Content-Type" content="text/html; charset=gb2312">
<script src="/xsl/docstyles.js"></script>
</head>

<body>
    <h2>多个应用引用同一构件时的版本管理</h2>
        <p>前面三个规则都是针对同一应用程序而言，对于不同的应用程序，可能出现引用同一个CAR构件的情况，这时需要使用第四条和第五条规则来确定是否加载或加载哪个版本的构件，如图四所示。</p>
        <center><img src="images/cite.jpg"></center>
        <center>图四： 不同应用程序引用同名构件时的处理规则</center>
    <h3>规则四：共享首份规则</h3>
        <p>当某个应用程序需要加载某个CAR构件时，如果相同名称的构件已经被加载入内存，此时只需要给出该构件的共享的地址即可，并增加一次引用。共享首份规则的前提是：不同应用所需要加载的同一构件的主版本号相同，否则，需要采用以下的独立版本规则。</p>
    <h3>规则五：独立版本规则</h3>
        <p>对于多个应用需要引用同一名称构件，在第一个应用发出需求时即加载相应的构件，如果其后面的其它应用共享此版本构件时不能提供正常的服务，则系统此时采用独立版本规则，使用前三条规则来为该应用进行独立加载合适版本的构件。</p>

<script>footer("chinese")</script>
</body>
</html>         