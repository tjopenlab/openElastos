<!--==========================================================================-->
<!-- Copyright (c) 2000-2006,  Elastos, Inc.  All Rights Reserved.-->
<!--==========================================================================-->

<html>
<head>
<title>自定义列集/散集</title>
<meta http-equiv="Content-Type" content="text/html; charset=gb2312">
<script src="/xsl/docstyles.js"></script>
</head>

<body>
<h2>CAR构件自定义列集/散集机制</h2>
    <p>CAR构件自定义列集/散集机制（custom&nbsp;marshaling）是CAR构件运行平台提供给开发者的一种针对构件实例接口指针的自定义列集/散集方法。通过使用CAR构件自定义列集/散集机制，开发者可以在远程传递接口指针类型参数时控制传递过程并影响返回结果。</p>
    <p>从设计思想上来看，自定义列集/散集机制一方面是一种基于CAR构件运行平台本身所提供的远程过程调用技术之上的扩展机制；另一方面它的运行又依赖于CAR构件运行平台本身所提供的远程过程调用技术。与其它同类技术（例如Microsoft&nbsp;DCOM中的自定义机制）相比，它最显著的优点是逻辑结构更为清晰。</p>
    <p>本节将从以下几个方面对CAR构件的自定义列集/散集机制进行介绍：</p>
    <ul>
        <li><a class="style1" href=cust_marshal_elements.htm>CAR构件自定义列集/散集机制的原理</a>
<!--        <li><a class="style1" href=cust_marshal_samples.htm>使用CAR构件自定义列集/散集机制的范例</a><-->
        <li><a class="style1" href=runtime_interface.htm>CAR构件运行时接口机制</a>
    </ul>
<!--    <p>在阅读本节内容之前，您应该已经理解CAR构件运行平台的<a class="style1" href="">远程过程调用技术</a>。</p><-->


<script>footer("chinese")</script>
</body>
</html>