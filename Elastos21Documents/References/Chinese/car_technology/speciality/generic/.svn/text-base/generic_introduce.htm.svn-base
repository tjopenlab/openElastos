<html>
	<head>
		<meta http-equiv=Content-Type content = "text/html; charset=GB2312">
		<link rel="stylesheet" href="/xsl/docdemo.css" type="text/css">
    <script src="/xsl/docstyles.js"></script>
    <title>generic_introduce</title>
	</head>
	
	<body>
		<h2>泛型编程介绍</h2>
		<h3>泛类</h3>
		  <P>泛类是被<a href="../../fundamental/development_environment/car/keywords/keywords_generic.htm">generic</a>关键字修饰的，以字母G开头的构件类。</P>
		  <P>泛类就像一种通用数据类型，其抽象出一般构件类所具有的接口特性。与普通构件类不同的是，泛类的New函数由构件开发者实现，开发者在该函数中可根据用户对象的差异设定选择条件，创建不同的构件对象。即用户创建的泛类对象会根据用户特征为其创建一个合适的构件对象，因为被创建的构件对象继承并重载了泛类接口，所以用户对泛类对象的操作都将被转为对某个具体构件对象的操作。</P>
      <p>泛类实则是种抽象类，其对内封装了一组创建具体构件对象的操作；对外提供了一组服务接口，接口中包括了解决某类问题的一般方法。</p>
    <h3>泛型编程</h3>
      <P>泛型编程的本质在于其能为用户屏蔽底层实现，使用通用的方法处理某类事务的一般问题。</P>
      <P>例如：有一种串口鼠标构件类，用于专门处理串口鼠标与主机的通信问题；还有一种机械鼠标构件类，用于专门处理机械鼠标与主机的通信问题。但在实际使用中，鼠标的用户未必知道自己使用的是何种鼠标，这就意味着用户在需要使用鼠标时不知去创建哪种具体的鼠标构件对象。</P>
      <P>通过构造一种鼠标泛类，为其抽象出用户使用鼠标时可能调用到的一般方法，诸如：使鼠标与主机建立通信、使鼠标与主机取消通信等。将这些方法定义在泛类向用户提供的接口中，则当用户需要调用鼠标服务时，只需创建这样一种鼠标泛类对象，调用这些接口方法即可。</P>
      <P>在泛类内部，其实现了这样一种功能，使其在被创建时，能自动判断用户所使用的鼠标类型，并为其创建一个匹配的构件对象，将泛类接口指针传给新生成的对象，则表面上用户对泛类鼠标对象的一系列操作实则是对某个具体鼠标对象的操作。</P>
      <P>泛类机制为用户屏蔽了底层实现，使用户不需知道鼠标的具体类型，就能调用鼠标服务。</P>

	</body>
</html>