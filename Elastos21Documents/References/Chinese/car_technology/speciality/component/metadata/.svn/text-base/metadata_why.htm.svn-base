<!--==========================================================================-->
<!-- Copyright (c) 2000-2006,  Elastos, Inc.  All Rights Reserved.-->
<!--==========================================================================-->

<html>
<head>
<title>CAR构件</title>
<meta http-equiv="Content-Type" content="text/html; charset=gb2312">
<script src="/xsl/docstyles.js"></script>
</head>

<body>
<h2>使用元数据的必要性</h2>
    <p>程序编译出来能够运行就可以了，为什么还需要元数据呢？使用元数据要解决什么样的需求呢？其实元数据我们一直都在使用，只是没有单独的提出来讨论而已。例如编程时，包含了一个不能直接使用的lib，另外还需要一个接口文件（也就是.h头文件）来描述这个lib里面的二进制代码。也就是说元数据提供了二进制数据与源文件通信的可能，头文件让用户自己的源文件可以使用别人的二进制文件。</p>
    <p>我们接着讨论元数据在构件中的应用，构件以接口方式向外提供服务，从上面的讨论来看，接口也需要元数据来描述才能让其他使用服务的用户使用。构件为了让接口与实现无关，从而保持了接口的不变性，使得动态升级成为可能。并且使用vptr结构将接口的内部实现隐藏起来，由接口的元数据来描述接口的函数布局和函数参数属性。接口的元数据描述的就是服务和调用之间的关系。有了这种描述，不同构件之间的调用才成为可能，构件的远程化，进程间通讯，自动生成Proxy和Stub及自动Marshalling、Unmarshalling才能正确地进行。</p>
    <p>在微软由idl（Interface&nbsp;Description&nbsp;Language）文件来描述接口，具体可查看微软msdn中有关idl的章节。.idl信息在经midl编译后，会被编译为单独的tlb文件，打包在可执行文件.exe或者.dll中成为文件资源的一部分。微软提供了一组接口ITypelib对tlb信息进行访问，具体情况可参见微软msdn有关ITypelib的接口文档。</p>


<script>footer("chinese")</script>
</body>
</html>
