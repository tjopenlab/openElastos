<?xml version = "1.0" encoding="GB2312" ?>
<?xml:stylesheet type="text/xsl" href="/xsl/xsl_c/methodmanual.xsl"?>

<manpage>

    <volume> 常用数据结构 </volume>
    <interface>AStringBuf</interface>
    <method>Clone </method>

    <description>
        <para>获取一个AStringBuf对象的克隆</para>
    </description>
    <syntax_nopara>
        <return_val>AStringBuf *  </return_val>
        <modifier>const</modifier>
        <NoArguments/>
    </syntax_nopara>

   <return>
        <para>返回指向AStringBuf对象的指针。</para>
    </return>
    <remarks>
        <para>本函数会调用函数malloc为要拷贝的AStringBuf分配内存，然后把源对象的内容拷贝到分配的内存中。</para>
    </remarks>

<example>
<pre>
char *pstr="1234";
AStringBuf buf(pstr,20);
AStringBuf * asbuf;
asbuf = buf.Clone();
CConsole::WriteLine(asbuf->GetCapacity());  //Display : 19
CConsole::WriteLine(asbuf->GetLength());  //Display : 4
AStringBuf::Free(asbuf);
</pre>
</example>

<references>
    <reference>
        <ref_name>AStringBuf</ref_name>
        <ref_url>../AStringBuf</ref_url>
    </reference>
    <reference>
        <ref_name>AStringBuf::Free </ref_name>
        <ref_url>Free</ref_url>
    </reference>
    <reference>
        <ref_name>AStringBuf::Alloc</ref_name>
        <ref_url>Alloc/index/Alloc</ref_url>
    </reference>
    <reference>
        <ref_name>WStringBuf::Clone </ref_name>
        <ref_url>../WStringBuf/Clone</ref_url>
    </reference>
</references>

</manpage>