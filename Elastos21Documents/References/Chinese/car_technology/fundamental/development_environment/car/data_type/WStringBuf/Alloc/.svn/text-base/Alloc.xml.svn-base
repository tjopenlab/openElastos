<?xml version = "1.0" encoding="GB2312" ?>
<?xml:stylesheet type="text/xsl" href="/xsl/xsl_c/methodmanual.xsl"?>

<manpage>
    <sample url="sdk\eztypes\WStringBuf\Alloc">Alloc</sample>
    <volume> 常用数据结构 </volume>
    <class>WStringBuf</class>
    <method> Alloc </method>

    <description>
        <para> (在堆上)动态创建WStringBuf对象，并分配字符数大小的内存块。</para>
    </description>

    <syntax>
        <return_val> static WStringBuf * </return_val>
        <parameters>
        <api_param>
            <param_type>Int32</param_type>
            <param_name> length </param_name>
            <param_note>
                <para> 分配的字符数 </para>
            </param_note>
        </api_param>
        </parameters>
    </syntax>

    <return>
        <para>如果分配成功，返回指向WStringBuf对象的指针，否则返回NULL。</para>
    </return>

    <remarks>
        <para>调用此函数分配的空间，需要调用Free函数来释放内存。 </para>
    </remarks>

<example>
<pre>
请参见：<link url="../../AStringBuf/Alloc/index/Alloc.htm">AStringBuf::Alloc(Int32)</link>
</pre>
</example>

<references>
    <reference>
        <ref_name>WStringBuf</ref_name>
        <ref_url>../../WStringBuf</ref_url>
    </reference>
    <reference>
        <ref_name>WStringBuf::Alloc</ref_name>
        <ref_url>index/Alloc</ref_url>
    </reference>
    <reference>
        <ref_name>WStringBuf::Free </ref_name>
        <ref_url>../Free</ref_url>
    </reference>

</references>


</manpage>