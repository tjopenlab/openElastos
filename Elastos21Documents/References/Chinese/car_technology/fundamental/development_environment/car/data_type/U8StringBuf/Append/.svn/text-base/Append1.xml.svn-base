<?xml version = "1.0" encoding="GB2312" ?>
<?xml:stylesheet type="text/xsl" href="/xsl/xsl_c/methodmanual.xsl"?>

<manpage>
    <volume> 常用数据结构 </volume>
    <class>U8StringBuf</class>
    <method> Append </method>

    <description>
        <para>在U8StringBuf对象字符串指定位置开始中追加指定字符数的子串。</para>
    </description>

    <syntax>
        <return_val> U8StringBuf &amp;</return_val>
        <parameters>
        <api_param>
            <param_type>const U8String &amp;</param_type>
            <param_name> as </param_name>
            <param_note>
                <para> U8String对象。 </para>
            </param_note>
        </api_param>
        </parameters>
        <parameters>
        <api_param>
            <param_type>Int32</param_type>
            <param_name>offset</param_name>
            <param_note>
                <para> 相对于U8String对象字符串起始位置的偏移量。 </para>
            </param_note>
        </api_param>
        </parameters>
        <parameters>
        <api_param>
            <param_type>Int32</param_type>
            <param_name> count</param_name>
            <param_note>
                <para> 被追加的字符的个数。 </para>
            </param_note>
        </api_param>
        </parameters>
    </syntax>

    <return>
        <para>返回U8StringBuf对象引用。</para>
    </return>
    <remarks>
        <para>超过U8StringBuf对象可用的长度会被省略掉。 </para>
    </remarks>
<example>
<pre>
U8StringBuf_&lt;5&gt; asbuf;
U8String as="1234";
asbuf.Append(as,0,3);
CConsole::WriteLine(asbuf);  //Display : "123" 
asbuf.Append(as,0,3);
CConsole::WriteLine(asbuf);  //Display : "12312" 
</pre>
</example>


</manpage>