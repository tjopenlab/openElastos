<?xml version = "1.0" encoding="GB2312" ?>
<?xml:stylesheet type="text/xsl" href="/xsl/xsl_c/methodmanual.xsl"?>

<manpage>
    <volume> 常用数据结构 </volume>
    <class>AString</class>
    <method> Substring </method>

    <description>
        <para> 从此实例检索子字符串。子字符串从指定的字符位置开始。 </para>
    </description>
    <syntax>
        <return_val> AString </return_val>
        <parameters>
        <api_param>
            <param_type>Int32</param_type>
            <param_name> start </param_name>
            <param_note>
                <para> 此实例中子字符串的起始字符位置（从零开始）。  </para>
            </param_note>
        </api_param>
        <api_param>
            <param_type>Encoding</param_type>
            <param_name> encoding  </param_name>
            <param_default>Encoding_Default  </param_default>
            <param_note>
                <para> 指定字符编码方式。 参见<link url="../../../others/Encoding.htm">Encoding</link>枚举类型说明。 </para>
            </param_note>
        </api_param>               
        </parameters>        
    </syntax>
    <return>
        <para>一个AString对象，它等于此实例中从start开始的子字符串，如果start等于此实例的长度，则为空字符串("")。 
</para>
    </return>
<remarks>
	<para>1.索引编号从零开始。 </para>
	<para>2.若start小于0或大于实例中字符串的长度， 返回的AString对象包含的字符串指针为NULL。 </para>
	</remarks>
<example>
<pre>
AString as("abcdef");
Int32 start = 4;
CConsole::WriteLine(as.Substring(start));  //Display : "ef"
</pre>
</example>


<references>
    <reference>
        <ref_name>AString</ref_name>
        <ref_url>../../AString</ref_url>
    </reference>
    <reference>
        <ref_name>AString::Substring</ref_name>
        <ref_url>index/Substring</ref_url>
    </reference>
    <reference>
        <ref_name>AString::Trim</ref_name>
        <ref_url>../Trim</ref_url>
    </reference>
    <reference>
        <ref_name>WString::Substring </ref_name>
        <ref_url>../../WString/Substring/index/Substring</ref_url>
    </reference>
</references>    
</manpage>