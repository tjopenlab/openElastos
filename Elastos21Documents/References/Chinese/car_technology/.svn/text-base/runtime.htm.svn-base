<!--==========================================================================-->
<!-- Copyright (c) 2000-2006,  Elastos, Inc.  All Rights Reserved.-->
<!--==========================================================================-->
<html>
	<head>
		<meta http-equiv=Content-Type content="text/html; charset=GB2312">
		<link rel="stylesheet" href="/xsl/docdemo.css" type="text/css">
    <script src="/xsl/docstyles.js"></script>
		<title>runtime</title>
	</head>
	<body>
		<h2>第五章：CAR运行时 </h2>
        <p>本章将详细介绍CAR运行时的以下几种重要机制，主要从原理、编写以及使用方法三方面阐述：</p>
        <p><li>运行时</p>
<ul><p>&nbsp;&nbsp;&nbsp;&nbsp;<li><a class="style1" href= "speciality\platform\platform.htm">Elastos平台编程 </a></p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;<li><a class="style1" href= "speciality\lifecycle_control\index.htm">对象生命周期管理 </a></p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;<li><a class="style1" href= "speciality\callback\index.htm">事件回调机制 </a></p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;<li><a class="style1" href= "speciality\applet\index.htm">Applet机制</a></p>        
<p>&nbsp;&nbsp;&nbsp;&nbsp;<li><a class="style1" href= "speciality\aop\index.htm">面向方面编程</a></p>
 <p>&nbsp;&nbsp;&nbsp;&nbsp;<li><a class="style1" href= "speciality\context\index.htm">语境类编程 </a></p>        
<p>&nbsp;&nbsp;&nbsp;&nbsp;<li><a class="style1" href= "">泛型编程 </a></p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;<li><a class="style1" href= "speciality\reflection\infor.htm">反射机制 </a></p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;<li><a class="style1" href= "speciality\inheritance\index.htm">构件继承机制 </a></p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;<li><a class="style1" href= "speciality\rmi\inter_proc_invoking\standard_marshaling\index.htm">列集与散集机制 </a></p>
</ul>	
	</body>
</html>