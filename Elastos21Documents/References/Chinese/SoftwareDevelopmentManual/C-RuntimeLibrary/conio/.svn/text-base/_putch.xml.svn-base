<?xml version="1.0" encoding="GB2312"?>
<?xml:stylesheet type="text/xsl" href="/xsl/xsl_c/manual.xsl"?>

<manpage>
    <sample url="sdk\operating_system\crt\libc\conio\_putch">_putch</sample>
    <title> _putch</title>
    <volume>C 运行库函数</volume>
    <routine_idx> conio_idx.htm </routine_idx>

    <description>
        <para>向控制台写一个字符。</para>
    </description>

    <syntax>
        <return_val>int</return_val>
        <func_name>_putch</func_name>
        <parameters>
            <func_param>
                <param_type>int</param_type>
                <param_name>c</param_name>
                <param_note>
                    <para>待输出字符</para>
                </param_note>
            </func_param>
        </parameters>
    </syntax>

    <return>
        <para>函数执行成功，将返回输出的字符。否则，函数返回EOF。</para>
    </return>

    <remarks>
        <para>该函数不使用缓冲区，直接将字符输出到控制台。</para>
    </remarks>

    <requirements>
        <routine>
            <routine_name>_putch</routine_name>
            <headerfile>conio.h</headerfile>
            <compatibility>Windows 2000, Elastos </compatibility>
        </routine>
    </requirements>

    <example>
<pre>
//==========================================================================
// Copyright (c) 2000-2004,  Elastos, Inc.  All Rights Reserved.
//==========================================================================

/* _putch.cpp: This program reads characters from
 * the keyboard until it receives a &apos;Y&apos; or &apos;y&apos;.
 */

#include &lt;conio.h&gt;
#include &lt;ctype.h&gt;
#include &lt;stdio.h&gt;

int main()
{
    int ch;

    puts(&quot;Type &apos;Y&apos; when finished typing keys: &quot;);
    do {
        ch = _getch();
        ch = toupper(ch);
    } while (ch != &apos;Y&apos;);

    _putch(ch);
    _putch(&apos;\r&apos;);     /* Carriage return */
    _putch(&apos;\n&apos;);     /* Line feed         */

    return 0;
}
</pre>
    </example>
<result>
Type &apos;Y&apos; when finished typing keys:
Y
</result>

    

    <references>
        <reference>
            <ref_name>putc</ref_name>
            <ref_url>../stdio/putc</ref_url>
        </reference>
        <reference>
            <ref_name>_getch</ref_name>
            <ref_url>_getch</ref_url>
        </reference>
    </references>

</manpage>