<?xml version="1.0" encoding="GB2312"?>
<?xml:stylesheet type="text/xsl" href="/xsl/xsl_c/manual.xsl"?>

<manpage>
    <sample url="sdk\operating_system\crt\libc\stdlib\_ltoa">_ltoa, _ltow</sample>
    <title>_ltoa, _ltow</title>
    <volume>C 运行库函数</volume>
    <routine_idx> slib_idx.htm </routine_idx>

    <description>
        <para>将长整型数据转换为字符串。</para>
    </description>

    <syntax>
        <return_val>char *</return_val>
        <func_name>_ltoa</func_name>
        <parameters>
            <func_param>
                <param_type>long</param_type>
                <param_name>value</param_name>
                <param_note>
                    <para>待转换的长整型数据</para>
                </param_note>
            </func_param>
            <func_param>
                <param_type>char *</param_type>
                <param_name>string</param_name>
                <param_note>
                    <para>指向转换后字符串的指针</para>
                </param_note>
            </func_param>
            <func_param>
                <param_type>int</param_type>
                <param_name>radix</param_name>
                <param_note>
                    <para>基数（表示数的进制）</para>
                </param_note>
            </func_param>
        </parameters>
    </syntax>

    <syntax>
        <return_val>wchar_t *</return_val>
        <func_name>_ltow</func_name>
        <parameters>
            <func_param>
                <param_type>long</param_type>
                <param_name>value</param_name>
            </func_param>
            <func_param>
                <param_type>wchar_t *</param_type>
                <param_name>string</param_name>
            </func_param>
            <func_param>
                <param_type>int</param_type>
                <param_name>radix</param_name>
            </func_param>
        </parameters>
    </syntax>

    <return>
        <para>每个函数都返回指向string的字符指针，无错误返回值。</para>
    </return>

    <remarks>
        <para>_ltoa将给定的参数value转换成以NULL结为的字符串，并将结果存储在参数string中（至多33个字节）。参数radix的值指定value的基数，这个值必须在在2-36之间。如果radix的值等于10，且value为负数，则字符串的第一个字符是负号（-）。_ltow是_ltoa的宽字符版本，_ltow的第二个参数和返回值的类型都是宽字符串。</para>
    </remarks>

    <requirements>
        <routine>
            <routine_name>_ltoa</routine_name>
            <headerfile>stdlib.h</headerfile>
            <compatibility>Windows 2000, Elastos </compatibility>
        </routine>
        <routine>
            <routine_name>_ltow</routine_name>
            <headerfile>stdlib.h</headerfile>
            <compatibility>Windows 2000, Elastos </compatibility>
        </routine>
    </requirements>

    <example>
<pre>
//==========================================================================
// Copyright (c) 2000-2006,  Elastos, Inc.  All Rights Reserved.
//==========================================================================

//==========================================================================
// discription:This program converts long of various
// sizes to strings in various radixes.
//==========================================================================

#include &lt;stdlib.h&gt;
#include &lt;stdio.h&gt;

int main()
{
    char buffer[40];
    long l = -344115L;

    _ltoa(l, buffer, 2);
    printf(&quot;String of long int %ld (radix 2): %s\n&quot;, l, buffer);

    _ltoa(l, buffer, 10);
    printf(&quot;String of long int %ld (radix 10): %s\n&quot;, l, buffer);

    _ltoa(l, buffer, 16);
    printf(&quot;String of long int %ld (radix 16): 0x%s\n&quot;, l, buffer);

    return 0;
}
</pre>
    </example>
<result>

String of long int -344115 (radix 2): 11111111111110101011111111001101
String of long int -344115 (radix 10): -344115
String of long int -344115 (radix 16): 0xfffabfcd
</result>

    

    <references>
        <reference>
            <ref_name>atoi</ref_name>
            <ref_url>atof</ref_url>
        </reference>
    </references>

</manpage>