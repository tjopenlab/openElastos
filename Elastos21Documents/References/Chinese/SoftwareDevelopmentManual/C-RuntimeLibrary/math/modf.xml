<?xml version="1.0" encoding="GB2312"?>
<?xml:stylesheet type="text/xsl" href="/xsl/xsl_c/manual.xsl"?>

<manpage>
    <sample url="sdk\operating_system\crt\libc\math\modf">modf</sample>
    <title> modf</title>
    <volume>C 运行库函数</volume>
    <routine_idx> math_idx.htm </routine_idx>

    <description>
        <para>将浮点数分解为小数部分和整数部分。</para>
    </description>

    <syntax>
        <return_val>double</return_val>
        <func_name>modf</func_name>
        <parameters>
            <func_param>
                <param_type>double</param_type>
                <param_name>x</param_name>
                <param_note>
                    <para>浮点数值</para>
                </param_note>
            </func_param>
            <func_param>
                <param_type>double*</param_type>
                <param_name>iptr</param_name>
                <param_note>
                    <para>保存整数部分的指针</para>
                </param_note>
            </func_param>
        </parameters>
    </syntax>

    <return>
        <para>返回参数的小数部分。无错误返回。</para>
    </return>

    <remarks>
        <para>函数modf将浮点数x分割成小数和整数两个部分，每一部分的符号与x的符号相同。带符号的小数部分作为返回值被返回。整数部分则作为一个浮点数被保存在指针iptr所指向的位置。</para>
    </remarks>

    <requirements>
        <routine>
            <routine_name>modf</routine_name>
            <headerfile>math.h</headerfile>
            <compatibility>ANSI, Windows 2000, Elastos </compatibility>
        </routine>
    </requirements>

    <example>
<pre>
//==========================================================================
// Copyright (c) 2000-2004,  Elastos, Inc.  All Rights Reserved.
//==========================================================================

/* modf.cpp:This program uses modf to calculate the signed fractional portion */

#include &lt;math.h&gt;
#include &lt;stdio.h&gt;

int main()
{
    double x, y, n;

    x = -14.87654321;      /* Divide x into its fractional */
    y = modf(x, &amp;n);     /* and integer parts            */

    printf(&quot;For %f, the fraction is %f and the integer is %.f\n&quot;,
           x, y, n);

    return 0;
}
</pre>
    </example>
<result>
For -14.876543, the fraction is -0.876543 and the integer is -14
</result>

    
</manpage>