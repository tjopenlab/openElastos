<?xml version="1.0" encoding="GB2312"?>
<?xml:stylesheet type="text/xsl" href="/xsl/xsl_c/manual.xsl"?>

<manpage>
    <sample url="sdk\operating_system\crt\libc\stdio\fflush">fflush</sample>
    <title> fflush</title>
    <volume>C 运行库函数</volume>
    <routine_idx> stio_idx.htm </routine_idx>

    <description>
        <para>清空文件缓冲区。</para>
    </description>

    <syntax>
        <return_val>int</return_val>
        <func_name>fflush</func_name>
        <parameters>
            <func_param>
                <param_type>FILE*</param_type>
                <param_name>stream</param_name>
                <param_note>
                    <para>指向文件结构的指针</para>
                </param_note>
            </func_param>
        </parameters>
    </syntax>

    <return>
        <para>如果清空缓冲区成功，返回0；如果指定的文件流没有缓冲区或是只读的，返回值也是0。如果失败，返回EOF；如是写失败，数据丢失。</para>
    </return>

    <remarks>
        <para>函数fflush清空文件缓冲区。如果打开的文件是用于输出的，那么fflush将与文件流相关缓冲区的内容写入该文件。如果是用于输入的，那么fflush清空缓冲区的内容。fflush消除任何先前对文件流调用ungetc产生的影响；而且，fflush(NULL)清空所有为输出而打开的文件流。调用fflush后，文件流保持打开状态。fflush对没有缓冲区的文件流没有影响。</para>
    </remarks>

    <requirements>
        <routine>
            <routine_name>fflush</routine_name>
            <headerfile>stdio.h</headerfile>
            <compatibility>ANSI, Windows 2000, Elastos </compatibility>
        </routine>
    </requirements>

    <example>
<pre>
//==========================================================================
// Copyright (c) 2000-2004,  Elastos, Inc.  All Rights Reserved.
//==========================================================================

/* fflush.cpp:the program use fflush to check for the buffer was successfully flushed*/
#include &lt;stdio.h&gt;
#include &lt;conio.h&gt;

int main()
{
    int integer;
    int i;
    char string[81];

    /* Read each word as a string. */
    printf(&quot;Enter a sentence of four words with scanf: &quot;);
    for (integer = 0; integer &lt; 4; integer++) {
        scanf(&quot;%s&quot;, string);
        printf(&quot;%s\n&quot;, string);
    }

    /* You must flush the input buffer before using gets. */
    i = fflush(stdin);
    printf(&quot;the return value is : %d\n&quot;,i);
    printf(&quot;the string is: &quot;);
    printf(&quot;%s\n&quot;, string);

    return 0;
}
</pre>
    </example>
<result>
Enter a sentence of four words with scanf: This is a test
This
is
a
test
the return value is : 0
the string is : test
</result>

    

    <references>
        <reference>
            <ref_name>fclose</ref_name>
            <ref_url>fclose</ref_url>
        </reference>
    </references>

</manpage>