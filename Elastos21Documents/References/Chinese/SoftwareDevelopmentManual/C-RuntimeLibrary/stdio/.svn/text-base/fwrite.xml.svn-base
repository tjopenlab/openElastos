<?xml version="1.0" encoding="GB2312"?>
<?xml:stylesheet type="text/xsl" href="/xsl/xsl_c/manual.xsl"?>

<manpage>
    <sample url="sdk\operating_system\crt\libc\stdio\fwrite">fwrite</sample>
    <title> fwrite</title>
    <volume>C 运行库函数</volume>
    <routine_idx> stio_idx.htm </routine_idx>

    <description>
        <para>将数据写入文件流。</para>
    </description>

    <syntax>
        <return_val>size_t</return_val>
        <func_name>fwrite</func_name>
        <parameters>
            <func_param>
                <param_type>const void*</param_type>
                <param_name>buffer</param_name>
                <param_note>
                    <para>指向要写入数据的缓冲区的指针</para>
                </param_note>
            </func_param>
            <func_param>
                <param_type>size_t</param_type>
                <param_name>size</param_name>
                <param_note>
                    <para>元素大小（字节数）</para>
                </param_note>
            </func_param>
            <func_param>
                <param_type>size_t</param_type>
                <param_name>count</param_name>
                <param_note>
                    <para>要写入的最大元素个数</para>
                </param_note>
            </func_param>
            <func_param>
                <param_type>FILE*</param_type>
                <param_name>stream</param_name>
                <param_note>
                    <para>指向文件结构的指针</para>
                </param_note>
            </func_param>
        </parameters>
    </syntax>

    <return>
        <para>函数fwrite返回实际写入文件流的完整元素的个数。如果发生错误，其值可能小于count，并且文件位置指针无法确定。</para>
    </return>

    <remarks>
        <para>函数fwrite将count个元素写入输出文件流，每个元素大小为size个字节。与文件流相关联的文件指针按实际写入的字节数递增。如果文件流以文本模式打开，每个回车会替换为回车加换行符。替换对返回值没有影响。</para>
    </remarks>

    <requirements>
        <routine>
            <routine_name>fwrite</routine_name>
            <headerfile>stdio.h</headerfile>
            <compatibility>ANSI, Windows 2000, Elastos </compatibility>
        </routine>
    </requirements>

    <example>
<pre>
//==========================================================================
// Copyright (c) 2000-2004,  Elastos, Inc.  All Rights Reserved.
//==========================================================================

/* fwrite.cpp: This program uses fwrite to write a string to a file.
 */

#include &lt;io.h&gt;
#include &lt;stdio.h&gt;
#include &lt;fcntl.h&gt;


int main()
{
    FILE *stream;
    char list[30] = &quot;this is a test&quot;;
    int  numwritten;


    if ((stream = fopen(&quot;fwrite.out&quot;, &quot;wt&quot;)) != NULL) {
        numwritten = fwrite(list, sizeof(char), 25, stream);
        printf(&quot;Wrote %d items\n&quot;, numwritten);
        fclose(stream);
    }
    else {
        printf(&quot;Problem opening the file\n&quot;);
        return 1;
    }

    return 0;

}
</pre>
    </example>
<result>
Wrote 25 items
</result>

   

    <references>
        <reference>
            <ref_name>fread</ref_name>
            <ref_url>fread</ref_url>
        </reference>
    </references>

</manpage>