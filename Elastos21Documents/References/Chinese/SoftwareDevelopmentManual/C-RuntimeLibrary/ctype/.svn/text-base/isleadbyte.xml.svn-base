<?xml version="1.0" encoding="GB2312"?>
<?xml:stylesheet type="text/xsl" href="/xsl/xsl_c/manual.xsl"?>

<manpage>
    <sample url="sdk\operating_system\crt\libc\ctype\isleadbyte">isleadbyte</sample>
    <title>isleadbyte</title>
    <volume>C 运行库函数</volume>
    <routine_idx> ctype_idx.htm </routine_idx>

    <description>
        <para>如果字符表达式第一个字符的第一个字节是前导字节，isleadbyte 返回非零，否则返回0，
              isleadbyte 可以判定字符是否是双字节字符。如果字符的第一个字节是前导字节，那么字符是双字节字符，
              否则字符是单字节字符。</para>
    </description>

    <syntax>
        <return_val>int</return_val>
        <func_name>isleadbyte</func_name>
        <parameters>
            <func_param>
                <param_type>int</param_type>
                <param_name>c</param_name>
                <param_note>
                    <para>需要判断的整型值</para>
                </param_note>
            </func_param>
        </parameters>
    </syntax>

    <return>
        <para>如果字符表达式第一个字符的第一个字节是前导字节，isleadbyte 返回非零，否则返回0，</para>
    </return>

    <requirements>
        <routine>
            <routine_name>isleadbyte</routine_name>
            <headerfile>ctype.h</headerfile>
            <compatibility>ANSI, Windows 2000, Elastos </compatibility>
        </routine>
    </requirements>
    
    <example>
<pre>
//==========================================================================
// Copyright (c) 2000-2008,  Elastos, Inc.  All Rights Reserved.
//==========================================================================

/* isleadbyte.cpp: This program uses isleadbyte to verify
 * whether the first byte of c is a multibyte character.
 */
#include &lt;stdio.h&gt;
#include &lt;stdafx.h&gt;
#include &lt;ctype.h&gt;
#include &lt;local.h&gt;
int main()
      {
        
        
        int i=0;
	setlocale(LC_ALL,&quot;&quot;);
	int i=0x7F;
	printf(&quot;%x is %s\n&quot;,i,(isleadbyte(i) ==0)?&quot;not lead&quot;:&quot;lead&quot;);
	
        int i=0x81;
	printf(&quot;%x is %s\n&quot;,i,(isleadbyte(i) ==0)?&quot;not lead&quot;:&quot;lead&quot;);

	return 0;
      }
</pre>
    </example>
<result>
0x7F is not lead
0x81 is lead.
</result>
    
</manpage>