<?xml version="1.0" encoding="GB2312"?>
<?xml:stylesheet type="text/xsl" href="/xsl/xsl_c/manual.xsl"?>

<manpage>
    <sample url="sdk\operating_system\crt\libc\string\strchr">strchr</sample>
    <title> strchr, wcschr</title>
    <volume>C 运行库函数</volume>
    <routine_idx> str_idx.htm </routine_idx>

    <description>
        <para>在字符串中查找指定字符。</para>
    </description>

    <syntax>
        <return_val>char*</return_val>
        <func_name>strchr</func_name>
        <parameters>
            <func_param>
                <param_type>const char*</param_type>
                <param_name>string</param_name>
                <param_note>
                    <para>以NULL结尾的字符串</para>
                </param_note>
            </func_param>
            <func_param>
                <param_type>int</param_type>
                <param_name>c</param_name>
                <param_note>
                    <para>要查找的字符</para>
                </param_note>
            </func_param>
        </parameters>
    </syntax>

    <syntax>
        <return_val>wchar_t*</return_val>
        <func_name>wcschr</func_name>
        <parameters>
            <func_param>
                <param_type>const wchar_t*</param_type>
                <param_name>string</param_name>
            </func_param>
            <func_param>
                <param_type>wint_t</param_type>
                <param_name>c</param_name>
            </func_param>
        </parameters>
    </syntax>

    <return>
        <para>两个函数都返回指针，指向字符串string中，参数c指定字符第一次出现的位置。如果string中没有该字符，返回NULL。</para>
    </return>

    <remarks>
        <para>函数strchr在字符串string中，找出参数c指定字符第一次出现的位置。如果没有找到，返回NULL。终结符在搜索范围内。函数wcschr是函数strchr的宽字符版本，wcschr的参数和返回值，都是宽字符串，除此之外，和strchr一样。</para>
    </remarks>

    <requirements>
        <routine>
            <routine_name>strchr</routine_name>
            <headerfile>string.h</headerfile>
            <compatibility>ANSI, Windows 2000, Elastos </compatibility>
        </routine>
        <routine>
            <routine_name>wcschr</routine_name>
            <headerfile>string.h</headerfile>
            <compatibility>ANSI, Windows 2000, Elastos </compatibility>
        </routine>
    </requirements>

    <example>
<pre>
//==========================================================================
// Copyright (c) 2000-2008,  Elastos, Inc.  All Rights Reserved.
//==========================================================================

/* strchr.cpp: This program reads characters from
* 本程序在字符串中查找字符 &apos;r&apos;。
 */

#include &lt;string.h&gt;
#include &lt;stdio.h&gt;

char ch = &apos;r&apos;;
char string[] = &quot;The quick brown dog jumps over the lazy fox&quot;;
char fmt1[] = &quot;         1         2         3         4         5&quot;;
char fmt2[] = &quot;12345678901234567890123456789012345678901234567890&quot;;

int main()
{
    char *pdest;
    int result;
    printf(&quot;String to be searched:\n\t\t%s\n&quot;, string);
    printf(&quot;\t\t%s\n\t\t%s\n\n&quot;, fmt1, fmt2);

    printf(&quot;Search wchar_t:\t%c\n&quot;, ch);
    pdest = strchr(string, ch);
    result = pdest - string + 1;
    if (pdest != NULL)
        printf(&quot;Result:\t\tfirst %c found at position %d\n\n&quot;, ch, result);
    else
        printf(&quot;Result:\t\t%c not found\n&quot;, ch);

    return 0;
}
</pre>
    </example>
<result>
String to be searched:
The quick brown dog jumps over the lazy fox
1         2         3         4         5
12345678901234567890123456789012345678901234567890

Search wchar_t: r
Result:         first r found at position 12
</result>

    

    <references>
        <reference>
            <ref_name> wcsncat </ref_name>
            <ref_url>wcsncat</ref_url>
        </reference>
        <reference>
            <ref_name> wcsncmp </ref_name>
            <ref_url>wcsncmp</ref_url>
        </reference>
        <reference>
            <ref_name> wcsncpy </ref_name>
            <ref_url>wcsncpy</ref_url>
        </reference>
        <reference>
            <ref_name> _wcsnicmp </ref_name>
            <ref_url>_wcsnicmp</ref_url>
        </reference>
        <reference>
            <ref_name> strpbrk </ref_name>
            <ref_url>strpbrk</ref_url>
        </reference>
        <reference>
            <ref_name> strrchr </ref_name>
            <ref_url>strrchr</ref_url>
        </reference>
    </references>

</manpage>