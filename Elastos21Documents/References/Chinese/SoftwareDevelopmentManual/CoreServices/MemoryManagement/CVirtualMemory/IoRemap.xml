<?xml version = "1.0" encoding="GB2312" ?>
<?xml:stylesheet type="text/xsl" href="/xsl/xsl_c/apimanual.xsl"?>

<manpage>
    <sample url="system_lib\EzIoRemap"> CVirtualMemory::IoRemap</sample>
    <volume>虚拟内存管理</volume>
    <title>CVirtualMemory::IoRemap</title>
    <routine_idx>../VirtualMemoryManagement.htm</routine_idx>

    <description>
        <para>将指定的IO地址段映射到进程虚存段上。</para>
    </description>

    <syntax>
        <return_val>ECode</return_val>
        <parameters>
            <api_param>
                <param_type> Address </param_type>
                <param_name> virtualAddr </param_name>
                <param_note>
                    <para>[in]想要映射的虚存首地址</para>
                </param_note>
            </api_param>
            <api_param>
                <param_type> MemorySize </param_type>
                <param_name> size </param_name>
                <param_note>
                    <para>[in]映射的内存块的大小,参数不能为0</para>
                </param_note>
            </api_param>
            <api_param>
                <param_type> Address </param_type>
                <param_name> physicalAddr </param_name>
                <param_note>
                    <para>[in]IO地址段的起始物理地址</para>
                </param_note>
            </api_param>
            <api_param>
                <param_type> MemoryMapFlags </param_type>
                <param_name> flags </param_name>
                <param_note>
                    <para>[in]映射选项标识，参见数据结构中的<link url="../../DataStructure/MemoryMap.htm">MemoryMap</link>枚举类型说明。</para>
                </param_note>
            </api_param>
            <api_param>
                <param_type> Int32 </param_type>
                <param_name> protection </param_name>
                <param_note>
                    <para>[in]映射保护权限，参见数据结构中的<link url="../../DataStructure/MemProtect.htm">MemoryProtection</link>枚举类型说明。</para>
                </param_note>
            </api_param>
            <api_param>
                <param_type> Address * </param_type>
                <param_name> pVirtualAddr </param_name>
                <param_note>
                    <para>[out]指向虚存首地址的指针，用以获取虚存首地址，参数值不能为空</para>
                </param_note>
            </api_param>
        </parameters>
    </syntax>

    <return>
    	<table>
            <th>
                <td>返回值</td><td>描述</td>
            </th>
            <tr>
                <td>NOERROR</td><td>程序执行成功</td>
            </tr>
            <tr>
                <td>E_INVALID_ARGUMENT</td><td>指定的参数无效</td>
            </tr>
            <tr>
                <td>E_ALREADY_EXIST</td><td>指定的虚存地址已经分配</td>
            </tr>
            <tr>
                <td>E_NOT_ENOUGH_ADDRESS_SPACE</td><td>没有足够的虚存地址</td>
            </tr>
            <tr>
                <td>E_OUT_OF_MEMORY</td><td>没有足够的内存</td>
            </tr>
        </table>
        <para>参见<link url="../../../../car_technology/fundamental/development_environment/car/ECode.htm">ECode</link>相关帮助。</para>
    </return>

    <remarks>
    	<para>本函数用于将指定的IO地址段映射到进程虚存段上。</para>
    	<para>参数virtualAddr和size必须页对齐，否则返回E_INVALID_ARGUMENT。</para>
    </remarks>

    <requirements>
        <system>
            <system_name>
                Windows 2000 或更高版本；Elastos操作系统 
            </system_name>
        </system>
        <headerfile>
            <file_name> elastos.h </file_name>
        </headerfile>
        <library>
            <lib_name> elastos.lib </lib_name>
        </library>
    </requirements>

    <example>
    </example>

</manpage>
