<?xml version = "1.0" encoding="GB2312" ?>
    <?xml:stylesheet type="text/xsl" href="/xsl/xsl_c/methodmanual.xsl"?><manpage>
<sample url="sdk\operating_system\system_com_interface\IMutex\MutexUsage">TryLock</sample>
<volume>互斥体</volume>
<interface>IMutex</interface><method> TryLock</method>
    <description>
        <para>尝试在指定时间间隔内获取互斥体对象。</para>
    </description>
    <syntax>
        <return_val> ECode </return_val>
       <parameters>   <api_param>
                <param_inout>[in]</param_inout>
                <param_type> Millisecond32  </param_type>
                <param_name> timeout </param_name>
                <param_note>
                    <para>指定一个时间间隔，单位为毫秒</para>
                </param_note>
            </api_param>
            <api_param>
                <param_inout>[out]</param_inout>
                <param_type> WaitResult * </param_type>
                <param_name> pResult</param_name>
                <param_note>
                	<para>指向<link url="../../../DataStructure/WaitResult.htm">WaitResult</link>枚举类型的指针，用于存放等待结果的变量的地址，不能为空。如果方法调用成功，则返回WaitResult_OK；如果事件对象仍处于未通知状态，则返回WaitResult_TimedOut；如果在等待事件对象变为已通知状态期间被打断，则返回WaitResult_Interrupted</para>
                </param_note>
            </api_param>
        </parameters>

    </syntax>

	<return>
	    <table>
	        <th>
	    	    <td>返回值 </td>
	    	    <td>描述</td>
	        </th>
	        <tr>
	    	    <td>NOERROR</td>
	    	    <td>成功</td>
	        </tr>
	        <tr>
	    	    <td>E_INVALID_ARGUMENT</td>
	    	    <td>参数错误</td>
	        </tr>

	    </table>
	    <para>参见<link url="../../../../../car_technology/fundamental/development_environment/car/ECode.htm">ECode</link>相关帮助。</para>
    </return>

	<remarks>
		<para>
		本方法用于尝试获取互斥体对象。
		</para>
		<para>
		如果互斥体对象已经被其它线程所占有，当前线程将进入等待状态。只要等待时间不超过指定的时间间隔，当前线程将一直处于等待状态，直到其它拥有互斥体的线程释放该对象，并唤醒当前线程，当前线程才会获得该互斥体对象，方法才成功返回。
		</para>
		<para>
		如果timeout为零，则此方法立即返回。
		</para>
		<para>
		如果互斥体对象正处于无属主状态，调用线程将成功获取到它，本方法将立即成功返回。
		</para>
		<para>
		如果调用线程已经占有了互斥体对象，则本方法也将立即成功返回。但调用线程必须相应多调用一次<link url="Unlock.htm">IMutex::Unlock</link>方法才能最终释放互斥体对象。
		</para>
		<para>
		调用线程在等待获取互斥体对象期间可以被打断。
		</para>
    </remarks>

    <requirements>
        <system>
            <system_name>
				Windows 2000 或更高版本；Elastos操作系统
			</system_name>
        </system>
    </requirements>
    <example>
    </example>
</manpage>