<?xml version = "1.0" encoding="GB2312" ?>
<?xml:stylesheet type="text/xsl" href="/xsl/xsl_c/apimanual.xsl"?>

<manpage>
    <volume>TLS</volume>
    <title>CThread::RelinquishLocalSlot</title>

    <description>
        <para>
            释放一个TLS索引号，使该索引号可以被重用，并回收堆内存/释放构件对象。
        </para>
    </description>

   <syntax>
        <return_val> ECode   </return_val>
        <parameters>
            <api_param>
                <param_inout>[in]</param_inout>
                <param_type> Int32    </param_type>
                <param_name> slotIndex </param_name>
                <param_note>
                    <para>由<link url="AcquireLocalSlot.htm">CThread::AcquireLocalSlot</link>函数所分配得到的TLS索引号 </para>
                </param_note>
            </api_param>

        </parameters>
    </syntax>

    <return>
	    <table>
	        <th>
	    	    <td>返回值 </td>
	    	    <td>描述</td>
	        </th>
	        <tr>
	    	    <td>NOERROR</td>
	    	    <td>函数调用成功</td>
	        </tr>
	        <tr>
	    	    <td>E_INVALID_ARGUMENT</td>
	    	    <td>指定的参数无效：参数slotIndex对应的索引号已经被释放了或slotIndex&gt;=56(每个进程可用的slot Index为0~55)。</td>
	        </tr>


	    </table>
	    <para>参见<link url="../../../../../car_technology/fundamental/development_environment/car/ECode.htm">ECode</link>相关帮助。</para>
    </return>

    <remarks>
        <para>如果TLS索引号对应的TLS槽（slot）中存放的是指向堆内存或构件对象的指针，那么，线程在调用<link url="RelinquishLocalSlot.htm">CThread::RelinquishLocalSlot</link>函数（或在线程退出）时，系统会自动执行回收堆内存/释放构件对象的动作。</para>

		</remarks>
	<requirements>
        <system>
            <system_name>
				Windows 2000 或更高版本；Elastos操作系统
			</system_name>
        </system>
    </requirements>

</manpage>