<?xml version = "1.0" encoding="GB2312" ?>
    <?xml:stylesheet type="text/xsl" href="D:\Elastos20.SDK\src\Elastos20.Hlp\Chinese/xsl/xsl_c/methodmanual.xsl"?><manpage>
<volume>可执行文件和模块</volume>
<interface>IModule</interface>
<method> FindResource </method>
    <description>
        <para>
    		获取模块中指定的资源的内存地址和大小。
        </para>
    </description>
    <syntax>
        <return_val> ECode </return_val>
			<parameters>
				<api_param>
					<param_inout>[in]</param_inout>
					<param_type> WString </param_type>
					<param_name> wsName </param_name>
					<param_note>
						<para>
						    指定资源的名字，不能为空
						</para>
					</param_note>
				</api_param>
			</parameters>

			<parameters>
				<api_param>
					<param_inout>[in]</param_inout>
					<param_type>  WString </param_type>
					<param_name>  wsType</param_name>
					<param_note>
						<para>
						    指定资源的类型，不能为空
						</para>
					</param_note>
				</api_param>
			</parameters>


			<parameters>
				<api_param>
					<param_inout>[out]</param_inout>
					<param_type> Address * </param_type>
					<param_name> pAddress</param_name>
					<param_note>
						<para>
						    指向Address型的指针，用于返回指定资源的内存地址，不能为空
						</para>
					</param_note>
				</api_param>
			</parameters>

			<parameters>
				<api_param>
					<param_inout>[out]</param_inout>
					<param_type>  MemorySize *  </param_type>
					<param_name>  pSize</param_name>
					<param_note>
						<para>
						    指向MemSize型的指针，用于返回资源的大小，不能为空
						</para>
					</param_note>
				</api_param>
			</parameters>

    </syntax>

	<return>
	    <table>
	        <th>
	    	    <td>返回值</td>
	    	    <td>描述</td>
	        </th>
        <tr>
	    	    <td>NOERROR</td>
	    	    <td>查找成功</td>
	        </tr>
	        <tr>
	    	    <td>E_INVALID_ARGUMENT</td>
	    	    <td>参数错误</td>
	        </tr>
	        <tr>
	    	    <td>E_DOES_NOT_EXIST</td>
	    	    <td>所查找的资源不存在</td>
	        </tr>
	    </table>
	    <para>参见<link url="../../../../../car_technology/fundamental/development_environment/car/ECode.htm">ECode</link>相关帮助。</para>
    </return>

	<remarks>
		<para>
       如果参数name或type的第一个字符为”#”号，那么”#”号后面的字符代表一个整数，这个整数就是资源名字或类型的标示符。例如，字符串”#256”,就代表整数标示符256。
    </para>
    <para>
        使用整数标示符，可以减少内存的使用。所以，建议使用标示符代替名字使用。
    </para>
    <para>Elastos使用RC(Resource Compiler)工具来编译资源文件，因此我们编写资源定义文件的方法和微软的资源定义文件(*.rc)的编写方法一样，而链接和使用资源文件的方法略有不同。我们把在Elastos中编写、编译资源文件和在程序中使用资源的步骤，归纳如下：</para>
    <para>1.创建资源，如图标、图片、字体等；</para>
    <para>2.编写资源文件(*.rc)，方法请参见相关的说明资料，如MSDN中关于Resource Compiler的描述及*.rc文件的语法说明等； </para>
    <para>3.将资源添加到某exe或dll中去，方法是将编写好的资源文件添加到与该exe或dll对应source文件中，一并编译； </para>
    <para>4.经过以上的步骤，就可以在程序中通过调用FindResource这个方法使用这个资源了。 </para>
	</remarks>
	<example>
<pre>
//下面，我们举例说明以上的步骤，我们要将sample.mp3作为资源添加到 a.dll 中(我们省略创建sample.mp3的步骤)：
//1、在开发目录下新建一个资源定义文件 sample.rc：
1 mp3 sample.mp3

//2、将 sample.rc 添加到 sources 文件里去：
TARGET_NAME= a
TARGET_TYPE= dll

SOURCES= \
    a.cpp \
    sample.rc \

LIBRARIES= \
    ... ...
//编译之后，将把 sample.mp3 这个文件作为资源添加到 a.dll 中去。

//3、然后可以这样使用资源：
IModule * pModule;
Address addr;          // 用于获取 sample.mp3 这个资源文件的地址
MemorySize size;       // 用于获取 sample.mp3 这个资源文件的大小
...
CModule::Load(L"a.dll", 0, &amp;pModule);
pModule->FindResource(L"#1", L"mp3", &amp;addr, &amp;size);
...
</pre>
    </example>

</manpage>