<?xml version = "1.0" encoding="GB2312" ?>
    <?xml:stylesheet type="text/xsl" href="/xsl/xsl_c/methodmanual.xsl"?><manpage>
<sample url="sdk\operating_system\system_com_interface\IProcess\Thread">GetAllThreads</sample>
<volume>进程</volume>
<interface>IProcess</interface><method> GetAllThreads </method>
    <description>
        <para>
            获取进程中所有线程的集合。
        </para>
    </description>
    <syntax>
        <return_val> ECode </return_val>
        <parameters>
            <api_param>
                <param_inout>[out]</param_inout>
                <param_type> IObjectEnumerator  ** </param_type>
                <param_name> ppThreads </param_name>
                <param_note>
                    <para>
                指向<link url="../IObjectEnumerator.htm">IObjectEnumerator</link>接口类型的二级指针，用于获取线程的对象枚举器接口指针，不能为空
                    </para>
                </param_note>
            </api_param>

        </parameters>
    </syntax>

	<return>
	    <table>
	        <th>
	    	    <td>返回值 </td>
	    	    <td>描述</td>
	        </th>
	        <tr>
	    	    <td>NOERROR</td>
	    	    <td>成功获取进程中所有线程的集合</td>
	        </tr>
	        <tr>
	    	    <td>E_INVALID_ARGUMENT</td>
	    	    <td>参数错误</td>
	        </tr>
	        <tr>
	    	    <td>E_OUT_OF_MEMORY</td>
	    	    <td>内存不足</td>
	        </tr>
	    </table>
	    <para>参见<link url="../../../../../car_technology/fundamental/development_environment/car/ECode.htm">ECode</link>相关帮助。</para>
    </return>

	<remarks>
	 <para>线程是进程里面一段代码的执行体，每个进程有一个主线程。进程中任意线程都可创建新的线程。进程里所有的线程都共享进程的地址空间。
</para>
		<para>
		    本方法获得的对象枚举器接口指针，可以通过<link url="../IObjectEnumerator.htm">IObjectEnumerator</link>的接口方法枚举出进程中的每一个线程。
		</para>
	</remarks>

    <requirements>
        <system>
            <system_name>
				Windows 2000 或更高版本；Elastos操作系统
			</system_name>
        </system>
    </requirements>

</manpage>