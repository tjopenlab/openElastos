<?xml version = "1.0" encoding="GB2312" ?>
    <?xml:stylesheet type="text/xsl" href="/xsl/xsl_c/methodmanual.xsl"?><manpage>
<sample url="sdk\operating_system\system_com_interface\IProcess\Exit">GetExitTime</sample>
<volume>进程</volume>
<interface>IProcess</interface><method> GetExitTime </method>
    <description>
        <para>
            获取进程退出时的系统时间。
        </para>
    </description>
    <syntax>
        <return_val> ECode </return_val>
        <parameters>
            <api_param>
                <param_inout>[out]</param_inout>
                <param_type> SystemTime  *</param_type>
                <param_name> pTime </param_name>
                <param_note>
                    <para>
						<link url="..\..\..\OtherCoreService\DataType\SystemTime.htm">SystemTime</link>数据类型的指针，用于获取进程的退出时间，不能为空
                    </para>
                </param_note>
            </api_param>
        </parameters>
    </syntax>

	<return>
	    <table>
	        <th>
	    	    <td>返回值 </td>
	    	    <td>描述</td>
	        </th>
	        <tr>
	    	    <td>NOERROR</td>
	    	    <td>成功获取进程的退出时间</td>
	        </tr>
	        <tr>
	    	    <td>E_INVALID_ARGUMENT</td>
	    	    <td>参数错误</td>
	        </tr>
	        <tr>
	    	    <td>E_PROCESS_NOT_EXITED</td>
	    	    <td>进程还没退出</td>
	        </tr>
	    </table>
	    <para>参见<link url="../../../../../car_technology/fundamental/development_environment/car/ECode.htm">ECode</link>相关帮助。</para>
    </return>

    <remark>
        <para>调用<link url="../function/EzExitProcess.htm">CProcess::Exit()</link>调用并不会销毁进程的系统对象，只有当系统中最后一个IProcess接口调用Release方法后才会销毁系统的进程对象。</para>
        <para>如果进程没有终止，企图获取终止时间，将返回E_PROCESS_NOT_EXITED。</para>
        <para>如果需要获取终止时间，可以先使用IProcess::IsAlive方法确认进程是否已经退出，然后调用此方法获取终止时间。</para>
    </remark>

    <requirements>
        <system>
            <system_name>
				Windows 2000 或更高版本；Elastos操作系统
			</system_name>
        </system>
    </requirements>

</manpage>