<?xml version = "1.0" encoding="GB2312" ?>
<?xml:stylesheet type="text/xsl" href="/xsl/xsl_c/apimanual.xsl"?>

<manpage>
    <sample url="sdk\operating_system\system_lib\ezThread"> CThread::Delay </sample>
    <volume>线程</volume>
    <title>CThread::Delay</title>
    <routine_idx>../../../Thread.htm</routine_idx>

    <description>
        <para>使当前线程延迟一段指定的时间。</para>
    </description>

    <syntax>
        <return_val>ECode</return_val>
        <parameters>
            <api_param>
                <param_type> Microsecond </param_type>
                <param_name> us </param_name>
                <param_note>
                    <para>[in]指定一个期望的延迟时间长度，单位为微秒</para>
                </param_note>
            </api_param>
        </parameters>
    </syntax>

    <return>
    	<table>
            <th>
                <td>返回值</td><td>描述</td>
            </th>
            <tr>
                <td>NOERROR</td><td>程序执行成功</td>
            </tr>
        </table>
        <para>参见<link url="../../../../../../car_technology/fundamental/development_environment/car/ECode.htm">ECode</link>相关帮助。</para>
    </return>

    <remarks>
        <para>此方法使当前线程延迟一段指定的时间。如果实际延迟的时间超过所指定的时间，当前线程就会结束延迟，从此方法中返回。在延迟期间，线程将一直保持运行状态，并且不会主动放弃处理器。 </para>
    </remarks>

    <requirements>
        <system>
            <system_name>
                Windows 2000 或更高版本；Elastos操作系统 
            </system_name>
        </system>
        <headerfile>
            <file_name> elastos.h </file_name>
        </headerfile>
        <library>
            <lib_name> elastos.lib </lib_name>
        </library>
    </requirements>

    <example>
    </example>

    <references>
    <reference>
        <ref_name> CThread::Yield</ref_name>
        <ref_url> Yield</ref_url>
    </reference>
    <reference>
        <ref_name> CThread::Sleep </ref_name>
        <ref_url> Sleep</ref_url>
    </reference>
    </references>

</manpage>
