<!--==========================================================================-->
<!-- Copyright (c) 2000-2008,  Elastos, Inc.  All Rights Reserved.-->
<!--==========================================================================-->

<html>
<head>
<title>过滤数据 </title>
<meta http-equiv="Content-Type" content="text/html; charset=gb2312">
<script src="/xsl/docstyles.js"></script>
</head>

<body>
<h3>使用WHERE子句 </h3>
    <p>数据库表一般包含大量的数据，很少需要检索表中所有行。通常只会根据特定操作或报告的需要提取表数据的子集。只检索所需数据需要指定搜索条件（search criteria），搜索条件也称为过滤条件（filter condition）。在SELECT语句中，数据根据WHERE子句中指定的搜索条件进行过滤。WHERE子句在表名（FROM子句）之后给出，如下所示： </p>
    <p>SELECT prod_name,prod_price </p>
    <p>FROM Products</p>
    <p>WHERE prod_price=3.24</p>
    <p>Output:</p>
    <table>
    	<thead>
		<td>prod_name</td>
	    <td>prod_price</td>
    	</thead>
    	<tr>
    		<td>Fish bean bag toy</td>
    		<td>3.4900</td>
    	</tr>
    	<tr>
    		<td>Bird bean bag toy</td>
    		<td>3.4900</td>
    	</tr>
    	<tr>
    		<td>Rabbit bean bag toy</td>
    		<td>3.4900</td>
    	</tr>
    </table>
<p>这条语句从products表中检索两个列，但不返回所有行，只返回prod_price值为3.24的行。 </p>
<h3>WHERE子句操作符 </h3>
    <p>我们在关于相等的测试时看到了第一个WHERE子句，它确定一个列是否包含特定的值。SQL支持下表列出的所有条件操作符。 </p>
    <table>
		<thead>
			<td>操作符</td>
			<td>说&nbsp;明</td>
		</thead>
		<tr>
			<td>=</td>
			<td>等于</td>
		</tr>
		<tr>
			<td>&lt;&gt;</td>
			<td>不等于</td>
		</tr>
		<tr>
			<td>!=</td>
			<td>不等于</td>
		</tr>
		<tr>
			<td>&lt;</td>
			<td>小于</td>
		</tr>
		<tr>
			<td>&lt;=</td>
			<td>小于等于</td>
		</tr>
		<tr>
			<td>!&lt;</td>
			<td>不小于</td>
		</tr>
		<tr>
			<td>&gt;</td>
			<td>大于</td>
		</tr>
		<tr>
			<td>&gt;=</td>
			<td>大于等于</td>
		</tr>
		<tr>
			<td>!&gt;</td>
			<td>不大于</td>
		</tr>
		<tr>
			<td>BETWEEN</td>
			<td>在指定的两个值之间</td>
		</tr>
		<tr>
			<td>IS NULL</td>
			<td>为NULL值</td>
		</tr>
	</table>
<h3>检查单个值 </h3>
    <p>第一个例子是列出价格小于10美元的所有产品： </p>
    <p>SELECT prod_name,prod_price </p>
    <p>FROM Products</p>
    <p>WHERE prod_price&lt;10</p>
    <p>Output:</p>
    <table>
    	<thead>
    	<td>prod_name</td>
		<td>prod_price</td>
    	</thead>
    	<tr>
    		<td>Fish bean bag toy</td>
    		<td>3.4900</td>
    	</tr>
    	<tr>
    		<td>Bird bean bag toy</td>
    		<td>3.4900</td>
    	</tr>
    	<tr>
    		<td>Rabbit bean bag toy</td>
    		<td>3.4900</td>
    	</tr>
    	<tr>
    		<td>8 inch teddy bear</td>
    		<td>5.9900</td>
    	</tr>
    	<tr>
    		<td>12 inch teddy bear</td>
    		<td>8.9900</td>
    	</tr>
    	<tr>
    		<td>Raggedy Ann</td>
    		<td>4.9900</td>
    	</tr>
    	<tr>
    		<td>King doll</td>
    		<td>9.4900</td>
    	</tr>
    	<tr>
    		<td>Queen doll</td>
    		<td>9.4900</td>
    	</tr>
    </table>
<h3>不匹配检查 </h3>
    <p>以下例子列出不是由供应商DLL01制造的所有产品： </p>
    <p>SELECT vend_id,prod_name </p>
    <p>FROM Products</p>
    <p>WHERE vend_id&lt;&gt;'DLL01';</p>
    <p>Output:</p>
    <table>
    	<thead>
    	<td>vend_id</td>
    	<td>prod_name</td>
    	</thead>
    	<tr>
    		<td>BRS01</td>
    		<td>8 inch teddy bear</td>
    	</tr>
    	<tr>
    		<td>BRS01</td>
    		<td>12 inch teddy bear</td>
    	</tr>
    	<tr>
    		<td>BRS01</td>
    		<td>18 inch teddy bear</td>
    	</tr>
    	<tr>
    		<td>FNG01</td>
    		<td>King doll</td>
    	</tr>
    	<tr>
    		<td>FNG01</td>
    		<td>Queen doll</td>
    	</tr>
    </table>
<h3>范围值检查 </h3>
    <p>为了检查某个范围的值，可使用BETWEEN操作符。其语法与其他WHERE子句的操作符稍有不同，因为它需要两个值，即范围的开始值和结束值。例如，BETWEEN操作符可用来检索价格在5美元和10美元之间或日期在指定的开始日期和结束日期之间的所有产品。下面的例子说明如何使用BETWEEN操作符，它检索价格在5美元和10美元之间的所有产品： </p>
    <p>SELECT prod_name,prod_price </p>
    <p>FROM Products</p>
    <p>WHERE prod_price BETWEEN 5 AND 10;</p>
    <p>Output:</p>
    <table>
    	<thead>
    	<td>prod_name</td>
    	<td>prod_price</td>
    	</thead>
    	<tr>
    		<td>8 inch teddy bear</td>
    		<td>5.9900</td>
    	</tr>
    	<tr>
    		<td>12 inch teddy bear</td>
    		<td>8.9900</td>
    	</tr>
    	<tr>
    		<td>King doll</td>
    		<td>9.4900</td>
    	</tr>
    	<tr>
    		<td>Queen doll</td>
    		<td>9.4900</td>
    	</tr>
    </table>
<h3>空值检查 </h3>
    <p>在创建表时，表设计人员可以指定其中的列是否可以不包含值。在一个列不包含值时，称其为包含空值NULL。 </p>
    <p>SELECT语句有一个特殊的WHERE子句，可用来检查具有NULL值的列。这个WHERE子句就是IS NULL子句。其语法如下： </p>
    <p>SELECT prod_name </p>
    <p>FROM Products</p>
    <p>WHERE prod_price IS NULL</p>
    <p>Output:</p>
    <p>vend_id</p>
	<p>--------------</p>
	<p>FNG01</p>
	<p>JTS01</p>
<script>footer("chinese")</script>
</body>
</html>

