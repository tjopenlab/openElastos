<!--==========================================================================-->
<!-- Copyright (c) 2000-2008,  Elastos, Inc.  All Rights Reserved.-->
<!--==========================================================================-->

<html>
<head>
<title>文件系统名词解释</title>
<meta http-equiv="Content-Type" content="text/html; charset=gb2312">
<script src="/xsl/docstyles.js"></script>
</head>

<body>

<h2>文件系统名词解释</h2>

<table>
    <thead>
        <td> 名词 </td><td> 英文 </td><td> 解释 </td>
    </thead>

    <tr>
        <td>
            文件
        </td>
        <td>
            file
        </td>
        <td>
            操作系统用于持久性存储和管理数据的基本单位，表现为一个线性的字节序列。文件至少有一个名字，文件在与它关联的所有名字都被删除之前一直存在。
        </td>
    </tr>
    <tr>
        <td>
            文件系统
        </td>
        <td>
            filesystem
        </td>
        <td>
            操作系统管理、组织和操作文件的工具。文件系统是一个以树状结构来管理和操作的名字空间。每个名字对应一个文件。
        </td>
    </tr>
    <tr>
        <td>
            目录
        </td>
        <td>
            directory
        </td>
        <td>
            文件系统中一种特殊的文件，其中存储了指向其他文件的记录项。约定俗成的情况是一个目录至少包含两个记录项，"."通常指代当前目录本身；".."指代当前目录的父目录。
        </td>
    </tr>
    <tr>
        <td>
            目录项
        </td>
        <td>
            directory entry
        </td>
        <td>
            是一种用于描述文件或目录的数据结构，保存在磁盘上，对应一个文件或目录。文件系统通过它来记录文件数据的各种属性，例如：文件名、文件大小、修改时间等等。
        </td>
    </tr>
    <tr>
        <td>
            文件名
        </td>
        <td>
            filename
        </td>
        <td>
            是一个字符串，用来命名普通文件、特殊文件或者目录。可以是ASCII码或者中文。它的命名有一定的规则，比如：文件名中的字符不能包含空字符null('/0')或者斜杠(/)。除了当前目录和父目录的文件名，其他的文件名不能以'.'做为文件名的开头。
        </td>
    </tr>
    <tr>
        <td>
            文件类型
        </td>
        <td>
            file type
        </td>
        <td>
            文件系统的节点对象只有两种类型：一般文件(FileType_ RegularFile)和目录(FileType_Directory)。文件类型以枚举方式定义。
        </td>
    </tr>
    <tr>
        <td>
            读写模式
        </td>
        <td>
            Read/Write mode
        </td>
        <td>
            文件系统的文件对象有三种读写模式：可读(FileAccessMode_Read)，可写(FileAccessMode_Write)，可读并可写(FileAccessMode_ReadWrite)。文件的读写模式以枚举方式定义。
        </td>
    </tr>
    <tr>
        <td>
            路径名
        </td>
        <td>
            pathname
        </td>
        <td>
            以可选的字符"/"开始，紧接0个或多个被"/"分隔的目录名，最后紧接可选的文件名的一串非终结符字符串。如果路径名以"/"开始，那么是绝对路径，路径的搜索从根部开始；否则，该路径是相对路径，路径的查询要从进程的当前工作目录开始；如果只有"/"，就表示根目录。一个空的路径名则表示当前工作目录。
        </td>
    </tr>
    <tr>
        <td>
            错误号
        </td>
        <td>
            errno
        </td>
        <td>
            C程序中存储错误编码的全局变量，错误编码可以表明系统调用出错的原因。
        </td>
    </tr>
    <tr>
        <td>
            根目录
        </td>
        <td>
            root directory
        </td>
        <td>
            内核用来解析绝对路径的目录。系统只有唯一的一个根目录，在系统自举的时候就已经设置好了。
        </td>
    </tr>
    <tr>
        <td>
            根文件系统
        </td>
        <td>
            root filesystem
        </td>
        <td>
            包含根目录的文件系统被认为是系统所有文件系统的根。缺省的根文件系统标识已经被编译进内核，实际的根文件系统可以在其启动时重新设置。
        </td>
    </tr>
    <tr>
        <td>
            工作目录
        </td>
        <td>
            working directory
        </td>
        <td>
            进程根据该目录来对相对路径进行处理。
        </td>
    </tr>
    <tr>
        <td>
            时间数
        </td>
        <td>
            time
        </td>
        <td>
            时间数是从UTC时间1970年1月1日00:00:00时起，至操作时所经历的时间，单位为秒。
        </td>
    </tr>
</table>

<script>footer("c_KoreTide")</script>
</body>
</html>
