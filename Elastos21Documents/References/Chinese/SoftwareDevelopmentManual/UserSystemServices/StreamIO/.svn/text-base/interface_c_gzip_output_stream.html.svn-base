<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=GB2312">
<title>Stream IO API: CGZipOutputStream接口参考</title>
<link href="doxygen.css" rel="stylesheet" type="text/css">
<link href="tabs.css" rel="stylesheet" type="text/css">
<script src="../../../xsl/docstyles_for_doxgen.js"></script></head><body>
<!-- 制作者 Doxygen 1.5.4 -->
<div class="tabs">
  <ul>
    <li><a href="index.html"><span>首页</span></a></li>
    <li class="current"><a href="annotated.html"><span>类&接口</span></a></li>
    <li><a href="examples.html"><span>示例</span></a></li>
  </ul>
</div>
<div class="tabs">
  <ul>
    <li><a href="annotated.html"><span>组合类型列表</span></a></li>
    <li><a href="hierarchy.html"><span>类继承关系</span></a></li>
    <li><a href="functions.html"><span>组合类型成员</span></a></li>
  </ul>
</div>
<h1>CGZipOutputStream类参考</h1><!-- doxytag: class="CFileInputStream" -->该类实现了IGZipOutputStream接口。
<a href="#_details">更多...</a>
<p>

<p>
<a href="interface_c_gzip_output_stream-members.html">所有成员的列表。</a><table border="0" cellpadding="0" cellspacing="0">
<tr><td></td></tr>
<tr><td colspan="2"><br><h2>公有成员</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="interface_c_gzip_output_stream.html#c8b98a0fda9c62cd55a8d31b5db06cfb">New</a> (/*[in]*/ IOutputStream* stream, /*[out]*/ IGZipOutputStream **pIGZipOutputStream)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">创建一个从指定输入流读取数据的文件压缩流。  <a href="#c8b98a0fda9c62cd55a8d31b5db06cfb"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="interface_c_gzip_output_stream.html#e9e15667878bde820b444232b838cc64">New</a> (/*[in]*/ IOutputStream* stream, /*[in]*/ Int32 windowBits, /*[out]*/ IGZipOutputStream **pIGZipOutputStream)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">创建一个从指定输入流读取数据的文件压缩流。  <a href="#e9e15667878bde820b444232b838cc64"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="interface_c_gzip_output_stream.html#4d89e3aefef852d73a12de5a7ecbbcf1">New</a> (/*[in]*/ IOutputStream* stream, /*[in]*/ Int32 windowBits, /*[in]*/ BufferOf&lt;Byte&gt; dictionary, /*[out]*/ IGZipOutputStream **pIGZipOutputStream)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">创建一个从指定输入流读取数据的文件压缩流。  <a href="#4d89e3aefef852d73a12de5a7ecbbcf1"></a><br></td></tr>
</table>
<hr><a name="_details"></a><h2>详细描述</h2>
该类实现了IGZipOutputStream接口。 <hr><h2>成员函数文档</h2>
<a class="anchor" name="c8b98a0fda9c62cd55a8d31b5db06cfb"></a><!-- doxytag: member="CFileInputStream::New" ref="c8b98a0fda9c62cd55a8d31b5db06cfb" args="([in] AString fileName,[out] IGZipOutputStream **pIGZipOutputStream)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">CGZipOutputStream::New           </td>
          <td>(</td>
          <td class="paramtype">[in] IOutputStream* </td>
          <td class="paramname"> <em>stream</em>, </td>
        </tr>

        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">[out] IGZipOutputStream **&nbsp;</td>
          <td class="paramname"> <em>pIGZipOutputStream</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
创建一个从指定输入流读取数据的文件压缩流。
<p>
<dl compact><dt><b>参数:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"><tt>[in]</tt>&nbsp;</td><td valign="top"><em>stream</em>&nbsp;</td><td>- 指定的输出流。 </td></tr>
    <tr><td valign="top"><tt>[out]</tt>&nbsp;</td><td valign="top"><em>pIGZipOutputStream</em>&nbsp;</td><td>- 指向所创建的文件压缩流接口的二级指针。 </td></tr>
  </table>
</dl>

</div>
</div><p>
<a class="anchor" name="e9e15667878bde820b444232b838cc64"></a><!-- doxytag: member="CFileInputStream::New" ref="e9e15667878bde820b444232b838cc64" args="([in] WString fileName,[out] IGZipOutputStream **pIGZipOutputStream)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">CGZipOutputStream::New           </td>
          <td>(</td>
          <td class="paramtype">[in] IOutputStream*</td>
          <td class="paramname"> <em>stream</em>, </td>
        </tr>
        
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">[in] Int32 </td>
          <td class="paramname"> <em>windowBits</em>,</td><td>&nbsp;</td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">[in] Int32 </td>
          <td class="paramname"> <em>compressLevel</em>,</td><td>&nbsp;</td>
        </tr>   
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">[in] Int32 </td>
          <td class="paramname"> <em>memoryUsageLevel</em>,</td><td>&nbsp;</td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">[in] CompressStrategy </td>
          <td class="paramname"> <em>strategy</em>,</td><td>&nbsp;</td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">[out] IGZipOutputStream **&nbsp;</td>
          <td class="paramname"> <em>pIGZipOutputStream</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
创建一个从指定输入流读取数据的文件压缩流。
<p>
<dl compact><dt><b>参数:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"><tt>[in]</tt>&nbsp;</td><td valign="top"><em>stream</em>&nbsp;</td><td>- 指定的输出流。 </td></tr>
    <tr><td valign="top"><tt>[in]</tt>&nbsp;</td><td valign="top"><em>windowBits</em>&nbsp;</td><td>- 压缩窗口的大小（历史缓冲区的大小）对2取对数。 取值范围在8~15，在损失内存的情况下值越大压缩效果越好，默认值为15。当windowBits取8~15，表示产生的压缩数据包含zlib的头部和尾部。windowBits也可以取-15~-8，即-windowBIts，表示压缩将产生的数据不包含zlib头部和尾部，也不包含adler32效验码。当windowBits + 16，则会在产生的压缩数据加上gzip的头部和尾部。</td></tr>
    <tr><td valign="top"><tt>[in]</tt>&nbsp;</td><td valign="top"><em>compressLevel</em>&nbsp;</td><td>- 表示压缩级别。取值范围0~9。当compressLevel为1时压缩速度最快。当compressLevel为9时压缩效果最好。当compressLevel为0时则不压缩（相当于复制）。默认值为6。 </td></tr>
    <tr><td valign="top"><tt>[in]</tt>&nbsp;</td><td valign="top"><em>memoryUsageLevel</em>&nbsp;</td><td>-  根据内部压缩状态申请相应大小的内存。取值范围在1~9.当memoryUsageLevel为1时使用内存最少，但是速度慢，且会降低压缩率。当memoryUsageLevel为9时使用内存最大，速度最佳。默认值为8. </td></tr>
    <tr><td valign="top"><tt>[in]</tt>&nbsp;</td><td valign="top"><em>strategy</em>&nbsp;</td><td>- 调整压缩算法。CompressStrategy_DEFAULT : 默认的方法，用于处理一般数据。
CompressStrategy_FILTERED : 处理由过滤器或预测器生成的数据。
CompressStrategy_HUFFMAN : 强制仅使用霍夫曼编码。（不进行字符串匹配）
CompressStrategy_RLE : 行程编码，为PNG图像数据提供更好的压缩效果。
CompressStrategy_FIXED : 禁止使用动态霍夫曼编码，允许对特殊的应用使用简单的解码器。效果介于CompressStrategy_DEFAULT和CompressStrategy_HUFFMAN之间。
</td></tr>
    <tr><td valign="top"><tt>[out]</tt>&nbsp;</td><td valign="top"><em>pIGZipOutputStream</em>&nbsp;</td><td>- 指向所创建的文件压缩流接口的二级指针。 </td></tr>
  </table>
</dl>

</div>
</div><p>
<a class="anchor" name="4d89e3aefef852d73a12de5a7ecbbcf1"></a><!-- doxytag: member="CFileInputStream::New" ref="4d89e3aefef852d73a12de5a7ecbbcf1" args="([in] IBasicFile *file,[out] IGZipOutputStream **pIGZipOutputStream)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">CGZipOutputStream::New           </td>
          <td>(</td>
          <td class="paramtype">[in] IIOutputStream*</td>
          <td class="paramname"> <em>stream</em>, </td>
        </tr>
        
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">[in] Int32 </td>
          <td class="paramname"> <em>windowBits</em>,</td><td>&nbsp;</td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">[in] Int32 </td>
          <td class="paramname"> <em>compressLevel</em>,</td><td>&nbsp;</td>
        </tr>   
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">[in] Int32 </td>
          <td class="paramname"> <em>memoryUsageLevel</em>,</td><td>&nbsp;</td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">[in] CompressStrategy </td>
          <td class="paramname"> <em>strategy</em>,</td><td>&nbsp;</td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">[in] BufferOf&lt;Byte&gt; </td>
          <td class="paramname"> <em>dictionary</em>,</td><td>&nbsp;</td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">[out] IGZipOutputStream **&nbsp;</td>
          <td class="paramname"> <em>pIGZipOutputStream</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
创建一个从指定输入流读取数据的文件压缩流。
<p>
<dl compact><dt><b>参数:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"><tt>[in]</tt>&nbsp;</td><td valign="top"><em>stream</em>&nbsp;</td><td>- 指定的输出流。 </td></tr>
    <tr><td valign="top"><tt>[in]</tt>&nbsp;</td><td valign="top"><em>windowBits</em>&nbsp;</td><td>- 压缩窗口的大小（历史缓冲区的大小）对2取对数。 取值范围在8~15，在损失内存的情况下值越大压缩效果越好，默认值为15。当windowBits取8~15，表示产生的压缩数据包含zlib的头部和尾部。windowBits也可以取-15~-8，即-windowBIts，表示压缩将产生的数据不包含zlib头部和尾部，也不包含adler32效验码。当windowBits + 16，则会在产生的压缩数据加上gzip的头部和尾部。</td></tr>
    <tr><td valign="top"><tt>[in]</tt>&nbsp;</td><td valign="top"><em>compressLevel</em>&nbsp;</td><td>- 表示压缩级别。取值范围0~9。当compressLevel为1时压缩速度最快。当compressLevel为9时压缩效果最好。当compressLevel为0时则不压缩（相当于复制）。默认值为6。 </td></tr>
    <tr><td valign="top"><tt>[in]</tt>&nbsp;</td><td valign="top"><em>memoryUsageLevel</em>&nbsp;</td><td>-  根据内部压缩状态申请相应大小的内存。取值范围在1~9.当memoryUsageLevel为1时使用内存最少，但是速度慢，且会降低压缩率。当memoryUsageLevel为9时使用内存最大，速度最佳。默认值为8. </td></tr>
    <tr><td valign="top"><tt>[in]</tt>&nbsp;</td><td valign="top"><em>strategy</em>&nbsp;</td><td>- 调整压缩算法。CompressStrategy_DEFAULT : 默认的方法，用于处理一般数据。
CompressStrategy_FILTERED : 处理由过滤器或预测器生成的数据。
CompressStrategy_HUFFMAN : 强制仅使用霍夫曼编码。（不进行字符串匹配）
CompressStrategy_RLE : 行程编码，为PNG图像数据提供更好的压缩效果。
CompressStrategy_FIXED : 禁止使用动态霍夫曼编码，允许对特殊的应用使用简单的解码器。效果介于CompressStrategy_DEFAULT和CompressStrategy_HUFFMAN之间。
</td></tr>
    <tr><td valign="top"><tt>[in]</tt>&nbsp;</td><td valign="top"><em>dictionary</em>&nbsp;</td><td>- 设置字典，压缩和解压时的设置必须相同。 </td></tr>

    <tr><td valign="top"><tt>[out]</tt>&nbsp;</td><td valign="top"><em>pIGZipOutputStream</em>&nbsp;</td><td>- 指向所创建的文件压缩流接口的二级指针。 </td></tr>
  </table>
</dl>

</div>
</div><p>
<script>footer("chinese")</script>

</body>
</html>
