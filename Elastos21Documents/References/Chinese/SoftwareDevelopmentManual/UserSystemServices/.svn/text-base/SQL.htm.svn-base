<!--==========================================================================-->
<!-- Copyright (c) 2000-2008,  Elastos, Inc.  All Rights Reserved.-->
<!--==========================================================================-->

<html>
<head>
<title>SQL基础 </title>
<meta http-equiv="Content-Type" content="text/html; charset=gb2312">
<script src="/xsl/docstyles.js"></script>
</head>

<body>
<h2>什么是数据库 </h2>
    <p>数据库是一个以某种有组织的方式存储的数据集合。理解数据库的一种最简单的办法是将其想象为一个文件柜。此文件柜是一个存放数据的物理位置，不管数据是什么以及如何组织。 </p>
<h3>表 </h3>
    <p>在你将资料放入自己的文件柜时，并不是随便将它们扔进某个抽屉就完事了，而是在文件柜中创建文件，然后将相关的资料放入特定的文件中。在数据库领域中，这种文件称为表。表是一种结构化的文件，可用来存储某种特定类型的数据。表可以保存顾客清单、产品目录，或者其他信息清单。 </p>
    <p>表具有一些特性，这些特性定义了数据在表中如何存储，如可以存储什么样的数据，数据如何分解，各部分信息如何命名，等等信息。描述表的这组信息就是所谓的模式，模式可以用来描述数据库中特定的表以及整个数据库（和其中表的关系）。</p>
<h3>列和数据类型 </h3>
    <p>表由列组成。列中存储着表中某部分的信息。 </p>
    <p>数据库中每个列都有相应的数据类型。数据类型定义列可以存储的数据种类。例如，如果列中存储的为数字（或许是订单中的物品数），则相应的数据类型应该为数值类型。如果列中存储的是日期、文本、注释、金额等，则应该用恰当的数据类型规定出来。 </p>
<h3>行 </h3>
    <p>表中的数据是按行存储的；所保存的每个记录存储在自己的行内。 </p>
<h3>主键 </h3>
    <p>一列（或一组列），其值能够唯一标识表中每个行。 </p>
    <p>表中的任何列都可以作为主键，只要它满足以下条件： </p>
    <p>&nbsp;&nbsp;&nbsp;任意两行都不具有相同的主键值； </p>
    <p>&nbsp;&nbsp;&nbsp;每个行都必须具有一个主键值（主键列不允许NULL值）； </p>
    <p>&nbsp;&nbsp;&nbsp;主键列中的值不允许修改或更新； </p>
    <p>&nbsp;&nbsp;&nbsp;主键值不能重用（如果某行从表中删除，它的主键不能赋给以后的新行）。 </p>
    <p>主键通常定义在表的一列上，但这并不是必需的，也可以一起使用多个列作为主键。在使用多列作为主键时，上述条件必须应用到构成主键的所有列，所有列值的组合必须是唯一的（但单个列的值可以不唯一）。 </p>
<h2>什么是SQL </h2>
    <p>SQL是结构化查询语言（Structured Query Language）的缩写。SQL是一种专门用来与数据库通信的语言。与其他语言（如英语或Java或Visual Basic这样的程序设计语言）不一样，SQL由很少的词构成，这是有意而为的。设计SQL的目的是很好地完成一项任务――提供一种从数据库中读写数据的简单有效的方法。</p>
    <p>SQL有如下的优点： </p>
    <p>&nbsp;&nbsp; &nbsp;SQL不是某个特定数据库供应商专有的语言。几乎所有重要的DBMS都支持SQL，所以，学习此语言使你几乎能与所有数据库打交道。 </p>
    <p>&nbsp;&nbsp; &nbsp;SQL简单易学。它的语句全都是由有很强描述性的英语单词组成，而且这些单词的数目不多。 </p>
    <p>&nbsp;&nbsp; &nbsp;SQL尽管看上去很简单，但它实际上是一种强有力的语言，灵活使用其语言元素，可以进行非常复杂和高级的数据库操作。 </p>
<script>footer("chinese")</script>
</body>
</html>

