<?xml version="1.0" encoding="GB2312"?>
    <?xml:stylesheet type="text/xsl" href="/xsl/xsl_c/methodmanual.xsl"?><manpage>
<volume>图形系统</volume>
<method>CRadioButton::New </method>
    <description>
        <para>
            创建一个 RadioButton 对象。
        </para>
    </description>
    <syntax>
        <return_val> ECode </return_val>
        <parameters>
            <api_param>
                <param_inout>[in]</param_inout>
                <param_type> WString </param_type>
                <param_name> caption </param_name>
                <param_note>
                    <para>
RadioButton 显示的文字                    </para>
                </param_note>
            </api_param>
            <api_param>
                <param_inout>[in]</param_inout>
                <param_type> Int32  </param_type>
                <param_name> style </param_name>
                <param_note>
                    <para>
RadioButton 的风格，详见 <link url="../../datatype/ControlStyle.htm">ControlStyle</link> 和 <link url="../../datatype/CheckButtonStyle.htm">CheckButtonStyle。</link>
不同风格可以通过“|”（或）配合使用</para>
                </param_note>
            </api_param>
            <api_param>
                <param_inout>[in]</param_inout>
                <param_type> Int32  </param_type>
                <param_name> x </param_name>
                <param_note>
                    <para>
RadioButton 的左顶点在其父类控件中的横坐标                     </para>
                </param_note>
            </api_param>
            <api_param>
                <param_inout>[in]</param_inout>
                <param_type> Int32  </param_type>
                <param_name> y </param_name>
                <param_note>
                    <para>
RadioButton 的左顶点在其父类控件中的纵坐标                     </para>
                </param_note>
            </api_param>
            <api_param>
                <param_inout>[in]</param_inout>
                <param_type> Int32  </param_type>
                <param_name> width </param_name>
                <param_note>
                    <para>
RadioButton 的宽度                    </para>
                </param_note>
            </api_param>
            <api_param>
                <param_inout>[in]</param_inout>
                <param_type> Int32  </param_type>
                <param_name> height </param_name>
                <param_note>
                    <para>
RadioButton 的高度                    </para>
                </param_note>
            </api_param>
            <api_param>
                <param_inout>[in]</param_inout>
                <param_type> IControl *  </param_type>
                <param_name> parent </param_name>
                <param_note>
                    <para>
RadioButton 的父类控件接口指针                     </para>
                </param_note>
            </api_param>
            <api_param>
                <param_inout>[out]</param_inout>
                <param_type> IRadioButton**   </param_type>
                <param_name> radiobutton </param_name>
                <param_note>
<para>指向 <link url="../../interface/IRadioButton.htm">IRadioButton</link> 接口指针的指针，
用于获取 IRadioButton 接口指针</para>
                </param_note>
            </api_param>                                                             
        </parameters>
    </syntax>

<return>
    <table>
	        <th>
	    	    <td>常见返回值 </td>
	    	    <td>描述</td>
	        </th>
	        <tr>
	    	    <td>NOERROR</td>
	    	    <td>CheckBox 创建成功</td>
	        </tr>
	        <tr>
	    	    <td>E_INVALID_ARGUMENT</td>
	    	    <td>参数无效</td>
	        </tr>
	    </table>
    <para>其它参见<link url="../../../../../../car_technology/fundamental/development_environment/car/ECode.htm">ECode</link>相关帮助。</para>
</return>

<remarks>
	  <para>
	  	  当创建了一个 RadioButton 对象后，就可以获取 <link url="../../interface/IRadioButton.htm">IRadioButton</link> 接口指针，通过该接口指针，您就可以调用给种方法对该 RadioButton 设置各种属性值。
	  </para>
	  <para>
	  	  默认情况下 RadioButton 的 Button 和文本都左对齐，能够自动选择。
	  </para>
	  <para>
	  	  若将 RadioButton 使用了 CheckButtonStyle_AutoCheck 风格，则当选择单选按钮时，将自动清除该组中的所有其他单选按钮，即被选择的按钮的 Checked 属性将被置为 true，其他按钮的 Checked 属性被置为 false。若 RadioButton 使用了 CheckButtonStyle_ManualCheck 风格，则点击单选按钮时不会自动显示为被选中，需要通过 <link url="../../interface/JCheckButtonEvents/Click.htm">Click</link> 回调事件的事件处理函数中为选中的按钮以及取消选中的按钮分别调用 <link url="../../interface/IRadioButton/SetChecked.htm">SetChecked</link> 方法，将前者的 Checked 属性设为 true，后者的 Checked 属性设为 false。通常仅当使用验证代码确保选定的单选按钮是允许的选项时，才使用 CheckButtonStyle_ManualCheck 风格。
	  </para>
	  <para>
	  	  通过 caption 参数可以设置 RadioButton 上显示的文字，如果文本超出 RadioButton 宽度或 RadioButton 无法容纳文本的总体高度，则将剪裁文本。文本的外观受 <link url="../../datatype/CheckButtonStyle.htm">CheckButtonStyle</link> 和 <link url="../../../graphics/class/CFont.htm">Font</link> 控制。有关更多信息请参考：<link url="../../reference/SetText.htm">如何设置控件所显示的文本</link>。
	  </para>
</remarks>
<references>
    <reference>
        <ref_name>CRadioButton 类介绍</ref_name>
        <ref_url>../RadioButton</ref_url>
    </reference>
    <reference>
        <ref_name>IRadioButton 接口方法列表</ref_name>
        <ref_url>../../interface/IRadioButton</ref_url>
    </reference>
    <reference>
        <ref_name>RadioButton 的回调事件</ref_name>
        <ref_url>../../interface/RadioButtonEvents</ref_url>
    </reference>
    <reference>
        <ref_name>如何设置控件所显示的文本</ref_name>
        <ref_url>../../reference/SetText</ref_url>
    </reference>
</references>
</manpage>