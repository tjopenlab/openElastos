<!--==========================================================================-->
<!-- Copyright (c) 2000-2008,  Elastos, Inc.  All Rights Reserved.-->
<!--==========================================================================-->

<html><meta http-equiv="Content-Type" content="text/html; charset=gb2312">
<head>
<title>ProgressBar</title>
<script src="/xsl/docstyles.js"></script>
</head>
<body>
<center><h2><b>ProgressBar</b></h2></center>
<small><p><b>头文件：</b>ElControls.h
<p><b>程序库：</b>ElControls.dll
（<b>备注：</b>当在 CAR 文件中通过 <a class="doxygen" href="../../../../../car_technology/fundamental/development_environment/car/keywords/keywords_importlib.htm">importlib</a> 引入 ElControls.dll 时，则无需在源文件中添加“include &lt;ElControls.h&gt;”该句；若 ElControls.dll 是在 sources 文件中引入的，则需要在源文件中添加“include &lt;ElControls.h&gt;”该句。有关更多信息请参考：<a class="doxygen" href="../../../../../car_technology/car.htm">CAR 编程入门</a>）</small>
<hr size="1">
<h4><li><b>详细描述：</b></h3>
<center> <img src="images/ProgressBar_Smooth.jpg"></center>
<center><small>ProgressBar 图例 1（style = ProgressBarStyle_Smooth）</small></center>
<center> <img src="images/ProgressBar_Block.jpg"></center>
<center><small>ProgressBar 图例 2（style = ProgressBarStyle_Smooth）</small></center>
<p>进度栏控件。ProgressBar 控件以二种样式中的一种指示较长操作的进度：连续填充的连续栏（见图例 1）和分步递增的分段块（见图例 2），同时 ProgressBar 控件可以水平方向显示也可以垂直方向显示，显示的风格通过 <a class="doxygen" href="CProgressBar/CProgressBar_New.htm">构造函数</a> 中 style 参数设置。
<p>ProgressBar 控件通常在应用程序执行诸如下载文件或搜索文件等任务时使用。如果没有视觉提示，应用程序的用户可能会认为应用程序不响应。通过在应用程序中使用 ProgressBar，可以警告用户应用程序正在执行冗长的任务且应用程序仍在响应。
<p>通过 <a class="doxygen" href="../interface/IProgressBar/SetMaximum.htm">SetMaximum</a> 和 <a class="doxygen" href="../interface/ISliderBar/SetMinimum.htm">SetMinimum</a> 方法可以定义两个值的范围用以表现任务的进度。Minimum 通常设置为 0，Maximum 通常设置为指示任务完成的值。例如，若要正确显示复制一组文件时的进度，Maximum 应设置成要复制的文件的总数。应用程序在完成操作的过程中的进度可以通过 <a class="doxygen" href="../interface/ISliderBar/SetValue.htm">SetValue</a> 方法设置。ProgressBar 显示的值仅仅是近似于 Value 的当前值。根据 ProgressBar 的大小和 Value 的值来确定何时显示下一个块或增加栏大小。
<p><b>注意：</b>ProgressBar 必须放在一个 <a class="doxygen" href="Form.htm">Form</a> 内，或者 ProgressBar 的 parent 控件在一个 Form 内。
<hr size="1">
<h4><li><b>CProgressBar类封装图：</b></font></h4>
<center> <img src="images/CProgressBar.jpg"> </center>
        <p>如图所示，JControlEvents（通用回调事件接口）、JSliderBarEvents 为回调事件接口，用户可以通过 AddXXXCallback 的方法为 ProgressBar 注册回调事件，当该 XXX 事件发生时，相应的回调处理函数会被调用。当销毁一个对象前，需要调用 RemoveXXXCallback 取消该事件。具体 Callbak 机制的介绍，详见 Elastos 编程入门中 Callback 这节。
        <p>当使用 <a class="doxygen" href="CProgressBar/CProgressBar_New.htm">New</a> 方法创建了一个 ProgressBar 对象后，可以获得 <a class="doxygen" href="../interface/IProgressBar.htm">IProgressBar</a> 接口指针，通过该接口指针用户可以调用接口内的方法对 ProgressBar 进行一系列操作。

<hr size="1">
<h4><li><b>构造函数：</b></font></h4>
<table>
<thead><td>名称</td><td class="memitem">说明</td></thead>
<tr><td><a class="doxygen" href="CProgressBar/CProgressBar_New.htm">CProgressBar::New</as></td><td>创建一个 ProgressBar 对象</td></tr>
</table>
<h4><li><b><a class="doxygen" href="../interface/IProgressBar.htm">IProgressBar 接口方法列表</a></b></font></h4>
<ul><p><b>注：</b>IProgressBar 接口继承于 <a class="doxygen" href="../interface/ISliderBar.htm">ISliderBar</a> 接口。</ul>
<h4><li><b><a class="doxygen" href="../interface/ProgressBarEvents.htm">ProgressBar 回调事件列表</a></b></font></h4>

<hr size="1">
<h4><li><b>示例</b></font></h4>

<script>footer("chinese")</script>
</body>
</html>