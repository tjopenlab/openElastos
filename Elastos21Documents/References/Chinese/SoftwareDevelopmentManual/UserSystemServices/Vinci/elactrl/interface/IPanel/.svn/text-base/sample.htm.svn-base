<!--==========================================================================-->
<!-- Copyright (c) 2000-2007,  Elastos, Inc.  All Rights Reserved.-->
<!--==========================================================================-->

<html>
<head>
<title>Í¼ÐÎ¿Ø¼þIPanel</title>
<meta http-equiv="Content-Type" content="text/html; charset=gb2312">
<script src="/xsl/docstyles.js"></script>
</head>

<body>

<h2> IPanel ·¶Àý³ÌÐò </h2>

<pre>
//==========================================================================
// Copyright (c) 2000-2007,  Elastos, Inc.  All Rights Reserved.
//==========================================================================

<h3> CPanelDemo.h </h3>
#include &quot;_CPanelDemo.h&quot;
class CPanelDemo : public _CPanelDemo
{
public:
    CPanelDemo();

    ~CPanelDemo();

    CARAPI AtEntry(
        /* [in] */ EzArray<WString> argcv);

    CARAPI AtExit();

    CARAPI OnClick(
        /* [in] */ IButton* pIObject);

private:
    IForm        *m_pMainForm;
    IPanel       *m_pIPanel;
    IPanel       *m_pIPanel2;
    IButton      *m_pIButton;
    IButton      *m_pIButtonExit;
    IListBox     *m_pIListbox;
    IComboBox    *m_pIComboBox;
};

<h3> CPanelDemo.cpp </h3>
#include &quot;CPanelDemo.h&quot;
#include &quot;_CPanelDemo.cpp&quot;
#include &lt;stdio.h&gt;

CPanelDemo::CPanelDemo()
{
    m_pMainForm    = NULL;
    m_pIPanel      = NULL;
    m_pIButton     = NULL;
    m_pIButtonExit = NULL;
    m_pIListbox    = NULL;
    m_pIComboBox   = NULL;
    m_pIPanel2     = NULL;
}

CPanelDemo::~CPanelDemo()
{
    if (m_pIPanel != NULL)
        m_pIPanel->Release();

    if (m_pMainForm != NULL)
        m_pMainForm->Release();

    if (m_pIComboBox != NULL)
        m_pIComboBox->Release();

    if (m_pIButton != NULL)
        m_pIButton->Release();

    if (m_pIListbox != NULL)
        m_pIListbox->Release();

    if (m_pIButtonExit != NULL)
        m_pIButtonExit->Release();

    if (m_pIPanel2 != NULL)
        m_pIPanel2->Release();

}

ECode CPanelDemo::AtEntry(
        /* [in] */ EzArray < WString > argcv)
{
    ECode ec;

    ec = CForm::New(&m_pMainForm);
    if (FAILED(ec)) {
        prInt32f("Create Form failed, the ec = 0x%08x\n", ec);
        return ec;
    }

    ec = m_pMainForm->Init(ControlStyle_Visible, L"MAIN",
                    0, 0, 240, 320,  NULL);
    if (FAILED(ec)) {
        prInt32f("Init Form failed, the ec = 0x%08x\n", ec);
        return ec;
    }

    ec = CPanel::New(&m_pIPanel);
    if (FAILED(ec)) {
        prInt32f("Create Panel failed, the ec = 0x%08x\n", ec);
        return ec;
    }

    ec = m_pIPanel->Init(ControlStyle_VScroll|ControlStyle_Visible,
                    L"panel", 10, 10, 220, 300, m_pMainForm);
    if (FAILED(ec)) {
        prInt32f("Init Panel failed, the ec = 0x%08x\n", ec);
        return ec;
    }

    ec = CPanel::New(&m_pIPanel2);
    if (FAILED(ec)) {
        prInt32f("Create Panel2 failed, the ec = 0x%08x\n", ec);
        return ec;
    }

    ec = m_pIPanel2->Init(ControlStyle_VScroll|ControlStyle_Visible,
                    L"panel2", 10, 20, 180, 270,  m_pIPanel);
    if (FAILED(ec)) {
        prInt32f("Init Panel2 failed, the ec = 0x%08x\n", ec);
        return ec;
    }

    ec = CButton::New(&m_pIButton);
    if (FAILED(ec)) {
        prInt32f("Create Button failed, the ec = 0x%08x\n", ec);
        return ec;
    }

    ec = m_pIButton->Init(ControlStyle_Visible,
            L"button", -10, 0, 80, 30,  m_pIPanel2);
    if (FAILED(ec)) {
        prInt32f("Init Button failed, the ec = 0x%08x\n", ec);
        return ec;
    }

    ec = CListBox::New(&m_pIListbox);
    if (FAILED(ec)) {
       prInt32f("Create ListBox failed, the ec = 0x%08x\n", ec);
        return ec;
    }

    ec = m_pIListbox->Init(ControlStyle_VScroll,
            L"lb", 60, 260, 50, 80,  m_pIPanel2);
    if (FAILED(ec)) {
        prInt32f("Init ListBox failed, the ec = 0x%08x\n", ec);
        return ec;
    }

    ec = m_pIListbox->InsertItem(0, L"123");
    if(FAILED(ec)) {
        return ec;
    }
    ec = m_pIListbox->InsertItem(0, L"456");
    if(FAILED(ec)) {
        return ec;
    }
    ec = m_pIListbox->InsertItem(0, L"789");
    if(FAILED(ec)) {
        return ec;
    }
    ec = m_pIListbox->InsertItem(0, L"987");
    if(FAILED(ec)) {
        return ec;
    }
    ec = m_pIListbox->InsertItem(0, L"654");
    if(FAILED(ec)) {
        return ec;
    }
    ec = m_pIListbox->InsertItem(0, L"321");
    if(FAILED(ec)) {
        return ec;
    }

    ec = CButton::New(&m_pIButtonExit);
    if (FAILED(ec)) {
        prInt32f("Create ExitButton failed, the ec = 0x%08x\n", ec);
        return ec;
    }

    ec = m_pIButtonExit->Init(0, L"Exit", 60, 30, 80, 30,  m_pIPanel2);
    if (FAILED(ec)) {
        prInt32f("Init ExitButton failed, the ec = 0x%08x\n", ec);
        return ec;
    }

    CButton::AddClickCallback(m_pIButtonExit,
                 this, &CPanelDemo::OnClick);

    ec = CComboBox::New(&m_pIComboBox);
    if (FAILED(ec)) {
        prInt32f("Create ComboBox failed, the ec = 0x%08x\n", ec);
        return ec;
    }

    ec = m_pIComboBox->Init(ControlStyle_Visible,
                            L"combobox", 60, 70, 75, 60,  m_pIPanel2);
    if (FAILED(ec)) {
        prInt32f("Init ComboBox failed, the ec = 0x%08x\n", ec);
        return ec;
    }

    ec = m_pIComboBox->InsertItem(0, L"123");
    if(FAILED(ec)) {
        return ec;
    }
    ec = m_pIComboBox->InsertItem(1, L"456");
    if(FAILED(ec)) {
        return ec;
    }
    ec = m_pIComboBox->InsertItem(2, L"789");
    if(FAILED(ec)) {
        return ec;
    }
    ec = m_pIComboBox->InsertItem(3, L"890");
    if(FAILED(ec)) {
        return ec;
    }

    m_pMainForm->Show();

    return NOERROR;
}

ECode CPanelDemo::AtExit()
{
    return NOERROR;
}

ECode CPanelDemo::OnClick(
        /* [in] */ IButton* pIObject)
{
    m_pMainForm->Close();

    return NOERROR;
}

</pre>

<script>footer("KoreTide")</script>
</body>
</html>