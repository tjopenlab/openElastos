<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=UTF-8">
<title>Elastos Database: TChkDemo.cpp源文件</title>
<link href="doxygen.css" rel="stylesheet" type="text/css">
<link href="tabs.css" rel="stylesheet" type="text/css">
</head><body>

<h1>TChkDemo.cpp</h1><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 <span class="comment">//==========================================================================</span>
<a name="l00002"></a>00002 <span class="comment">// Copyright (c) 2000-2007,  Elastos, Inc.  All Rights Reserved.</span>
<a name="l00003"></a>00003 <span class="comment">//==========================================================================</span>
<a name="l00004"></a>00004 
<a name="l00005"></a>00005 <span class="preprocessor">#include "<a class="code" href="TChkDemo_h.htm">TChkDemo.h</a>"</span>
<a name="l00006"></a>00006 <span class="preprocessor">#include "_TChkDemo.cpp"</span>
<a name="l00007"></a>00007 <span class="preprocessor">#include &lt;stdio.h&gt;</span>
<a name="l00008"></a>00008 
<a name="l00009"></a>00009 TChkDemo::TChkDemo()
<a name="l00010"></a>00010 {
<a name="l00011"></a>00011     m_pIThread   = NULL;
<a name="l00012"></a>00012     m_pICheckBox = NULL;
<a name="l00013"></a>00013     m_pMainForm  = NULL;
<a name="l00014"></a>00014     m_pIBtnClose = NULL;
<a name="l00015"></a>00015     m_pIButton   = NULL;
<a name="l00016"></a>00016 }
<a name="l00017"></a>00017 
<a name="l00018"></a>00018 TChkDemo::~TChkDemo()
<a name="l00019"></a>00019 {
<a name="l00020"></a>00020     <span class="keywordflow">if</span> (m_pMainForm) {
<a name="l00021"></a>00021         m_pMainForm-&gt;Release();
<a name="l00022"></a>00022     }
<a name="l00023"></a>00023 
<a name="l00024"></a>00024     <span class="keywordflow">if</span> (m_pICheckBox) {
<a name="l00025"></a>00025         m_pICheckBox-&gt;Release();
<a name="l00026"></a>00026     }
<a name="l00027"></a>00027 
<a name="l00028"></a>00028     <span class="keywordflow">if</span> (m_pIBtnClose) {
<a name="l00029"></a>00029         m_pIBtnClose-&gt;Release();
<a name="l00030"></a>00030     }
<a name="l00031"></a>00031 
<a name="l00032"></a>00032     <span class="keywordflow">if</span> (m_pIButton) {
<a name="l00033"></a>00033         m_pIButton-&gt;Release();
<a name="l00034"></a>00034     }
<a name="l00035"></a>00035 
<a name="l00036"></a>00036     <span class="keywordflow">if</span> (m_pIThread) {
<a name="l00037"></a>00037         m_pIThread-&gt;Abort();
<a name="l00038"></a>00038         m_pIThread-&gt;Release();
<a name="l00039"></a>00039     }
<a name="l00040"></a>00040 }
<a name="l00041"></a>00041 
<a name="l00042"></a>00042 ECode ThreadWork(<span class="keywordtype">void</span> *pArg)
<a name="l00043"></a>00043 {
<a name="l00044"></a>00044     IForm* pForm = (IForm*)pArg;
<a name="l00045"></a>00045     pForm-&gt;NotifyUserEvent(0, 1, 2);
<a name="l00046"></a>00046     <span class="keywordflow">return</span> NOERROR;
<a name="l00047"></a>00047 }
<a name="l00048"></a>00048 
<a name="l00049"></a>00049 ECode TChkDemo::Main(
<a name="l00050"></a>00050     <span class="comment">/* [in] */</span> <span class="keyword">const</span> BufferOf&lt;WString&gt; &amp; argcv)
<a name="l00051"></a>00051 {
<a name="l00052"></a>00052 
<a name="l00054"></a>00054     CForm::New(L<span class="stringliteral">"MAIN"</span>, 0, 0, 0, 200, 180,  NULL,&amp;m_pMainForm);
<a name="l00055"></a>00055 
<a name="l00056"></a>00056     CForm::AddUserEventCallback(m_pMainForm,
<a name="l00057"></a>00057                  <span class="keyword">this</span>,
<a name="l00058"></a>00058                  &amp;TChkDemo::OnNotifyUserEvent);
<a name="l00059"></a>00059 
<a name="l00061"></a>00061     CCheckBox::New(L<span class="stringliteral">"CheckBox"</span>, 0, 50, 50, 80, 30, m_pMainForm,&amp;m_pICheckBox);
<a name="l00062"></a>00062 
<a name="l00063"></a>00063     CCheckBox::AddCheckedChangedCallback(m_pICheckBox,
<a name="l00064"></a>00064                  <span class="keyword">this</span>,
<a name="l00065"></a>00065                  &amp;TChkDemo::OnCheckedChanged);
<a name="l00066"></a>00066 
<a name="l00067"></a>00067     m_pICheckBox-&gt;SetChecked(TRUE);
<a name="l00068"></a>00068 
<a name="l00070"></a>00070     CButton::New(L<span class="stringliteral">"Thread"</span>, 0, 100, 0, 80, 30,  m_pMainForm,&amp;m_pIButton);
<a name="l00071"></a>00071 
<a name="l00072"></a>00072     CButton::AddClickCallback(m_pIButton,
<a name="l00073"></a>00073                  <span class="keyword">this</span>, &amp;TChkDemo::OnCreateThread);
<a name="l00074"></a>00074 
<a name="l00076"></a>00076     CButton::New(L<span class="stringliteral">"Exit"</span>, 0, 0, 0, 80, 30, m_pMainForm,&amp;m_pIBtnClose);
<a name="l00077"></a>00077 
<a name="l00078"></a>00078     CButton::AddClickCallback(m_pIBtnClose,
<a name="l00079"></a>00079                  <span class="keyword">this</span>, &amp;TChkDemo::OnClose);
<a name="l00080"></a>00080 
<a name="l00081"></a>00081     m_pMainForm-&gt;Show();
<a name="l00082"></a>00082 
<a name="l00083"></a>00083     <span class="keywordflow">return</span> NOERROR;
<a name="l00084"></a>00084 }
<a name="l00085"></a>00085 
<a name="l00086"></a>00086 ECode TChkDemo::OnCheckedChanged(
<a name="l00087"></a>00087     <span class="comment">/* [in] */</span> PInterface pIObject)
<a name="l00088"></a>00088 {
<a name="l00089"></a>00089     printf(<span class="stringliteral">"OnCheckStateChanged:this = %x\n"</span>, pIObject);
<a name="l00090"></a>00090     <span class="keywordflow">return</span> NOERROR;
<a name="l00091"></a>00091 }
<a name="l00092"></a>00092 
<a name="l00093"></a>00093 ECode TChkDemo::OnClose(
<a name="l00094"></a>00094     <span class="comment">/* [in] */</span> PInterface pIObject)
<a name="l00095"></a>00095 {
<a name="l00096"></a>00096     m_pMainForm-&gt;Close();
<a name="l00097"></a>00097 
<a name="l00098"></a>00098     <span class="keywordflow">return</span> NOERROR;
<a name="l00099"></a>00099 }
<a name="l00100"></a>00100 
<a name="l00101"></a>00101 ECode TChkDemo::OnCreateThread(
<a name="l00102"></a>00102     <span class="comment">/* [in] */</span> PInterface pIObject)
<a name="l00103"></a>00103 {
<a name="l00104"></a>00104     CThread::New((PThreadMain)ThreadWork, (<span class="keywordtype">void</span> *)m_pMainForm, 0, &amp;m_pIThread);
<a name="l00105"></a>00105 
<a name="l00106"></a>00106     <span class="keywordflow">return</span> NOERROR;
<a name="l00107"></a>00107 }
<a name="l00108"></a>00108 
<a name="l00109"></a>00109 ECode TChkDemo::OnNotifyUserEvent(
<a name="l00110"></a>00110         <span class="comment">/* [in] */</span> PInterface pIObject,
<a name="l00111"></a>00111         <span class="comment">/* [in] */</span> Int32 event,
<a name="l00112"></a>00112         <span class="comment">/* [in] */</span> Int32 param1,
<a name="l00113"></a>00113         <span class="comment">/* [in] */</span> Int32 param2)
<a name="l00114"></a>00114 {
<a name="l00115"></a>00115     <span class="keywordflow">switch</span> (event) {
<a name="l00116"></a>00116         <span class="keywordflow">case</span> 0:
<a name="l00117"></a>00117             printf(<span class="stringliteral">"======= %d   %d =========\n"</span>, event, param1);
<a name="l00118"></a>00118             <span class="keywordflow">break</span>;
<a name="l00119"></a>00119         <span class="keywordflow">case</span> 1:
<a name="l00120"></a>00120             m_pICheckBox-&gt;SetChecked(FALSE);
<a name="l00121"></a>00121             printf(<span class="stringliteral">"------- %d   %d ---------\n"</span>, event, param1);
<a name="l00122"></a>00122             <span class="keywordflow">break</span>;
<a name="l00123"></a>00123         <span class="keywordflow">case</span> 2:
<a name="l00124"></a>00124             printf(<span class="stringliteral">"******* %d   %d *********\n"</span>, event, param1);
<a name="l00125"></a>00125             <span class="keywordflow">break</span>;
<a name="l00126"></a>00126         <span class="keywordflow">default</span>:
<a name="l00127"></a>00127             printf(<span class="stringliteral">"jalksdfklasdflk;askldflkasdlfk\n"</span>);
<a name="l00128"></a>00128     }
<a name="l00129"></a>00129 
<a name="l00130"></a>00130     <span class="keywordflow">return</span> NOERROR;
<a name="l00131"></a>00131 }
<a name="l00132"></a>00132 
<a name="l00133"></a>00133 ECode TChkDemo::Quit()
<a name="l00134"></a>00134 {
<a name="l00135"></a>00135     <span class="keywordflow">return</span> NOERROR;
<a name="l00136"></a>00136 }
<a name="l00137"></a>00137 
<a name="l00138"></a>00138 ECode TChkDemo::Terminate()
<a name="l00139"></a>00139 {
<a name="l00140"></a>00140     <span class="keywordflow">return</span> NOERROR;
<a name="l00141"></a>00141 }
<a name="l00142"></a>00142 
<a name="l00143"></a>00143 ECode TChkDemo::Activate()
<a name="l00144"></a>00144 {
<a name="l00145"></a>00145     <span class="comment">// TODO: Add your code here</span>
<a name="l00146"></a>00146     <span class="keywordflow">return</span> E_NOT_IMPLEMENTED;
<a name="l00147"></a>00147 }
<a name="l00148"></a>00148 
<a name="l00149"></a>00149 ECode TChkDemo::Deactivate()
<a name="l00150"></a>00150 {
<a name="l00151"></a>00151     <span class="comment">// TODO: Add your code here</span>
<a name="l00152"></a>00152     <span class="keywordflow">return</span> E_NOT_IMPLEMENTED;
<a name="l00153"></a>00153 }
<a name="l00154"></a>00154 
<a name="l00155"></a>00155 ECode TChkDemo::IsActivated(
<a name="l00156"></a>00156     <span class="comment">/* [out] */</span> Boolean * pActivated)
<a name="l00157"></a>00157 {
<a name="l00158"></a>00158     <span class="comment">// TODO: Add your code here</span>
<a name="l00159"></a>00159     <span class="keywordflow">return</span> E_NOT_IMPLEMENTED;
<a name="l00160"></a>00160 }
<a name="l00161"></a>00161 
<a name="l00162"></a>00162 ECode TChkDemo::Snooze()
<a name="l00163"></a>00163 {
<a name="l00164"></a>00164     <span class="comment">// TODO: Add your code here</span>
<a name="l00165"></a>00165     <span class="keywordflow">return</span> E_NOT_IMPLEMENTED;
<a name="l00166"></a>00166 }
<a name="l00167"></a>00167 
<a name="l00168"></a>00168 ECode TChkDemo::Wakeup()
<a name="l00169"></a>00169 {
<a name="l00170"></a>00170     <span class="comment">// TODO: Add your code here</span>
<a name="l00171"></a>00171     <span class="keywordflow">return</span> E_NOT_IMPLEMENTED;
<a name="l00172"></a>00172 }
<a name="l00173"></a>00173 
<a name="l00174"></a>00174 ECode TChkDemo::GetName(
<a name="l00175"></a>00175     WStringBuf * name)
<a name="l00176"></a>00176 {
<a name="l00177"></a>00177     <span class="comment">// TODO: Add your code here</span>
<a name="l00178"></a>00178     <span class="keywordflow">return</span> E_NOT_IMPLEMENTED;
<a name="l00179"></a>00179 }
</pre></div><hr size="1">
</body>
</html>
