<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=UTF-8">
<title>Elastos Database: TBttnDemo.cpp源文件</title>
<link href="doxygen.css" rel="stylesheet" type="text/css">
<link href="tabs.css" rel="stylesheet" type="text/css">
</head><body>

<h1>TBttnDemo.cpp</h1><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 <span class="comment">//==========================================================================</span>
<a name="l00002"></a>00002 <span class="comment">// Copyright (c) 2000-2007,  Elastos, Inc.  All Rights Reserved.</span>
<a name="l00003"></a>00003 <span class="comment">//==========================================================================</span>
<a name="l00004"></a>00004 
<a name="l00005"></a>00005 <span class="preprocessor">#include &lt;stdio.h&gt;</span>
<a name="l00006"></a>00006 <span class="preprocessor">#include "<a class="code" href="TBttnDemo_h.htm">TBttnDemo.h</a>"</span>
<a name="l00007"></a>00007 <span class="preprocessor">#include "_TBttnDemo.cpp"</span>
<a name="l00008"></a>00008 
<a name="l00009"></a>00009 <span class="preprocessor">#define kprintf printf</span>
<a name="l00010"></a>00010 <span class="preprocessor"></span>
<a name="l00011"></a>00011 <span class="preprocessor">#include "grafixcomm.h"</span>
<a name="l00012"></a>00012 
<a name="l00013"></a>00013 TBttnDemo::TBttnDemo()
<a name="l00014"></a>00014 {
<a name="l00015"></a>00015     m_pMainForm      = NULL;
<a name="l00016"></a>00016     m_pICrystal      = NULL;
<a name="l00017"></a>00017     m_pIBtnClose     = NULL;
<a name="l00018"></a>00018     m_pINormal       = NULL;
<a name="l00019"></a>00019     m_pIGradient     = NULL;
<a name="l00020"></a>00020 }
<a name="l00021"></a>00021 
<a name="l00022"></a>00022 TBttnDemo::~TBttnDemo()
<a name="l00023"></a>00023 {
<a name="l00024"></a>00024     <span class="keywordflow">if</span> (m_pMainForm) {
<a name="l00025"></a>00025         m_pMainForm-&gt;Release();
<a name="l00026"></a>00026     }
<a name="l00027"></a>00027 
<a name="l00028"></a>00028     <span class="keywordflow">if</span> (m_pICrystal) {
<a name="l00029"></a>00029         m_pICrystal-&gt;Release();
<a name="l00030"></a>00030     }
<a name="l00031"></a>00031 
<a name="l00032"></a>00032     <span class="keywordflow">if</span> (m_pIBtnClose) {
<a name="l00033"></a>00033         m_pIBtnClose-&gt;Release();
<a name="l00034"></a>00034     }
<a name="l00035"></a>00035 
<a name="l00036"></a>00036     <span class="keywordflow">if</span> (m_pINormal) {
<a name="l00037"></a>00037         m_pINormal-&gt;Release();
<a name="l00038"></a>00038     }
<a name="l00039"></a>00039 
<a name="l00040"></a>00040     <span class="keywordflow">if</span> (m_pIGradient) {
<a name="l00041"></a>00041         m_pIGradient-&gt;Release();
<a name="l00042"></a>00042     }
<a name="l00043"></a>00043 }
<a name="l00044"></a>00044 
<a name="l00045"></a>00045 ECode TBttnDemo::Main(
<a name="l00046"></a>00046     <span class="comment">/* [in] */</span> <span class="keyword">const</span> BufferOf&lt;WString&gt; &amp; argcv)
<a name="l00047"></a>00047 {
<a name="l00048"></a>00048     ECode ec = CForm::New(L<span class="stringliteral">"MAIN"</span>, 0,
<a name="l00049"></a>00049                0, 0, 240, 320, NULL,&amp;m_pMainForm);
<a name="l00050"></a>00050     <span class="keywordflow">if</span> (FAILED(ec)) {
<a name="l00051"></a>00051         printf(<span class="stringliteral">"Create form failed, the ec = 0x%08x\n"</span>, ec);
<a name="l00052"></a>00052         <span class="keywordflow">return</span> ec;
<a name="l00053"></a>00053     }
<a name="l00054"></a>00054 
<a name="l00055"></a>00055     printf(<span class="stringliteral">"Create form succeeded\n"</span>);
<a name="l00056"></a>00056 
<a name="l00057"></a>00057     CForm::AddStylusPressedCallback(m_pMainForm,
<a name="l00058"></a>00058                  <span class="keyword">this</span>, &amp;TBttnDemo::OnStylusPressed);
<a name="l00059"></a>00059 
<a name="l00060"></a>00060     CButton::New(L<span class="stringliteral">"Exit"</span>, ButtonStyle_DownArrow,
<a name="l00061"></a>00061                  0, 0, 80, 30, m_pMainForm,&amp;m_pIBtnClose);
<a name="l00062"></a>00062 
<a name="l00063"></a>00063     CButton::AddClickCallback(m_pIBtnClose,
<a name="l00064"></a>00064                  <span class="keyword">this</span>, &amp;TBttnDemo::OnClose);
<a name="l00065"></a>00065 
<a name="l00066"></a>00066     CButton::New(L<span class="stringliteral">"Crystal"</span>, ButtonStyle_DownArrow | ButtonStyle_ArrowLeft,
<a name="l00067"></a>00067                 90, 150, 80, 30, m_pMainForm,&amp;m_pICrystal);
<a name="l00068"></a>00068 
<a name="l00069"></a>00069     CButton::AddClickCallback(m_pICrystal,
<a name="l00070"></a>00070                  <span class="keyword">this</span>, &amp;TBttnDemo::OnClick);
<a name="l00071"></a>00071 
<a name="l00072"></a>00072     CButton::New(L<span class="stringliteral">"Noraml"</span>, ButtonStyle_UpArrow | ButtonStyle_ArrowLeft,
<a name="l00073"></a>00073                 90, 40, 80, 30, m_pMainForm, &amp;m_pINormal);
<a name="l00074"></a>00074 
<a name="l00075"></a>00075     CButton::AddClickCallback(m_pINormal,
<a name="l00076"></a>00076                  <span class="keyword">this</span>, &amp;TBttnDemo::OnClick);
<a name="l00077"></a>00077 
<a name="l00078"></a>00078     CButton::New(L<span class="stringliteral">"Gradient"</span>, ButtonStyle_UpArrow,
<a name="l00079"></a>00079                 90, 90, 80, 30, m_pMainForm,&amp;m_pIGradient);
<a name="l00080"></a>00080 
<a name="l00081"></a>00081     CButton::AddGotFocusCallback(m_pIGradient,
<a name="l00082"></a>00082                 <span class="keyword">this</span>, &amp;TBttnDemo::OnGotFocus);
<a name="l00083"></a>00083 
<a name="l00084"></a>00084     CButton::AddLostFocusCallback(m_pIGradient,
<a name="l00085"></a>00085                 <span class="keyword">this</span>, &amp;TBttnDemo::OnLostFocus);
<a name="l00086"></a>00086 
<a name="l00087"></a>00087 
<a name="l00088"></a>00088     m_pMainForm-&gt;Show();
<a name="l00089"></a>00089 
<a name="l00090"></a>00090     <span class="keywordflow">return</span> NOERROR;
<a name="l00091"></a>00091 }
<a name="l00092"></a>00092 
<a name="l00093"></a>00093 ECode TBttnDemo::OnStylusPressed(
<a name="l00094"></a>00094     <span class="comment">/* [in] */</span> PInterface pIObject,
<a name="l00095"></a>00095     <span class="comment">/* [in] */</span> Int32 x,
<a name="l00096"></a>00096     <span class="comment">/* [in] */</span> Int32 y,
<a name="l00097"></a>00097     <span class="comment">/* [in] */</span> Int64 timestamp)
<a name="l00098"></a>00098 {
<a name="l00099"></a>00099     <span class="keywordflow">return</span> NOERROR;
<a name="l00100"></a>00100 }
<a name="l00101"></a>00101 
<a name="l00102"></a>00102 ECode TBttnDemo::OnClick(
<a name="l00103"></a>00103     <span class="comment">/* [in] */</span> PInterface pInterface)
<a name="l00104"></a>00104 {
<a name="l00105"></a>00105     IButton* pIObject = IButton::Probe(pInterface);
<a name="l00106"></a>00106 
<a name="l00107"></a>00107     <span class="keywordflow">if</span> (m_pINormal == pIObject) {
<a name="l00108"></a>00108         IGrafixMain* grafixMain;
<a name="l00109"></a>00109         <span class="keyword">static</span> Int32 direction = 1;
<a name="l00110"></a>00110         ECode ec = CGrafixMain::AcquireSingleton(&amp;grafixMain);
<a name="l00111"></a>00111         <span class="keywordflow">if</span> (GFX_FAILED(ec)) {
<a name="l00112"></a>00112             <span class="keywordflow">return</span> ec;
<a name="l00113"></a>00113         }
<a name="l00114"></a>00114 
<a name="l00115"></a>00115         ec = grafixMain-&gt;SetScreenOrientation(direction);
<a name="l00116"></a>00116         grafixMain-&gt;Release();
<a name="l00117"></a>00117         <span class="keywordflow">if</span> (GFX_FAILED(ec)) {
<a name="l00118"></a>00118             <span class="keywordflow">return</span> ec;
<a name="l00119"></a>00119         }
<a name="l00120"></a>00120 
<a name="l00121"></a>00121         direction++;
<a name="l00122"></a>00122         direction = direction % 4;
<a name="l00123"></a>00123     }
<a name="l00124"></a>00124     <span class="keywordflow">else</span> {
<a name="l00125"></a>00125         Boolean bEnable;
<a name="l00126"></a>00126         m_pINormal-&gt;IsEnabled(&amp;bEnable);
<a name="l00127"></a>00127         <span class="keywordflow">if</span> (bEnable == TRUE) {
<a name="l00128"></a>00128             m_pINormal-&gt;SetEnabled(FALSE);
<a name="l00129"></a>00129             m_pINormal-&gt;SetText(L<span class="stringliteral">"Disabled"</span>);
<a name="l00130"></a>00130         }
<a name="l00131"></a>00131         <span class="keywordflow">else</span> {
<a name="l00132"></a>00132             m_pINormal-&gt;SetEnabled(TRUE);
<a name="l00133"></a>00133             m_pINormal-&gt;SetText(L<span class="stringliteral">"Enabled"</span>);
<a name="l00134"></a>00134         }
<a name="l00135"></a>00135     }
<a name="l00136"></a>00136 
<a name="l00137"></a>00137     <span class="keywordflow">return</span> NOERROR;
<a name="l00138"></a>00138 }
<a name="l00139"></a>00139 
<a name="l00140"></a>00140 ECode TBttnDemo::OnClose(
<a name="l00141"></a>00141     <span class="comment">/* [in] */</span> PInterface pIObject)
<a name="l00142"></a>00142 {
<a name="l00143"></a>00143     m_pMainForm-&gt;Close();
<a name="l00144"></a>00144     <span class="keywordflow">return</span> NOERROR;
<a name="l00145"></a>00145 }
<a name="l00146"></a>00146 
<a name="l00147"></a>00147 ECode TBttnDemo::OnGotFocus(
<a name="l00148"></a>00148     <span class="comment">/* [in] */</span> PInterface pIObject)
<a name="l00149"></a>00149 {
<a name="l00150"></a>00150     printf(<span class="stringliteral">"TBttnDemo::OnGotFocus\n"</span>);
<a name="l00151"></a>00151     <span class="keywordflow">return</span> NOERROR;
<a name="l00152"></a>00152 }
<a name="l00153"></a>00153 
<a name="l00154"></a>00154 ECode TBttnDemo::OnLostFocus(
<a name="l00155"></a>00155     <span class="comment">/* [in] */</span> PInterface pIObject)
<a name="l00156"></a>00156 {
<a name="l00157"></a>00157     printf(<span class="stringliteral">"TBttnDemo::OnLostFocus\n"</span>);
<a name="l00158"></a>00158     <span class="keywordflow">return</span> NOERROR;
<a name="l00159"></a>00159 }
<a name="l00160"></a>00160 
<a name="l00161"></a>00161 ECode TBttnDemo::Quit()
<a name="l00162"></a>00162 {
<a name="l00163"></a>00163     <span class="keywordflow">return</span> NOERROR;
<a name="l00164"></a>00164 }
<a name="l00165"></a>00165 
<a name="l00166"></a>00166 ECode TBttnDemo::Terminate()
<a name="l00167"></a>00167 {
<a name="l00168"></a>00168     <span class="keywordflow">return</span> NOERROR;
<a name="l00169"></a>00169 }
<a name="l00170"></a>00170 
<a name="l00171"></a>00171 ECode TBttnDemo::Activate()
<a name="l00172"></a>00172 {
<a name="l00173"></a>00173     <span class="comment">// TODO: Add your code here</span>
<a name="l00174"></a>00174     <span class="keywordflow">return</span> E_NOT_IMPLEMENTED;
<a name="l00175"></a>00175 }
<a name="l00176"></a>00176 
<a name="l00177"></a>00177 ECode TBttnDemo::Deactivate()
<a name="l00178"></a>00178 {
<a name="l00179"></a>00179     <span class="comment">// TODO: Add your code here</span>
<a name="l00180"></a>00180     <span class="keywordflow">return</span> E_NOT_IMPLEMENTED;
<a name="l00181"></a>00181 }
<a name="l00182"></a>00182 
<a name="l00183"></a>00183 ECode TBttnDemo::IsActivated(
<a name="l00184"></a>00184     <span class="comment">/* [out] */</span> Boolean * pActivated)
<a name="l00185"></a>00185 {
<a name="l00186"></a>00186     <span class="comment">// TODO: Add your code here</span>
<a name="l00187"></a>00187     <span class="keywordflow">return</span> E_NOT_IMPLEMENTED;
<a name="l00188"></a>00188 }
<a name="l00189"></a>00189 
<a name="l00190"></a>00190 ECode TBttnDemo::Snooze()
<a name="l00191"></a>00191 {
<a name="l00192"></a>00192     <span class="comment">// TODO: Add your code here</span>
<a name="l00193"></a>00193     <span class="keywordflow">return</span> E_NOT_IMPLEMENTED;
<a name="l00194"></a>00194 }
<a name="l00195"></a>00195 
<a name="l00196"></a>00196 ECode TBttnDemo::Wakeup()
<a name="l00197"></a>00197 {
<a name="l00198"></a>00198     <span class="comment">// TODO: Add your code here</span>
<a name="l00199"></a>00199     <span class="keywordflow">return</span> E_NOT_IMPLEMENTED;
<a name="l00200"></a>00200 }
<a name="l00201"></a>00201 
<a name="l00202"></a>00202 ECode TBttnDemo::GetName(
<a name="l00203"></a>00203     WStringBuf * name)
<a name="l00204"></a>00204 {
<a name="l00205"></a>00205     <span class="comment">// TODO: Add your code here</span>
<a name="l00206"></a>00206     <span class="keywordflow">return</span> E_NOT_IMPLEMENTED;
<a name="l00207"></a>00207 }
</pre></div><hr size="1">
</body>
</html>
