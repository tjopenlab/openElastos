<?xml version="1.0" encoding="GB2312"?>
<?xml:stylesheet type="text/xsl" href="/xsl/xsl_c/apimanual.xsl"?>

<manpage>
    <sample url="sdk\operating_system\user_com_interface\elasock\sam05">ioctlsocket</sample>
    <volume>elasock API</volume>
    <title>ioctlsocket</title>
    <routine_idx>ElastosSocketIndex.htm</routine_idx>

    <description>
        <para>设置对套接口控制参数。</para>
    </description>

    <syntax>
        <return_val>int</return_val>
        <parameters>
            <api_param>
                <param_type>SOCKET</param_type>
                <param_name>s</param_name>
                <param_note>
                    <para>[in]套接口描述符</para>
                </param_note>
            </api_param>
            <api_param>
                <param_type>long</param_type>
                <param_name>request</param_name>
                <param_note>
                    <para>[in]请求类型（SIOCATMARK检查外带数据标识）</para>
                </param_note>
            </api_param>
            <api_param>
                <param_type>u_long *</param_type>
                <param_name>arg</param_name>
                <param_note>
                    <para>[in,out]如果套接口读有外带数据标识：参数arg被赋1，否则0</para>
                </param_note>
            </api_param>
        </parameters>
    </syntax>

    <return>
        <para>当程序执行成功时，返回0；否则返回SOCKET_ERROR，应用程序可调用<link url="WSAGetLastError.htm">WSAGetLastError()</link>，获取相应的错误代码。</para>
    </return>

    <remarks>
        <para>本函数可以用于任一状态的任一套接口。它用于设置或获取套接口相关的操作参数，而与具体的协议和通讯子系统无关。</para>        
        <para>ioctlsocket()功能类似BSD的ioctl()功能，第三个参数是一个指向返回值的指针。</para>
        <para>如果request命令字是SIOCGIFINDEX，则arg是指向ifreq结构体的指针，其中ifreq_ifr_name为要指定的netif接口的名字。</para>
        <para>request参数支持下列命令：</para>
        <para>FIONBIO</para>
        <para>允许或禁止套接口s的非堵塞模式。arg指向一个无符号长整型，如果允许非阻塞模式则arg值为非零，如禁止非阻塞模式则arg值为零。当创建一个套接口时，默认处于阻塞模式（即非阻塞模式被禁止）。这与BSD套接口是一致的。</para>
    </remarks>

    <requirements>
        <system>
            <system_name>
                Elastos 操作系统
            </system_name>
        </system>
        <headerfile>
            <file_name> winsock.h</file_name>
        </headerfile>
        <library>
            <lib_name> ElSocket.lib  </lib_name>
        </library>
    </requirements>

    <references>
        <reference>
            <ref_name>getsockopt</ref_name>
            <ref_url>getsockopt</ref_url>
        </reference>
        <reference>
            <ref_name>socket</ref_name>
            <ref_url>socket</ref_url>
        </reference>
        <reference>
            <ref_name>setsockopt</ref_name>
            <ref_url>setsockopt</ref_url>
        </reference>
        <reference>
            <ref_name>WSAStartup</ref_name>
            <ref_url>WSAStartup</ref_url>
        </reference>
    </references>
    <example>
    </example>
</manpage>
