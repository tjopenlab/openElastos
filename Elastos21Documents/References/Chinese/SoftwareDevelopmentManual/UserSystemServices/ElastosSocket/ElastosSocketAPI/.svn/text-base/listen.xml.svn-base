<?xml version="1.0" encoding="GB2312"?>
<?xml:stylesheet type="text/xsl" href="/xsl/xsl_c/apimanual.xsl"?>

<manpage>
    <sample url="sdk\operating_system\user_com_interface\elasock\sam01\server">listen</sample>
    <volume>elasock API</volume>
    <title>listen</title>
    <routine_idx>ElastosSocketIndex.htm</routine_idx>

    <description>
        <para>将套接口设为监听状态，准备被连接。</para>
    </description>

    <syntax>
        <return_val>int</return_val>
        <parameters>
            <api_param>
                <param_type>SOCKET</param_type>
                <param_name>s</param_name>
                <param_note>
                    <para>[in]已捆绑未连接的套接口。</para>
                </param_note>
            </api_param>
            <api_param>
                <param_type>int</param_type>
                <param_name>backlog</param_name>
                <param_note>
                    <para>[in]等待连接队列的最大长度。如果将该值设为SOMAXCONN，backlog将取最大值。</para>
                </param_note>
            </api_param>
        </parameters>
    </syntax>

    <return>
        <para>程序执行成功返回0；否则返回SOCKET_ERROR错误，应用程序可通过<link url="WSAGetLastError.htm">WSAGetLastError()</link>获取相应错误代码。</para>
        <para>非法值（小于1或大于5）会被舍入到最近的有效值。</para>
    </return>

    <remarks>
        <para>为了接受连接，先用<link url="socket.htm">socket()</link>创建一个套接口，使用<link url="bind.htm">bind()</link>将该套接口与一个本地地址绑定，然后使用listen()为申请进入的连接建立一个backlog变量，之后便可用<link url="accept.htm">accept()</link>接受连接。listen()仅适用于面向连接的套接口，例如SOCK_STREAM。外来的连接请求将被确认并排队，以等待服务器的接受。</para>
        <para>本函数特别适用于同一时刻有多个连接请求的服务器；如果一个连接请求到来时，队列已满，客户端将收到WSAECONNREFUSED错误。</para>
        <para>当没有可用的套接口时，listen()函数仍试图正常工作。后续的listen()或accept()调用会将待接受队列按当前或最近的backlog值重新填充，并恢复监听连接请求。</para>
        <para>同一个套接口中，一个应用程序可多次调用listen()。这样可以修改backlog变量的值。如果等待连接的数目大于更改后的backlog值，多余的连接将被重置并丢弃。</para>
    </remarks>

    <requirements>
        <system>
            <system_name>
                Elastos 操作系统
            </system_name>
        </system>
        <headerfile>
            <file_name> winsock.h</file_name>
        </headerfile>
        <library>
            <lib_name> ElSocket.lib  </lib_name>
        </library>
    </requirements>

    <references>
        <reference>
            <ref_name>accept</ref_name>
            <ref_url>accept</ref_url>
        </reference>
        <reference>
            <ref_name>bind</ref_name>
            <ref_url>bind</ref_url>
        </reference>
        <reference>
            <ref_name>connect</ref_name>
            <ref_url>connect</ref_url>
        </reference>
        <reference>
            <ref_name>socket</ref_name>
            <ref_url>socket</ref_url>
        </reference>
        <reference>
            <ref_name>WSAStartup</ref_name>
            <ref_url>WSAStartup</ref_url>
        </reference>
    </references>
    <example>
    </example>
</manpage>
