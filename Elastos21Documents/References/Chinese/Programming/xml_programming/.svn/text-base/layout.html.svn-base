<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=GB2312">
<title>module标签/控件参考</title>
<link href="doxygen.css" rel="stylesheet" type="text/css">
<link href="tabs.css" rel="stylesheet" type="text/css">
<script src="../../xsl/docstyles_for_doxgen.js"></script>
</head><body>
<!-- 制作者 Doxygen 1.5.4 -->
<div class="tabs">
  <ul>
    <li class="current"><a href="index.html"><span>首页</span></a></li>
    <li><a href="conlist.html"><span>非图形标签列表</span></a></li>
    <li><a href="annotated.html"><span>图形标签/控件列表</span></a></li>
    <li><a href="usertag.html"><span>用户自定义标签介绍</span></a></li>
    <li><a href="intro_css.htm"><span>级联式样式表CSS的功能支持</span></a></li>
  </ul>
</div>
<div class="tabs">
  <ul>
    <li><a href="index.html"><span>标签(控件)层次模型</span></a></li>
    <li><a href="form.html"><span>一般格式</span></a></li>
    <li class="current"><a href="manifest_introduce.html"><span>manifest配置文件介绍</span></a></li>
    <li><a href="sax.html"><span>XML解析器介绍</span></a></li>
  </ul>
</div>

<h1>layout节点参考</h1><!-- doxytag: class="window" -->
    <p>用于指定适应具体屏幕尺寸的应用解决方案，可使用多个此节点指定多个解决方案。使用时请确认已使用<a href="layouts.html">layouts</a>节点。

<hr><h2>命名空间</h2>
http://www.elastos.com/XmlGlue/Widgets
<hr>
	<table border="0" cellpadding="0" cellspacing="0">
<tr><td colspan="2"><br><h2>示例</h2></td></tr>
<table border="0" cellpadding="0" cellspacing="0"><tr><td class="memitem" valign="bottom">
<pre>
1 &lt;layouts&gt;
2     &lt;layout resolution="240*320" target="relPath1"/&gt;
3     &lt;layout resolution="320*240" target="relPath2"/&gt;
4    ...
5     &lt;layout resolution="*" target="relPath"/&gt; 
6 &lt;/layouts&gt;

</td></tr></table>
</table>
<hr>
<table border="0" cellpadding="0" cellspacing="0">
<tr><td colspan="2"><br><h2>属性</h2></td></tr>
基于以上示例，我们将介绍其属性：
<tr><td class="memItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><b>resolution</b></td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">屏幕的分辨率。如,resolution="240*320",resolution="320*240"等。</td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><b>targets</b></td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">已设定的分辨率下对应的UI layout（即该分辨率下的main.xgl）目录，且此目录相对于该应用的目录而言。</td></tr>
</table>
<p><b>备注：</b>
	<ol>
		<li>在实际运行过程中，首先遍历已设置layout节点的属性值，当检查到与当前显示的屏幕大小相符合的分辨率时将显示对应target目录的UI布局。若当前无相匹配的分辨率，则会取默认的layout节点的值，如上述示例第5行所示，此时"*"为一通配符，target目录指定为relPath以提供UI布局供当前的屏幕显示，这无疑提供了一种备用方案，以适应多屏幕显示的要求。
		<li>前面已说过，layouts,layout为可选节点，主要依赖于是否有提供多屏幕显示的需求。如果用户不使用这两个节点，即意味着默认使用现有的方式加载UI layout，即使用Widget根目录下的main.xgl，以兼容现有的应用。
		<li>Widget中所使用的相对路径都是相对于Widget的根目录。例如：如果有target目录A，其下有图片a.png，则如果用户使用了该图片，它的相对路径应该是 A\a.png，而不是a.png，即使他(她)在A\main.xgl里引用这个图片。
	<ol>			
 <script>footer("chinese")</script>
</body>
</html>
