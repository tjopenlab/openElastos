<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=GB2312">
<title>图形标签通用事件</title>
<link href="doxygen.css" rel="stylesheet" type="text/css">
<link href="tabs.css" rel="stylesheet" type="text/css">
<script src="../../xsl/docstyles_for_doxgen.js"></script>
</head><body>
<!-- 制作者 Doxygen 1.5.4 -->
<div class="tabs">
  <ul>
    <li><a href="index.html"><span>首页</span></a></li>
    <li><a href="conlist.html"><span>非图形标签列表</span></a></li>
    <li class="current"><a href="annotated.html"><span>图形标签/控件列表</span></a></li>
    <li><a href="usertag.html"><span>用户自定义标签介绍</span></a></li>
    <li><a href="intro_css.htm"><span>级联式样式表CSS的功能支持</span></a></li>
  </ul>
</div>
<div class="tabs">
  <ul>
    <li><a href="annotated.html"><span>图形标签(控件)列表</span></a></li>
    <li><a href="attribute.html"><span>图形标签通用属性</span></a></li>
    <li class="current"><a href="event.html"><span>图形标签通用事件</span></a></li>
    <li><a href="genstyle_8car.html"><span>图形标签通用风格</span></a></li>
  </ul>
</div>
<h1>图形标签通用事件</h1>
<p>所有通用事件列表
<table border="0" cellpadding="0" cellspacing="0">
<tr><td class="memItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="event.html#stylusPressed">stylusPressed</a></td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight2">鼠标按下事件。<br></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="event.html#stylusLifted">stylusLifted</a></td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight2">鼠标抬起事件。<br></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="event.html#stylusHeld">stylusHeld</a></td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight2">鼠标长按事件。<br></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="event.html#stylusReleased">stylusReleased</a></td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight2">鼠标长按后释放事件。<br></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="event.html#stylusMove">stylusMove</a></td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight2">鼠标移动事件。<br></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="event.html#fingerPressed">fingerPressed</a></td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight2">手指按下事件。<br></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="event.html#fingerLifted">fingerLifted</a></td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight2">手指抬起事件。<br></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="event.html#fingerHeld">fingerHeld</a></td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight2">手指长按事件。<br></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="event.html#fingerReleased">fingerReleased</a></td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight2">手指长按后释放事件。<br></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="event.html#fingerMove">fingerMove</a></td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight2">手指移动事件。<br></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="event.html#keyDown">keyDown</a></td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight2">键盘按下事件。<br></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="event.html#keyHeld">keyHeld</a></td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight2">键盘长按事件。<br></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="event.html#keyReleased">keyReleased</a></td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight2">键盘长按后释放事件。<br></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="event.html#keyChar">keyChar</a></td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight2">敲击键盘某个字符事件。<br></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="event.html#keyString">keyString</a></td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight2">敲击键盘特定字符串事件。<br></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="event.html#paint">paint</a></td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight2">响应绘图事件。<br></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="event.html#gotFocus">gotFocus</a></td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight2">控件获取焦点事件。<br></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="event.html#lostFocus">lostFocus</a></td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight2">控件失去焦点事件。<br></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="event.html#enabledChanged">enabledChanged</a></td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight2">控件可用状态改变事件。<br></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="event.html#visibleChanged">visibleChanged</a></td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight2">控件可见状态改变事件。<br></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="event.html#textChanged">textChanged</a></td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight2">控件文本改变事件。<br></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="event.html#fontChanged">fontChanged</a></td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight2">控件字体改变事件。<br></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="event.html#parentChanged">parentChanged</a></td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight2">控件父类控件改变事件。<br></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="event.html#hScroll">hScroll</a></td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight2">水平滚动条滚动事件。<br></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="event.html#vScroll">vScroll</a></td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight2">垂直滚动条滚动事件。<br></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="event.html#boundsChanged">boundsChanged</a></td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight2">控件边界改变事件。<br></td></tr>
</table>
<p>
在xml部分注册回调事件时，可以写一个具体的执行语句<sup><a href="#note1"><font color="red"><b>[注1]</b></font></a></sup>，也可以写在脚本中定义的事件处理函数。
   若在xml部分注册回调事件时，给该回调事件写了一个具体的执行语句，之后又在脚本中定义了该事件的事件处理函数，则触发该事件后会直接调用事件处理函数而忽略xml部分的具体的执行语句。
   具体在xml部分注册回调事件的方法，可参照如下代码，示例中为button注册了一个stylusPressed事件。
<table border="0" cellpadding="0" cellspacing="10">
<tr><td class="memitem" valign="bottom">
    &lt;button x:id="mybutton" x="80" y="120" width="50" height="30" <font color=red>stylusPressed="print('stylusPressed')"</font>/&gt;（事件发生时，若脚本中没有另外定义事件处理函数，执行该可执行语句）
</td></tr>
<tr><td class="memitem" valign="bottom">
    &lt;button x:id="mybutton" x="80" y="120" width="50" height="30" <font color=red>stylusPressed="onstylusPressed()"</font>/&gt;（事件发生时，执行事件处理函数）
</td></tr>
</table>
<p>
<a class="anchor" name="stylusPressed"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">stylusPressed</td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>
当按下鼠标时，产生stylusPressed事件。同时stylusPressed指定的事件处理程序将被执行。
<dl compact><dt><b>用法:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"><tt>[XML]</tt>&nbsp;</td><td valign="top">stylusPressed = <em>"可执行语句"</em></td></tr>
    <tr><td valign="top"><tt>[Script]</tt>&nbsp;</td><td valign="top"><em>Controlid.</em>stylusPressed = <em>Function</em></td></tr>
  </table>
</dl>

<dl compact><dt><b>示例: </b></dt><dd>
<table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"><tt>[XML]</tt>&nbsp;</td><td valign="top">&lt;button x:id="myButton" x="80" y="120" width="50" height="40" stylusPressed="print('stylusPressed')"/&gt;</td></tr>
    <tr><td valign="top"><tt>[Script]</tt>&nbsp;</td><td valign="top">
    <pre>function on_stylusPressed() {
...
...
}
myButton.stylusPressed = on_stylusPressed
</td></tr>
</table>
</dl>
</div>
</div><p>
	
<a class="anchor" name="stylusLifted"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">stylusLifted</td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>
当抬起鼠标时，产生stylusLifted事件。同时stylusLifted指定的事件处理程序将被执行。
<dl compact><dt><b>用法:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"><tt>[XML]</tt>&nbsp;</td><td valign="top">stylusLifted = <em>"可执行语句"</em></td></tr>
    <tr><td valign="top"><tt>[Script]</tt>&nbsp;</td><td valign="top"><em>Controlid.</em>stylusLifted = <em>Function</em></td></tr>
  </table>
</dl>

<dl compact><dt><b>示例: </b></dt><dd>
<table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"><tt>[XML]</tt>&nbsp;</td><td valign="top">&lt;button x:id="myButton" x="80" y="120" width="50" height="40" stylusLifted="print('stylusLifted')"/&gt;</td></tr>
    <tr><td valign="top"><tt>[Script]</tt>&nbsp;</td><td valign="top">
    <pre>function on_stylusLifted() {
...
...
}
myButton.stylusLifted = on_stylusLifted
</td></tr>
</table>
</dl>
</div>
</div><p>

<a class="anchor" name="stylusHeld"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">stylusHeld</td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>
当长按鼠标时，产生stylusHeld事件。同时stylusHeld指定的事件处理程序将被执行。
<dl compact><dt><b>用法:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"><tt>[XML]</tt>&nbsp;</td><td valign="top">stylusHeld = <em>"可执行语句"</em></td></tr>
    <tr><td valign="top"><tt>[Script]</tt>&nbsp;</td><td valign="top"><em>Controlid.</em>stylusHeld = <em>Function</em></td></tr>
  </table>
</dl>

<dl compact><dt><b>示例: </b></dt><dd>
<table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"><tt>[XML]</tt>&nbsp;</td><td valign="top">&lt;button x:id="myButton" x="80" y="120" width="50" height="40" stylusHeld="print('stylusHeld')"/&gt;</td></tr>
    <tr><td valign="top"><tt>[Script]</tt>&nbsp;</td><td valign="top">
    <pre>function on_stylusHeld() {
...
...
}
myButton.stylusHeld = on_stylusHeld
</td></tr>
</table>
</dl>
</div>
</div><p>

<a class="anchor" name="stylusReleased"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">stylusReleased</td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>
当长按鼠标后抬起时，产生stylusReleased事件。同时stylusReleased指定的事件处理程序将被执行。
<dl compact><dt><b>用法:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"><tt>[XML]</tt>&nbsp;</td><td valign="top">stylusReleased = <em>"可执行语句"</em></td></tr>
    <tr><td valign="top"><tt>[Script]</tt>&nbsp;</td><td valign="top"><em>Controlid.</em>stylusReleased = <em>Function</em></td></tr>
  </table>
</dl>

<dl compact><dt><b>示例: </b></dt><dd>
<table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"><tt>[XML]</tt>&nbsp;</td><td valign="top">&lt;button x:id="myButton" x="80" y="120" width="50" height="40" stylusReleased="print('stylusReleased')"/&gt;</td></tr>
    <tr><td valign="top"><tt>[Script]</tt>&nbsp;</td><td valign="top">
    <pre>function on_stylusReleased() {
...
...
}
myButton.stylusReleased = on_stylusReleased
</td></tr>
</table>
</dl>
</div>
</div><p>

<a class="anchor" name="stylusMove"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">stylusMove</td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>
当移动鼠标时，产生StylusMove事件。同时StylusMove指定的事件处理程序将被执行。
<dl compact><dt><b>用法:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"><tt>[XML]</tt>&nbsp;</td><td valign="top">StylusMove = <em>"可执行语句"</em></td></tr>
    <tr><td valign="top"><tt>[Script]</tt>&nbsp;</td><td valign="top"><em>Controlid.</em>StylusMove = <em>Function</em></td></tr>
  </table>
</dl>

<dl compact><dt><b>示例: </b></dt><dd>
<table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"><tt>[XML]</tt>&nbsp;</td><td valign="top">&lt;form x:id="myform" x="0" y="0" width="240" height="320" StylusMove="print('StylusMove')"/&gt;</td></tr>
    <tr><td valign="top"><tt>[Script]</tt>&nbsp;</td><td valign="top">
    <pre>function on_StylusMove() {
...
...
}
myform.StylusMove = on_StylusMove
</td></tr>
</table>
</dl>
</div>
</div><p>

<a class="anchor" name="fingerPressed"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">fingerPressed</td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>
当手指按下时，产生fingerPressed事件。同时fingerPressed指定的事件处理程序将被执行。
<dl compact><dt><b>用法:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"><tt>[XML]</tt>&nbsp;</td><td valign="top">fingerPressed = <em>"可执行语句"</em></td></tr>
    <tr><td valign="top"><tt>[Script]</tt>&nbsp;</td><td valign="top"><em>Controlid.</em>fingerPressed = <em>Function</em></td></tr>
  </table>
</dl>

<dl compact><dt><b>示例: </b></dt><dd>
<table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"><tt>[XML]</tt>&nbsp;</td><td valign="top">&lt;form x:id="myform" x="0" y="0" width="240" height="320" fingerPressed="print('fingerPressed')"/&gt;</td></tr>
    <tr><td valign="top"><tt>[Script]</tt>&nbsp;</td><td valign="top">
    <pre>function on_fingerPressed() {
...
...
}
myform.fingerPressed = on_fingerPressed
</td></tr>
</table>
</dl>
</div>
</div><p>

<a class="anchor" name="fingerLifted"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">fingerLifted</td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>
当手指抬起时，产生fingerLifted事件。同时fingerLifted指定的事件处理程序将被执行。
<dl compact><dt><b>用法:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"><tt>[XML]</tt>&nbsp;</td><td valign="top">fingerLifted = <em>"可执行语句"</em></td></tr>
    <tr><td valign="top"><tt>[Script]</tt>&nbsp;</td><td valign="top"><em>Controlid.</em>fingerLifted = <em>Function</em></td></tr>
  </table>
</dl>

<dl compact><dt><b>示例: </b></dt><dd>
<table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"><tt>[XML]</tt>&nbsp;</td><td valign="top">&lt;form x:id="myform" x="0" y="0" width="240" height="320" fingerLifted="print('fingerLifted')"/&gt;</td></tr>
    <tr><td valign="top"><tt>[Script]</tt>&nbsp;</td><td valign="top">
    <pre>function on_fingerLifted() {
...
...
}
myform.fingerLifted = on_fingerLifted
</td></tr>
</table>
</dl>
</div>
</div><p>

<a class="anchor" name="fingerHeld"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">fingerHeld</td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>
当手指长按时，产生fingerHeld事件。同时fingerHeld指定的事件处理程序将被执行。
<dl compact><dt><b>用法:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"><tt>[XML]</tt>&nbsp;</td><td valign="top">fingerHeld = <em>"可执行语句"</em></td></tr>
    <tr><td valign="top"><tt>[Script]</tt>&nbsp;</td><td valign="top"><em>Controlid.</em>fingerHeld = <em>Function</em></td></tr>
  </table>
</dl>

<dl compact><dt><b>示例: </b></dt><dd>
<table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"><tt>[XML]</tt>&nbsp;</td><td valign="top">&lt;form x:id="myform" x="0" y="0" width="240" height="320" fingerHeld="print('fingerHeld')"/&gt;</td></tr>
    <tr><td valign="top"><tt>[Script]</tt>&nbsp;</td><td valign="top">
    <pre>function on_fingerHeld() {
...
...
}
myform.fingerHeld = on_fingerHeld
</td></tr>
</table>
</dl>
</div>
</div><p>

<a class="anchor" name="fingerReleased"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">fingerReleased</td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>
当手指长按后抬起时，产生fingerReleased事件。同时fingerReleased指定的事件处理程序将被执行。
<dl compact><dt><b>用法:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"><tt>[XML]</tt>&nbsp;</td><td valign="top">fingerReleased = <em>"可执行语句"</em></td></tr>
    <tr><td valign="top"><tt>[Script]</tt>&nbsp;</td><td valign="top"><em>Controlid.</em>fingerReleased = <em>Function</em></td></tr>
  </table>
</dl>

<dl compact><dt><b>示例: </b></dt><dd>
<table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"><tt>[XML]</tt>&nbsp;</td><td valign="top">&lt;form x:id="myform" x="0" y="0" width="240" height="320" fingerReleased="print('fingerReleased')"/&gt;</td></tr>
    <tr><td valign="top"><tt>[Script]</tt>&nbsp;</td><td valign="top">
    <pre>function on_fingerReleased() {
...
...
}
myform.fingerReleased = on_fingerReleased
</td></tr>
</table>
</dl>
</div>
</div><p>

<a class="anchor" name="fingerMove"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">fingerMove</td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>
当移动手指时，产生fingerMove事件。同时fingerMove指定的事件处理程序将被执行。
<dl compact><dt><b>用法:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"><tt>[XML]</tt>&nbsp;</td><td valign="top">fingerMove = <em>"可执行语句"</em></td></tr>
    <tr><td valign="top"><tt>[Script]</tt>&nbsp;</td><td valign="top"><em>Controlid.</em>fingerMove = <em>Function</em></td></tr>
  </table>
</dl>

<dl compact><dt><b>示例: </b></dt><dd>
<table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"><tt>[XML]</tt>&nbsp;</td><td valign="top">&lt;form x:id="myform" x="0" y="0" width="240" height="320" fingerMove="print('fingerMove')"/&gt;</td></tr>
    <tr><td valign="top"><tt>[Script]</tt>&nbsp;</td><td valign="top">
    <pre>function on_fingerMove() {
...
...
}
myform.fingerMove = on_fingerMove
</td></tr>
</table>
</dl>
</div>
</div><p>

<a class="anchor" name="keyDown"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">keyDown</td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>
当按下键盘时，产生keyDown事件。同时keyDown指定的事件处理程序将被执行。
<dl compact><dt><b>用法:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"><tt>[XML]</tt>&nbsp;</td><td valign="top">keyDown = <em>"可执行语句"</em></td></tr>
    <tr><td valign="top"><tt>[Script]</tt>&nbsp;</td><td valign="top"><em>Controlid.</em>keyDown = <em>Function</em></td></tr>
  </table>
</dl>

<dl compact><dt><b>示例: </b></dt><dd>
<table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"><tt>[XML]</tt>&nbsp;</td><td valign="top">&lt;form x:id="myform" x="0" y="0" width="240" height="320" keyDown="print('keyDown')"/&gt;</td></tr>
    <tr><td valign="top"><tt>[Script]</tt>&nbsp;</td><td valign="top">
    <pre>function on_keyDown() {
...
...
}
myform.keyDown = on_keyDown
</td></tr>
</table>
</dl>
</div>
</div><p>

<a class="anchor" name="keyHeld"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">keyHeld</td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>
当长按键盘时，产生keyHeld事件。同时keyHeld指定的事件处理程序将被执行。
<dl compact><dt><b>用法:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"><tt>[XML]</tt>&nbsp;</td><td valign="top">keyHeld = <em>"可执行语句"</em></td></tr>
    <tr><td valign="top"><tt>[Script]</tt>&nbsp;</td><td valign="top"><em>Controlid.</em>keyHeld = <em>Function</em></td></tr>
  </table>
</dl>

<dl compact><dt><b>示例: </b></dt><dd>
<table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"><tt>[XML]</tt>&nbsp;</td><td valign="top">&lt;form x:id="myform" x="0" y="0" width="240" height="320" keyHeld="print('keyHeld')"/&gt;</td></tr>
    <tr><td valign="top"><tt>[Script]</tt>&nbsp;</td><td valign="top">
    <pre>function on_keyHeld() {
...
...
}
myform.keyHeld = on_keyHeld
</td></tr>
</table>
</dl>
</div>
</div><p>

<a class="anchor" name="keyReleased"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">keyReleased</td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>
当长按键盘后释放时，产生keyReleased事件。同时keyReleased指定的事件处理程序将被执行。
<dl compact><dt><b>用法:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"><tt>[XML]</tt>&nbsp;</td><td valign="top">keyReleased = <em>"可执行语句"</em></td></tr>
    <tr><td valign="top"><tt>[Script]</tt>&nbsp;</td><td valign="top"><em>Controlid.</em>keyReleased = <em>Function</em></td></tr>
  </table>
</dl>

<dl compact><dt><b>示例: </b></dt><dd>
<table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"><tt>[XML]</tt>&nbsp;</td><td valign="top">&lt;form x:id="myform" x="0" y="0" width="240" height="320" keyReleased="print('keyReleased')"/&gt;</td></tr>
    <tr><td valign="top"><tt>[Script]</tt>&nbsp;</td><td valign="top">
    <pre>function on_keyReleased() {
...
...
}
myform.keyReleased = on_keyReleased
</td></tr>
</table>
</dl>
</div>
</div><p>

<a class="anchor" name="keyChar"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">keyChar</td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>
当敲击键盘某个字符时，产生keyChar事件。同时keyChar指定的事件处理程序将被执行。
<dl compact><dt><b>用法:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"><tt>[XML]</tt>&nbsp;</td><td valign="top">keyChar = <em>"可执行语句"</em></td></tr>
    <tr><td valign="top"><tt>[Script]</tt>&nbsp;</td><td valign="top"><em>Controlid.</em>keyChar = <em>Function</em></td></tr>
  </table>
</dl>

<dl compact><dt><b>示例: </b></dt><dd>
<table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"><tt>[XML]</tt>&nbsp;</td><td valign="top">&lt;form x:id="myform" x="0" y="0" width="240" height="320" keyChar="print('keyChar')"/&gt;</td></tr>
    <tr><td valign="top"><tt>[Script]</tt>&nbsp;</td><td valign="top">
    <pre>function on_keyChar() {
...
...
}
myform.keyChar = on_keyChar
</td></tr>
</table>
</dl>
</div>
</div><p>

<a class="anchor" name="keyString"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">keyString</td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>
当敲击键盘特定字符串时，产生keyString事件。同时keyString指定的事件处理程序将被执行。
<dl compact><dt><b>用法:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"><tt>[XML]</tt>&nbsp;</td><td valign="top">keyString = <em>"可执行语句"</em></td></tr>
    <tr><td valign="top"><tt>[Script]</tt>&nbsp;</td><td valign="top"><em>Controlid.</em>keyString = <em>Function</em></td></tr>
  </table>
</dl>

<dl compact><dt><b>示例: </b></dt><dd>
<table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"><tt>[XML]</tt>&nbsp;</td><td valign="top">&lt;form x:id="myform" x="0" y="0" width="240" height="320" keyString="print('keyString')"/&gt;</td></tr>
    <tr><td valign="top"><tt>[Script]</tt>&nbsp;</td><td valign="top">
    <pre>function on_keyString() {
...
...
}
myform.keyString = on_keyString
</td></tr>
</table>
</dl>
</div>
</div><p>

<a class="anchor" name="paint"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">paint</td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>
响应绘图事件。
<dl compact><dt><b>用法:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"><tt>[XML]</tt>&nbsp;</td><td valign="top">paint = <em>"可执行语句"</em></td></tr>
    <tr><td valign="top"><tt>[Script]</tt>&nbsp;</td><td valign="top"><em>Controlid.</em>paint = <em>Function</em></td></tr>
  </table>
</dl>

<dl compact><dt><b>示例: </b></dt><dd>
<table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"><tt>[XML]</tt>&nbsp;</td><td valign="top">&lt;form x:id="myform" x="0" y="0" width="240" height="320" paint="print('paint')"/&gt;</td></tr>
    <tr><td valign="top"><tt>[Script]</tt>&nbsp;</td><td valign="top">
    <pre>function on_paint() {
...
...
}
myform.paint = on_paint
</td></tr>
</table>
</dl>
</div>
</div><p>

<a class="anchor" name="gotFocus"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">gotFocus</td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>
当控件获得焦点时，产生gotFocus事件。同时gotFocus指定的事件处理程序将被执行。
<dl compact><dt><b>用法:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"><tt>[XML]</tt>&nbsp;</td><td valign="top">gotFocus = <em>"可执行语句"</em></td></tr>
    <tr><td valign="top"><tt>[Script]</tt>&nbsp;</td><td valign="top"><em>Controlid.</em>gotFocus = <em>Function</em></td></tr>
  </table>
</dl>

<dl compact><dt><b>示例: </b></dt><dd>
<table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"><tt>[XML]</tt>&nbsp;</td><td valign="top">&lt;button x:id="mybutton" x="50" y="50" width="70" height="40" gotFocus="print('gotFocus')"/&gt;</td></tr>
    <tr><td valign="top"><tt>[Script]</tt>&nbsp;</td><td valign="top">
    <pre>function on_gotFocus() {
...
...
}
mybutton.gotFocus = on_gotFocus
</td></tr>
</table>
</dl>
</div>
</div><p>

<a class="anchor" name="lostFocus"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">lostFocus</td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>
当控件失去焦点时，产生lostFocus事件。同时lostFocus指定的事件处理程序将被执行。
<dl compact><dt><b>用法:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"><tt>[XML]</tt>&nbsp;</td><td valign="top">lostFocus = <em>"可执行语句"</em></td></tr>
    <tr><td valign="top"><tt>[Script]</tt>&nbsp;</td><td valign="top"><em>Controlid.</em>lostFocus = <em>Function</em></td></tr>
  </table>
</dl>

<dl compact><dt><b>示例: </b></dt><dd>
<table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"><tt>[XML]</tt>&nbsp;</td><td valign="top">&lt;button x:id="mybutton" x="50" y="50" width="70" height="40" lostFocus="print('lostFocus')"/&gt;</td></tr>
    <tr><td valign="top"><tt>[Script]</tt>&nbsp;</td><td valign="top">
    <pre>function on_lostFocus() {
...
...
}
mybutton.lostFocus = on_lostFocus
</td></tr>
</table>
</dl>
</div>
</div><p>

<a class="anchor" name="enabledChanged"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enabledChanged</td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>
当控件可用状态改变时，产生enabledChanged事件。同时enabledChanged指定的事件处理程序将被执行。
<dl compact><dt><b>用法:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"><tt>[XML]</tt>&nbsp;</td><td valign="top">enabledChanged = <em>"可执行语句"</em></td></tr>
    <tr><td valign="top"><tt>[Script]</tt>&nbsp;</td><td valign="top"><em>Controlid.</em>enabledChanged = <em>Function</em></td></tr>
  </table>
</dl>

<dl compact><dt><b>示例: </b></dt><dd>
<table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"><tt>[XML]</tt>&nbsp;</td><td valign="top">&lt;button x:id="mybutton" x="50" y="50" width="70" height="40" enabledChanged="print('enabledChanged')"/&gt;</td></tr>
    <tr><td valign="top"><tt>[Script]</tt>&nbsp;</td><td valign="top">
    <pre>function on_enabledChanged() {
...
...
}
mybutton.enabledChanged = on_enabledChanged
</td></tr>
</table>
</dl>
</div>
</div><p>

<a class="anchor" name="visibleChanged"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">visibleChanged</td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>
当控件可视状态改变时，产生visibleChanged事件。同时visibleChanged指定的事件处理程序将被执行。
<dl compact><dt><b>用法:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"><tt>[XML]</tt>&nbsp;</td><td valign="top">visibleChanged = <em>"可执行语句"</em></td></tr>
    <tr><td valign="top"><tt>[Script]</tt>&nbsp;</td><td valign="top"><em>Controlid.</em>visibleChanged = <em>Function</em></td></tr>
  </table>
</dl>

<dl compact><dt><b>示例: </b></dt><dd>
<table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"><tt>[XML]</tt>&nbsp;</td><td valign="top">&lt;button x:id="mybutton" x="50" y="50" width="70" height="40" visibleChanged="print('visibleChanged')"/&gt;</td></tr>
    <tr><td valign="top"><tt>[Script]</tt>&nbsp;</td><td valign="top">
    <pre>function on_visibleChanged() {
...
...
}
mybutton.visibleChanged = on_visibleChanged
</td></tr>
</table>
</dl>
</div>
</div><p>

<a class="anchor" name="textChanged"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">textChanged</td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>
当控件显示文本改变时，产生textChanged事件。同时textChanged指定的事件处理程序将被执行。
<dl compact><dt><b>用法:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"><tt>[XML]</tt>&nbsp;</td><td valign="top">textChanged = <em>"可执行语句"</em></td></tr>
    <tr><td valign="top"><tt>[Script]</tt>&nbsp;</td><td valign="top"><em>Controlid.</em>textChanged = <em>Function</em></td></tr>
  </table>
</dl>

<dl compact><dt><b>示例: </b></dt><dd>
<table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"><tt>[XML]</tt>&nbsp;</td><td valign="top">&lt;textBox x:id="mytextBox" x="50" y="50" width="70" height="40" textChanged="print('textChanged')"/&gt;</td></tr>
    <tr><td valign="top"><tt>[Script]</tt>&nbsp;</td><td valign="top">
    <pre>function on_textChanged() {
...
...
}
mytextBox.textChanged = on_textChanged
</td></tr>
</table>
</dl>
</div>
</div><p>

<a class="anchor" name="fontChanged"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">fontChanged</td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>
当控件显示字体改变时，产生fontChanged事件。同时fontChanged指定的事件处理程序将被执行。
<dl compact><dt><b>用法:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"><tt>[XML]</tt>&nbsp;</td><td valign="top">fontChanged = <em>"可执行语句"</em></td></tr>
    <tr><td valign="top"><tt>[Script]</tt>&nbsp;</td><td valign="top"><em>Controlid.</em>fontChanged = <em>Function</em></td></tr>
  </table>
</dl>

<dl compact><dt><b>示例: </b></dt><dd>
<table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"><tt>[XML]</tt>&nbsp;</td><td valign="top">&lt;textBox x:id="mytextBox" x="50" y="50" width="70" height="40" fontChanged="print('fontChanged')"/&gt;</td></tr>
    <tr><td valign="top"><tt>[Script]</tt>&nbsp;</td><td valign="top">
    <pre>function on_fontChanged() {
...
...
}
mytextBox.fontChanged = on_fontChanged
</td></tr>
</table>
</dl>
</div>
</div><p>

<a class="anchor" name="parentChanged"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">parentChanged</td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>
当控件的父类控件改变时，产生parentChanged事件。同时parentChanged指定的事件处理程序将被执行。
<dl compact><dt><b>用法:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"><tt>[XML]</tt>&nbsp;</td><td valign="top">parentChanged = <em>"可执行语句"</em></td></tr>
    <tr><td valign="top"><tt>[Script]</tt>&nbsp;</td><td valign="top"><em>Controlid.</em>parentChanged = <em>Function</em></td></tr>
  </table>
</dl>

<dl compact><dt><b>示例: </b></dt><dd>
<table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"><tt>[XML]</tt>&nbsp;</td><td valign="top">&lt;button x:id="mybutton" x="50" y="50" width="70" height="40" parentChanged="print('parentChanged')"/&gt;</td></tr>
    <tr><td valign="top"><tt>[Script]</tt>&nbsp;</td><td valign="top">
    <pre>function on_parentChanged() {
...
...
}
mybutton.parentChanged = on_parentChanged
</td></tr>
</table>
</dl>
</div>
</div><p>

<a class="anchor" name="hScroll"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">hScroll</td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>
当滚动水平滚动条时，产生hScroll事件。同时hScroll指定的事件处理程序将被执行。
<dl compact><dt><b>用法:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"><tt>[XML]</tt>&nbsp;</td><td valign="top">hScroll = <em>"可执行语句"</em></td></tr>
    <tr><td valign="top"><tt>[Script]</tt>&nbsp;</td><td valign="top"><em>Controlid.</em>hScroll = <em>Function</em></td></tr>
  </table>
</dl>

<dl compact><dt><b>示例: </b></dt><dd>
<table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"><tt>[XML]</tt>&nbsp;</td><td valign="top">&lt;form x:id="myform" x="0" y="0" width="240" height="320" hScroll="print('hScroll')"/&gt;</td></tr>
    <tr><td valign="top"><tt>[Script]</tt>&nbsp;</td><td valign="top">
    <pre>function on_hScroll() {
...
...
}
myform.hScroll = on_hScroll
</td></tr>
</table>
</dl>
</div>
</div><p>

<a class="anchor" name="vScroll"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">vScroll</td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>
当滚动垂直滚动条时，产生vScroll事件。同时vScroll指定的事件处理程序将被执行。
<dl compact><dt><b>用法:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"><tt>[XML]</tt>&nbsp;</td><td valign="top">vScroll = <em>"可执行语句"</em></td></tr>
    <tr><td valign="top"><tt>[Script]</tt>&nbsp;</td><td valign="top"><em>Controlid.</em>vScroll = <em>Function</em></td></tr>
  </table>
</dl>

<dl compact><dt><b>示例: </b></dt><dd>
<table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"><tt>[XML]</tt>&nbsp;</td><td valign="top">&lt;form x:id="myform" x="0" y="0" width="240" height="320" vScroll="print('vScroll')"/&gt;</td></tr>
    <tr><td valign="top"><tt>[Script]</tt>&nbsp;</td><td valign="top">
    <pre>function on_vScroll() {
...
...
}
myform.vScroll = on_vScroll
</td></tr>
</table>
</dl>
</div>
</div><p>

<a class="anchor" name="boundsChanged"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">boundsChanged</td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>
当控件边界改变时，产生boundsChanged事件。同时boundsChanged指定的事件处理程序将被执行。
<dl compact><dt><b>用法:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"><tt>[XML]</tt>&nbsp;</td><td valign="top">boundsChanged = <em>"可执行语句"</em></td></tr>
    <tr><td valign="top"><tt>[Script]</tt>&nbsp;</td><td valign="top"><em>Controlid.</em>boundsChanged = <em>Function</em></td></tr>
  </table>
</dl>

<dl compact><dt><b>示例: </b></dt><dd>
<table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"><tt>[XML]</tt>&nbsp;</td><td valign="top">&lt;button x:id="mybutton" x="50" y="50" width="70" height="40" boundsChanged="print('boundsChanged')"/&gt;</td></tr>
    <tr><td valign="top"><tt>[Script]</tt>&nbsp;</td><td valign="top">
    <pre>function on_boundsChanged() {
...
...
}
mybutton.boundsChanged = on_boundsChanged
</td></tr>
</table>
</dl>
</div>
</div><p>
<b>备注</b>
<ul>
<li><a name="note1"><font color="red"><b>[注1]</b></font></a>：这里提及的可执行语句其本质还是一个函数。当.xgl最终被翻译为.lua文件后,可执行语句也会以一个函数的形式存在。相应的函数的局部变量依据相应的函数不同而不同，如使用print()时，其参数可以为字串符,可以为<a href="../script_programming/Event_Object.html">Event对象</a>的一个属性;如使用图形控件的相关方法，请必须保证该控件已实例化。
</ul>		
 <script>footer("chinese")</script>
</body>
</html>
