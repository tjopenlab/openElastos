<?xml version = "1.0" encoding="GB2312" ?>
    <?xml:stylesheet type="text/xsl" href="/xsl/xsl_c/interfaceman.xsl"?>    <manpage>
    <volume>线程与调度</volume>
    <interface> IThread </interface>
    <description>
        <para>

        </para>
    </description>
    <methods>
<self>
    <method>
        <method_name>Start</method_name>
        <method_url>IThread\Start</method_url>
    <m_description>
        启动线程，从线程入口点开始执行
    </m_description>
    </method>
    <method>
        <method_name>Suspend</method_name>
        <method_url>IThread\Suspend</method_url>
    <m_description>
        挂起线程
    </m_description>
    </method>
    <method>
        <method_name>Resume</method_name>
        <method_url>IThread\Resume</method_url>
    <m_description>
        唤醒线程
    </m_description>
    </method>

    <method>
        <method_name>Join</method_name>
        <method_url>IThread\Join</method_url>
    <m_description>
        在指定时间内等待线程结束
    </m_description>
    </method>

    <method>
        <method_name>Interrupt</method_name>
        <method_url>IThread\Interrupt</method_url>
    <m_description>
        打断线程的阻塞行为（Sleep、Join、Wait等）
    </m_description>
    </method>

    <method>
        <method_name>Abort</method_name>
        <method_url>IThread\Abort</method_url>
    <m_description>
        强行中止线程的执行
    </m_description>
    </method>

    <method>
        <method_name>SetPriority</method_name>
        <method_url>IThread\SetPriority</method_url>
    <m_description>
        设置线程优先级
    </m_description>
    </method>

    <method>
        <method_name>GetPriority</method_name>
        <method_url>IThread\GetPriority</method_url>
    <m_description>
        获取线程优先级
    </m_description>
    </method>

    <method>
        <method_name>GetId</method_name>
        <method_url>IThread\GetId</method_url>
    <m_description>
        获取线程ID
    </m_description>
    </method>

    <method>
        <method_name>GetState</method_name>
        <method_url>IThread\GetState</method_url>
    <m_description>
        获取线程状态
    </m_description>
    </method>

    <method>
        <method_name>GetQuitCode</method_name>
        <method_url>IThread\GetFinishCode</method_url>
    <m_description>
        获取线程的结束代码（返回值）
    </m_description>
    </method>

    <method>
        <method_name>GetStartTime</method_name>
        <method_url>IThread\GetStartTime</method_url>
    <m_description>
        获取线程的启动时间
    </m_description>
    </method>

    <method>
        <method_name>GetQuitTime</method_name>
        <method_url>IThread\GetFinishTime</method_url>
    <m_description>
        获取线程的退出时间
    </m_description>
    </method>

    <method>
        <method_name>GetProcessorTimes</method_name>
        <method_url>IThread\GetProcessorTimes</method_url>
    <m_description>
        获取线程运行所占用CPU的时间
    </m_description>
    </method>

</self>
    </methods>
    <requirements>
        <system>
            <system_name>
                Elastos操作系统
            </system_name>
        </system>
        <headerfile>
            <file_name> ddk.h </file_name>
        </headerfile>
    </requirements>
</manpage>

