<!--==========================================================================-->
<!-- Copyright (c) 2000-2004,  Elastos, Inc.  All Rights Reserved.-->
<!--==========================================================================-->

    <?xml version = "1.0" encoding="GB2312" ?>
    <?xml:stylesheet type="text/xsl" href="/xsl/xsl_e/methodmanual.xsl"?><manpage>
<volume>IsocketEx Interface </volume>
<interface>IsocketEx</interface><method> SetSockOpt </method>
    <description>
        <para>
            Sets a socket option.
        </para>
    </description>
    <syntax>
        <return_val> ECODE </return_val>
       <parameters>
            <api_param>
                <param_inout>[in]</param_inout>
                <param_type> UINT32  </param_type>
                <param_name> Level </param_name>
                <param_note>
                    <para>
						Sets socket option level, the values are the following: 
                    </para>
                    <para_table>
	                        <th>
		                    <td>Value Name</td>
		                    <td>Value</td>
	                        <td>Description</td>
	                        </th>
	                        <tr>
		                    <td>SOL_SOCKET</td>
		                    <td>0xffff</td>
		                    <td>Basic socket</td>
	                        </tr>
	                        <tr>
		                    <td>IPPROTO_TCP</td>
		                    <td>6</td>
		                    <td>TCP socket</td>
	                        </tr>
	                        <tr>
		                    <td>IPPROTO_IP</td>
		                    <td>0</td>
		                    <td>IPv4 socket</td>
	                        </tr>
	                    </para_table>
                </param_note>
            </api_param>
            <api_param>
                <param_inout>[in]</param_inout>
                <param_type> UINT32   </param_type>
                <param_name> optName </param_name>
                <param_note>
                    <para>
						Specified socket option to get.
                    </para>
                </param_note>
            </api_param>
            <api_param>
                <param_inout>[in]</param_inout>
                <param_type> EzByteBuf    </param_type>
                <param_name> ebbOptVal </param_name>
                <param_note>
                    <para>
						Corresponding value of option to be set. Its size is determind by the type of corresponding value of option. Main option and its corresponding values are as the following: 
                        Level £½SOL_SOCKET
                    </para>
                    <para_table>
	                        <th>
		                    <td>Value </td>
		                    <td>Type</td>
	                        <td>Description</td>
	                        </th>
	                        <tr>
		                    <td>SO_BROADCAST</td>
		                    <td>BOOL</td>
		                    <td>Whether socket can send broadcast message.</td>
	                        </tr>
	                        <tr>
		                    <td>SO_KEEPALIVE</td>
		                    <td>BOOL</td>
		                    <td>Sends keep-alive information.</td>
	                        </tr>
	                        <tr>
		                    <td>SO_LINGER</td>
		                    <td>struct linger</td>
		                    <td>Current linger option of socket.</td>
	                        </tr>
	                        <tr>
		                    <td>SO_OOBINLINE</td>
		                    <td>BOOL</td>
		                    <td>Receives out of band data in the data stream.</td>
	                        </tr>
	                        <tr>
		                    <td>SO_REUSEADDR</td>
		                    <td>BOOL</td>
		                    <td>Binds socket with an address already in use.</td>
	                        </tr>
	                        <tr>
		                    <td>SO_TYPE</td>
		                    <td>int</td>
		                    <td>Socket type (such as SOCK_STREAM), this option cannot be set.</td>
	                        </tr>
	                        <tr>
		                    <td>SO_SNDBUF</td>
		                    <td>int</td>
		                    <td>Specified send buffer size.</td>
	                        </tr>
	                        <tr>
		                    <td>SO_RCVBUF</td>
		                    <td>int</td>
		                    <td>Size of specified receive buffer.</td>
	                        </tr>
	                        <tr>
		                    <td>SO_RCVLOWAT</td>
		                    <td>int</td>
		                    <td>Lower bound of receive buffer (affects select)</td>
	                        </tr>
	                        <tr>
		                    <td>SO_SNDLOWAT</td>
		                    <td>int</td>
		                    <td>Lower bound of send buffer (affects select)</td>
	                        </tr>
	                        <tr>
		                    <td>SO_SNDTIMEO</td>
		                    <td>struct timeval</td>
		                    <td>Send timeout</td>
	                        </tr>
	                        <tr>
		                    <td>SO_RCVTIMEO</td>
		                    <td>struct timeval</td>
		                    <td>Receive timeout</td>
	                        </tr>
	                    </para_table>
	                    <para>Level £½IPPROTO_TCP</para>
	                    <para_table>
	                        <th>
		                    <td>Value </td>
		                    <td>Type</td>
	                        <td>Description</td>
	                        </th>
	                        <tr>
		                    <td>TCP_NODELAY</td>
		                    <td>BOOL</td>
		                    <td>Disables send merge Nagle algorithm.</td>
	                        </tr>
	                        <tr>
		                    <td>TCP_MAXSEG</td>
		                    <td>int</td>
		                    <td>Gets the maximum TCP segment size.</td>
	                        </tr>
	                    </para_table>
	                    <para>Level £½IPPROTO_IP</para>
	                    <para_table>
	                        <th>
		                    <td>Value </td>
		                    <td>Type</td>
	                        <td>Description</td>
	                        </th>
	                        <tr>
		                    <td>IP_MULTICAST_IF</td>
		                    <td>struct in_addr</td>
		                    <td>Multicast local interface.</td>
	                        </tr>
	                        <tr>
		                    <td>IP_MULTICAST_TTL</td>
		                    <td>UINT8</td>
		                    <td>Multicast time to live (TTL).</td>
	                        </tr>
	                        <tr>
		                    <td>IP_MULTICAST_LOOP</td>
		                    <td>UINT8</td>
		                    <td>Enables or disables multicast feedback.</td>
	                        </tr>
	                    </para_table>
                </param_note>
            </api_param>
            <api_param>
                <param_inout>[out]</param_inout>
                <param_type> int *  </param_type>
                <param_name> pError </param_name>
                <param_note>
                    <para>
						If function execution fails,then this parameter gets the error return value.See <link url="../socket_wsa.htm">network interface error return value</link> document for this return value.
                    </para>
                </param_note>
            </api_param>
        </parameters>
    </syntax>

	<return>
	<table>
	    <th>
		<td>Returns </td>
		<td>Description</td>
	    </th>
	    <tr>
		<td>S_OK</td>
		<td>Method invocation successful.</td>
	    </tr>
	    <tr>
		<td>S_FALSE</td>
		<td>Method execution fails.</td>
	    </tr>
	</table>
    </return>

	<remarks>
		<para>
		</para>
	</remarks>

    <requirements>
        <system>
            <system_name>
				Windows 2000 or later. Elastos 2.0 or later.
			</system_name>
        </system>
    </requirements>
</manpage>