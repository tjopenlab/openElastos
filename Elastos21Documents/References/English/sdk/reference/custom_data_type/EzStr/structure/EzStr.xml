<!--==========================================================================-->
<!-- Copyright (c) 2000-2004,  Elastos, Inc.  All Rights Reserved.-->
<!--==========================================================================-->

<?xml version = "1.0" encoding="GB2312" ?>
<?xml:stylesheet type="text/xsl" href="/xsl/xsl_e/structuremanual.xsl"?>

<manpage>
    <volume> Common Data Structure </volume>
    <class> EzStr </class>
    <function> EzStr(const EzStr&amp; str) </function>

    <description>
        <para> 
            The constructor of EzStr, which is invoked to create an EzStr object.
        </para>
    </description>

    <syntax>
        <apiname>EzStr</apiname>
        <parameters>
        <api_param>
            <param_type> const EzStr&amp; </param_type>
            <param_name> str </param_name>
            <param_note>
                <para> 
                    An existing EzStr variable.
                </para>
            </param_note>
        </api_param>
        </parameters>
    </syntax>

    <remarks>
        <para>
            1. We can also declare an EzStr directly: </para>
        <para>
            <![CDATA[EzStr myEzStr£»]]>
        </para>
        <para>
            It will create a Unicode pointer inside EzStr.
        </para>
        <para>
            2. Creates an EzStr variable through an existing EzStr variable: 
        </para>
        <para>
            <![CDATA[EzStr(const EzStr& str)£»]]>
        </para>
        <para>
            if there exists an EzStr variable in the application, we can declare an EzStr this way; create a new
            EzStr variable using the existing EzStr variable and pointing the string pointer in the new EzStr
            variable to the position which the string pointer in the original EzStr variable is pointing.
        </para>
        <para>
            Note: No matter in which way we declare the EzStr variable, it will not allocate memory space for 
        	the string in the variable.
        </para>
    </remarks>

</manpage>