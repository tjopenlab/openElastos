<!--==========================================================================-->
<!-- Copyright (c) 2000-2004,  Elastos, Inc.  All Rights Reserved.-->
<!--==========================================================================-->

<?xml version = "1.0" encoding="GB2312" ?>
<?xml:stylesheet type="text/xsl" href="/xsl/xsl_e/methodmanual.xsl"?>

<manpage>
    <sample url="datatypes\EzStrBuf\copy">Copy</sample>
    <volume> Common Data Structure </volume>
    <interface> EzStrBuf  </interface>
    <method> Copy </method>

    <description>
        <para> Assigns a new string value to current string buffer. </para>
    </description>

    <syntax>
        <return_val> int </return_val>
        <parameters>
        <api_param>
            <param_type> const EzStr&amp; </param_type>
            <param_name> ezstr </param_name>
            <param_note>
                <para> An existing EzStr object. It's value must not be EZSTR_NULL, otherwise an error is occured. </para>
            </param_note>
        </api_param>
        </parameters>
    </syntax>
    <syntax>
        <return_val> int </return_val>
        <parameters>
        <api_param>
            <param_type> wchar_t * </param_type>
            <param_name> wstr </param_name>
            <param_note>
                <para> A pointer to the wchar_t string. It's value must not be null, otherwise an error is occured. </para>
            </param_note>
        </api_param>
        </parameters>
    </syntax>

    <return>
        <para> Returns the number of characters actually copied. </para>
    </return>

    <remarks>
        <para>Uses the new string to replace the original string in EzStrBuf object. If the length of ezstr (wstr) exceeds maximum buffer size of the current EzStrBuf object, then the rest is truncated. </para>
    </remarks>

    <example><pre><![CDATA[
#include <stdio.h>
#include <ezstr.h>

int __cdecl main()
{
    EzStrBuf_<20> myStr;

    myStr.Copy(L"Great Wall");
    printf("The content of the string is \"%S\".\n", (wchar_t *)myStr);

    EzStr pe = EZCSTR("Forbidden City");
    myStr.Copy(pe);
    printf("The content of the string is \"%S\".\n", (wchar_t *)myStr);

    return 0;
}
]]></pre></example>

    <result><![CDATA[
The content of the string is "Great Wall".
The content of the string is "Forbidden City".
]]>
    </result>

    <references>
        <reference>
            <ref_name> Append </ref_name>
            <ref_url> Append </ref_url>
        </reference>
        <reference>
            <ref_name> Insert </ref_name>
            <ref_url> Insert </ref_url>
        </reference>
    </references>
</manpage>