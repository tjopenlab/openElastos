<!--==========================================================================-->
<!-- Copyright (c) 2000-2004,  Elastos, Inc.  All Rights Reserved.-->
<!--==========================================================================-->

<?xml version = "1.0" encoding="GB2312" ?>
<?xml:stylesheet type="text/xsl" href="/xsl/xsl_e/methodmanual.xsl"?>

<manpage>
    <sample url="datatypes\EzArray\Copy">copy</sample>
    <volume> Common data structure  </volume>
    <interface> EzArray   </interface>
    <method> Copy </method>

    <description>
        <para>Copies the EzArray elements from source to destination; and point out the number of the elements copied. </para>
    </description>

    <syntax>
        <return_val> void </return_val>
        <parameters>
        <api_param>
            <param_type>EzArray&lt;T&gt;</param_type>
            <param_name>src </param_name>
            <param_note>
                <para> Source EzArray array. </para>
            </param_note>
        </api_param>

        <api_param>
            <param_type> int  </param_type>
            <param_name> len </param_name>
            <param_note>
                <para>The amount of the elements copied. </para>
            </param_note>
        </api_param>
        </parameters>
    </syntax>

    <return>
        <NoReturnValue/>
    </return>

    <remarks>
        <para> Among the values of <i>len</i>, the length of source EzArray array and the length of current EzArray array. The first N elements can be copied if the smallest value is N.
        </para>
        <para> Copying will fail if <i>len</i> is negative. </para>
    </remarks>

    <example><pre><![CDATA[
#include <EzArray.h>
#include <stdio.h>

int __cdecl main()
{
    int i;
    EzArray<int> myArray1 = EzArray<int>::CreateObject(10);
    printf("Before copy myArray1 is:");
    for (i = 0; i < 10; i++){
        myArray1[i] = i + 10;
        printf("%d ", myArray1[i]);
    }
    printf("\n");
    EzArray_<int, 5> myArray2;
    printf("Before copy myArray2 is:");
    for (i = 0; i < 5; i++){
        myArray2[i] = i + 20;
        printf("%d ", myArray2[i]);
    }
    printf("\n");
    myArray1.Copy(myArray2, 5);
    printf("After copy 5 members myArray1 is:");
    for (i = 0; i < 10; i++) 
		printf("%d ", myArray1[i]);
    printf("\n");
    myArray1.Dispose();
    return 0;
}
]]></pre></example>

    <result><![CDATA[
Before copy myArray1 is:10 11 12 13 14 15 16 17 18 19
Before copy myArray2 is:20 21 22 23 24
After copy 5 members myArray1 is:20 21 22 23 24 15 16 17 18 19
]]></result>

    <references>
        <reference>
            <ref_name> Clone </ref_name>
            <ref_url> Clone </ref_url>
        </reference>
    </references>

</manpage>