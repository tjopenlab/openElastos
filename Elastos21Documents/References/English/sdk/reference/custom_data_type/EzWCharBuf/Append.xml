<!--==========================================================================-->
<!-- Copyright (c) 2000-2004,  Elastos, Inc.  All Rights Reserved.-->
<!--==========================================================================-->

<?xml version = "1.0" encoding="GB2312" ?>
<?xml:stylesheet type="text/xsl" href="/xsl/xsl_e/methodmanual.xsl"?>

<manpage>
    <sample url="datatypes\EzWCharBuf\Append">append</sample>
    <volume> Common Data Structure </volume>
    <interface> EzWCharBuf   </interface>
    <method> Append </method>

    <description>
        <para> Appends another WChar sequence with specified size at the end of this EzWCharBuf object.</para>
    </description>

    <syntax>
        <return_val> int </return_val>
        <parameters>
        <api_param>
            <param_type> const wchar_t* </param_type>
            <param_name> p </param_name>
            <param_note>
                <para> The pointer that points to the WChar sequence to be appended.</para>
            </param_note>
        </api_param>

        <api_param>
            <param_type> int </param_type>
            <param_name> n </param_name>
            <param_note>
                <para> The length of the WChar sequence to be appended.</para>
            </param_note>
        </api_param>
        </parameters>
    </syntax>

    <return>
        <para> Returns the number of Unicode characters actually appended.</para>
    </return>

    <remarks>
        <para>If the length of the Unicode Characters sequence appended exceeds the maximum capacity of the EzWCharBuf object, then the extra portion is truncated.</para>
        <para>If p is 0, i.e. the pointer to the data to be appended is NULL,while the parameter n is not 0(the number of Unicode characters is not 0),then the program goes awry.</para>
    </remarks>

    <example><pre><![CDATA[
#include <stdio.h>
#include <ezbuf.h>

int __cdecl main()
{
    EzWCharBuf_<200> buf;

    buf.Copy(L"hello",5);
    wprintf(L"Original: %s\n",(wchar_t*)buf);

    buf.Append(L" world!",8);
    wprintf(L"After appending: %s\n",(wchar_t*)buf);

    return 0;
}
]]></pre></example>

    <result><![CDATA[
Original: hello
After appending: hello world!
]]></result>

    <references>
    <reference>
        <ref_name> Insert </ref_name>
        <ref_url> Insert </ref_url>
    </reference>
    <reference>
        <ref_name> Copy </ref_name>
        <ref_url> Copy </ref_url>
    </reference>
    </references>

</manpage>