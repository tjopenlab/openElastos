<!--==========================================================================-->
<!-- Copyright (c) 2000-2004,  Elastos, Inc.  All Rights Reserved.-->
<!--==========================================================================-->

    <?xml version = "1.0" encoding="GB2312" ?>
    <?xml:stylesheet type="text/xsl" href="/xsl/xsl_e/methodmanual.xsl"?><manpage>
<volume>System COM Interface</volume>
<interface>IProcess</interface><method>GetMemorySizes </method>
    <description>
        <para>
			Obtains the memorysize of the process 
        </para>
    </description>
    <syntax>
        <return_val> ECODE </return_val>
        <parameters>
            <api_param>
                <param_inout>[out]</param_inout>
                <param_type> MemorySize *</param_type>
                <param_name> pPrivateVirtualMemorySize </param_name>
                <param_note>
                    <para>
						
                    </para>
                </param_note>
            </api_param>       			
			    <api_param>
                <param_inout>[out]</param_inout>
                <param_type> MemorySize *</param_type>
                <param_name> pSharedVirtualMemorySize </param_name>
                <param_note>
                    <para>
						
                    </para>
                </param_note>
            </api_param>    
            <api_param>
                <param_inout>[out]</param_inout>
                <param_type> MemorySize *</param_type>
                <param_name> pPrivatePhysicalMemorySize </param_name>
                <param_note>
                    <para>
						
                    </para>
                </param_note>
            </api_param>    
            <api_param>
                <param_inout>[out]</param_inout>
                <param_type> MemorySize *</param_type>
                <param_name> pSharedPhysicalMemorySize </param_name>
                <param_note>
                    <para>
						
                    </para>
                </param_note>
            </api_param>    
        </parameters>
    </syntax>
	
	<return>
	<table>            
	    <th>            
		<td>Return Value</td>            
		<td>Hex Value</td>
		<td>Description</td>            
	    </th>            
	    <tr>            
		<td>NOERROR</td>            
		<td>0x00000000</td>
		<td>Function succeeds. The memorysize of the process is obtained successfully</td>            
	    </tr>               
	    <tr>            
		<td>E_INVALID_ARGUMENT</td>            
		<td>0x80070057</td>
		<td>Invalid argument(s)</td>            
	    </tr>               
	</table> 
		    <para>See <link url="../../../../reference/basic_data_type/hresult.htm">ECODE</link> for related help.</para>           	
    </return>

	<remarks>
		<para>
			PID is the process identifier of the associated process. Until the process object in kernel is destroyed, 
			the process identifier uniquely identifies the process throughout the system. PID can be reused by the 
			system and this can save system resources. PID is not used widely as it does in traditional process/thread 
			module; instead, interface pointers are used to identify the process.            
		</para>		
		<para>
			If pPid is NULL then the return value of function would be E_INVALID_ARGUMENT.
		</para>
	</remarks>

    <requirements>
        <system>
            <system_name>
				Windows 2000 or later; Elastos 2.0 or later.            
			</system_name>
        </system>
    </requirements>
</manpage>