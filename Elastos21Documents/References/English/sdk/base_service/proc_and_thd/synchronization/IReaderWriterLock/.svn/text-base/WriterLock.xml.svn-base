<!--==========================================================================-->
<!-- Copyright (c) 2000-2004,  Elastos, Inc.  All Rights Reserved.-->
<!--==========================================================================-->

    <?xml version = "1.0" encoding="GB2312" ?>
    <?xml:stylesheet type="text/xsl" href="/xsl/xsl_e/methodmanual.xsl"?><manpage>
<volume>System COM Interface </volume>
<interface>IReaderWriterLock</interface><method> WriterLock </method>
    <description>
        <para>
         	Acquires the writer lock.
        </para>
    </description>
    <syntax>
        <return_val> ECODE </return_val>
        <parameters>
        <api_param>
        <para_inout>out</para_inout>
        <para_type>WaitResult *</para_type>
        <para_name>pResult</para_name>
        <para_note>
        <para></para>
        </para_note>
        </api_param>
        </parameters>
    </syntax>

	<return>
	
	<table>
	    <th>
		<td>Return Value </td>
		<td>Hex Value</td>
		<td>Description</td>
	    </th>
	    <tr>
		<td>NOERROR </td>
		<td>Function succeeds in acquiring the writer lock. </td>
	    </tr>
	    <tr>
		<td>E_INVALID_ARGUMENT</td>
		<td>Invalid argument(s)</td>
	    </tr>
	    <tr>
		<td>E_ALREADY_LOCKED</td>
    <td>Function call failed. The calling thread has already acquired the ReaderWriterLock 
		object as a reader</td>
	    </tr>
	<tr>
		<td>E_INVALID_LOCK</td>
		<td>Function call failed. The calling thread has already acquired the ReaderWriterLock 
		object as a  writer.</td>
	    </tr>
	</table>
   	    <para>See <link url="../../../../reference/basic_data_type/hresult.htm">ECODE</link> related help.</para> 
    </return>

	<remarks>
		<para>
			This function is used to acquire a writer lock (the calling thread acquires the ReaderWriterLock 
			object as a writer). If the calling thread cannot acquire a writer lock (for example: 
			the ReaderWriterLock object is acquired by one or more readers),then it will enter the waiting status 
			until the writer lock of the ReaderWriterLock object is acquired and hence the function is returned 
			successfully. If the ReaderWriterLock object is not acquired by any other threads then the calling 
			thread will acquire it as a writer successfully and hence the function is returned immediately.The function will fail if the calling thread has already acquired the ReaderWriterLock object as a reader or writer.The waiting of the calling thread can be interrupted.
		</para>
	</remarks>

    <requirements>
        <system>
            <system_name>
				Windows 2000 or later; Elastos 2.0 or later.
	    	</system_name>
        </system>
    </requirements>
</manpage>