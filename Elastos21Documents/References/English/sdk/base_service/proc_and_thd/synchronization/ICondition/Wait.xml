<!--==========================================================================-->
<!-- Copyright (c) 2000-2004,  Elastos, Inc.  All Rights Reserved.-->
<!--==========================================================================-->

    <?xml version = "1.0" encoding="GB2312" ?>
    <?xml:stylesheet type="text/xsl" href="../../../../xsl/xsl_e/methodmanual.xsl"?><manpage>
<volume>System COM Interface </volume>
<interface>ICondition</interface><method> Wait </method>
    <description>
        <para>
         	The calling thread uses the method to wait for the <b>Condition</b> object.
        </para>
    </description>
    <syntax>
        <return_val> ECODE </return_val>
       <parameters>
            <api_param>
                <param_inout>[in]</param_inout>
                <param_type> IMutex * </param_type>
                <param_name> pMutex </param_name>
                <param_note>
                    <para>
						A pointer to a mutex object. <i>pMutex</i> can not be NULL.
                    </para>
                </param_note>
            </api_param>
        <api_param>
                <param_inout>[out]</param_inout>
                <param_type> WaitResult *</param_type>
                <param_name>pResult </param_name>
                <param_note>
                    <para>
                    </para>
                </param_note>
            </api_param>
        </parameters>
    </syntax>

	<return>
	
	<table>
	    <th>
		<td>Return Value </td>
		<td>Hex Value</td>
		<td>Description</td>
	    </th>
	    <tr>
		<td>NOERROR</td>
		<td>Function succeeds in waiting for the <b>Condition</b> object.</td>
	    </tr>
	    <tr>
		<td>E_INVALID_ARGUMENT</td>
		<td>Invalid argument(s)</td>
	    </tr>
	<tr>
		<td>E_INVALID_OPERATION</td>
		<td>Invalid operation</td>
	    </tr>
	    <tr>
		<td>E_NOT_OWNER</td>
		<td>Fail to call the therad ,which does not own the mutex object </td>
	    </tr>
	</table>
    		    <para>See <link url="..\..\..\..\reference\basic_data_type\hresult.htm">ECODE</link> for related help.</para>
    </return>

	<remarks>
		<para>
			The calling thread uses the method to wait for the condition object and releases the owned 
			mutex object in an atom step. After the calling thread is woke up, the method will own the 
			mutex object again just before return. The calling thread can be interrupted while waiting 
			for the condition object, but will not be interrupted while requesting the mutex object.
		</para>
	</remarks>

    <requirements>
        <system>
            <system_name>
				Windows 2000 or later; Elastos 2.0 or later.
	    	</system_name>
        </system>
    </requirements>
</manpage>