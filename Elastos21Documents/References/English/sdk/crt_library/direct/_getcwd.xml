<!--==========================================================================-->
<!-- Copyright (c) 2000-2004,  Elastos, Inc.  All Rights Reserved.-->
<!--==========================================================================-->

<?xml version="1.0" encoding="GB2312"?>
<?xml:stylesheet type="text/xsl" href="/xsl/xsl_e/manual.xsl"?>

<manpage>
    <sample url="sdk\operating_system\crt\libc\direct\_getcwd">_getcwd</sample>
    <title> _getcwd, _wgetcwd </title>
    <volume>C Run-Time Library</volume>
    <routine_idx> dir_idx.htm </routine_idx>

    <description>
        <para>Gets the current working directory.</para>
    </description>

    <syntax>
        <return_val>char*</return_val>
        <func_name>_getcwd</func_name>
        <parameters>
            <func_param>
                <param_type>char*</param_type>
                <param_name>buffer</param_name>
                <param_note>
                    <para>Storage location for path</para>
                </param_note>
            </func_param>
            <func_param>
                <param_type>int</param_type>
                <param_name>maxlen</param_name>
                <param_note>
                    <para>Maximum length of path in characters: char for _getcwd and wchar_t for _wgetcwd</para>
                </param_note>
            </func_param>
        </parameters>
    </syntax>
    <syntax>
        <return_val>wchar_t*</return_val>
        <func_name>_wgetcwd</func_name>
        <parameters>
            <func_param>
                <param_type>wchar_t*</param_type>
                <param_name>buffer</param_name>
            </func_param>
            <func_param>
                <param_type>int</param_type>
                <param_name>maxlen</param_name>
            </func_param>
        </parameters>
    </syntax>

    <return>
        <para>Each of these functions returns a pointer to buffer. A NULL return value indicates an error and error is set either to ENOMEM or to ERANGE.</para>
        <table>
            <th>
                <td>Error Number</td>
                <td>Description</td>
            </th>
            <tr>
                <td>ENOMEM</td>
                <td>There is insufficient memory to allocate maxlen bytes</td>
            </tr>
            <tr>
                <td>ERANGE</td>
                <td>The path is longer than maxlen characters</td>
            </tr>
        </table>
    </return>

    <remarks>
        <para>The _getcwd function gets the full path of the current working directory for the default drive and stores it at buffer. The integer argument maxlen specifies the maximum length for the path. An error occurs if the length of the path (including the terminating NULL character) exceeds maxlen. The buffer argument can be NULL. Using malloc, a buffer of at least size maxlen (more only if necessary) is automatically allocated to store the path. This buffer is freed later by calling free and passing it the _getcwd return value (a pointer to the allocated buffer).</para>
        <para>_getcwd returns a string that represents the path of the current working directory. If the current working directory is the root, the string ends with a backslash (\). If the current working directory is a directory other than the root, then the string ends with the directory name and not with a backslash.</para>
        <para>_wgetcwd is a wide-character version of _getcwd; the buffer argument and return value of _wgetcwd are wide-character strings. _wgetcwd and _getcwd behave identically otherwise.</para>
    </remarks>

    <requirements>
        <routine>
            <routine_name>_getcwd</routine_name>
            <headerfile>direct.h</headerfile>
            <compatibility>Windows 2000, Elastos 2.0</compatibility>
        </routine>
        <routine>
            <routine_name>_wgetcwd</routine_name>
            <headerfile>direct.h</headerfile>
            <compatibility>Windows 2000, Elastos 2.0</compatibility>
        </routine>
    </requirements>

    <example>
<pre>
//==========================================================================
// Copyright (c) 2000-2004,  Elastos, Inc.  All Rights Reserved.
//==========================================================================

/* _getcwd.cpp:This program places the name of the current directory in the
 * buffer array, then displays the name of the current directory
 * on the screen. Specifying a length of _MAX_PATH leaves room
 * for the longest legal path name.
 */

#include &lt;direct.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;stdio.h&gt;

int main()
{
    char buffer[_MAX_PATH];

    /* Get the current working directory: */
    printf(&quot;the current working directory is:\n&quot;);
    if (_getcwd(buffer, _MAX_PATH) == NULL)
        perror(&quot;_getcwd error&quot;);
    else
        printf(&quot;%s\n&quot;, buffer);

   return 0;
}
</pre>
    </example>
<result>
the current working directory is:
/
</result>



</manpage>