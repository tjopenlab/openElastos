<!--==========================================================================-->
<!-- Copyright (c) 2000-2004,  Elastos, Inc.  All Rights Reserved.-->
<!--==========================================================================-->

<?xml version="1.0" encoding="GB2312"?>
<?xml:stylesheet type="text/xsl" href="/xsl/xsl_e/manual.xsl"?>

<manpage>
    <sample url="sdk\operating_system\crt\libc\stdio\_fileno">_fileno</sample>
    <title> _fileno</title>
    <volume>C Run-Time Library Functions</volume>
    <routine_idx> stio_idx.htm </routine_idx>

    <description>
        <para>Gets the file descriptor associated with a stream. The function _fileno examines the argument stream and returns its integer descriptor.</para>
    </description>

    <syntax>
        <return_val>int</return_val>
        <func_name>_fileno</func_name>
        <parameters>
            <func_param>
                <param_type>FILE*</param_type>
                <param_name>stream</param_name>
                <param_note>
                    <para>Pointer to FILE structure.</para>
                </param_note>
            </func_param>
        </parameters>
    </syntax>

    <return>
        <para>_fileno returns the file descriptor. There is no error return. The result is undefined if stream does not specify an open file.</para>
    </return>

    <remarks>
        <para>The _fileno routine returns the file descriptor currently associated with stream.</para>
    </remarks>

    <requirements>
        <routine>
            <routine_name>_fileno</routine_name>
            <headerfile>stdio.h</headerfile>
            <compatibility>ANSI, Windows 2000, Elastos 2.0</compatibility>
        </routine>
    </requirements>

    <example>
<pre>
//==========================================================================
// Copyright (c) 2000-2004,  Elastos, Inc.  All Rights Reserved.
//==========================================================================

/* _fileno.cpp: This program uses _fileno to obtain
 * the file handle for some standard C streams.
 */

#include &lt;stdio.h&gt;

int main()
{
    printf(&quot;The file handle for stdin is %d\n&quot;, _fileno(stdin));
    printf(&quot;The file handle for stdout is %d\n&quot;, _fileno(stdout));
    printf(&quot;The file handle for stderr is %d\n&quot;, _fileno(stderr));

    return 0;
}
</pre>
    </example>
<result>
The file handle for stdin is 0
The file handle for stdout is 1
The file handle for stderr is 2
</result>



    <references>
        <reference>
            <ref_name>fopen</ref_name>
            <ref_url>_wfopen</ref_url>
        </reference>
    </references>

</manpage>