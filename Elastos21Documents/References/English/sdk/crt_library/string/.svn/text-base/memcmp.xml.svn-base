<!--==========================================================================-->
<!-- Copyright (c) 2000-2004,  Elastos, Inc.  All Rights Reserved.-->
<!--==========================================================================-->

<?xml version="1.0" encoding="GB2312"?>
<?xml:stylesheet type="text/xsl" href="/xsl/xsl_e/manual.xsl"?>

<manpage>
    <sample url="sdk\operating_system\crt\libc\string\memcmp">memcmp</sample>
    <title> memcmp</title>
    <volume>C Run-Time Library Functions</volume>
    <routine_idx> str_idx.htm </routine_idx>

    <description>
        <para>Compares characters in two buffers.</para>
    </description>

    <syntax>
        <return_val>int</return_val>
        <func_name>memcmp</func_name>
        <parameters>
            <func_param>
                <param_type>const void*</param_type>
                <param_name>buf1</param_name>
                <param_note>
                    <para>First buffer.</para>
                </param_note>
            </func_param>
            <func_param>
                <param_type>const void*</param_type>
                <param_name>buf2</param_name>
                <param_note>
                    <para>Second buffer.</para>
                </param_note>
            </func_param>
            <func_param>
                <param_type>size_t</param_type>
                <param_name>count</param_name>
                <param_note>
                    <para>Number of characters.</para>
                </param_note>
            </func_param>
        </parameters>
    </syntax>

    <return>
        <para>The return value indicates the relationship between the buffers.</para>
        <table>
	        <th>
               <td>Return Value</td>
               <td>Relationship of First count Bytes of buf1 and buf2.</td>
            </th>
            <tr>
               <td>&lt;0</td>
               <td>buf1 less than buf2.</td>
            </tr>
            <tr>
               <td>0</td>
               <td>buf1 identical to buf2.</td>
            </tr>
            <tr>
               <td>&gt;0</td>
               <td>buf1 greater than buf2.</td>
            </tr>
        </table>
    </return>

    <remarks>
        <para>The memcmp function compares the first count bytes of buf1 and buf2 and returns a value indicating their relationship.</para>
    </remarks>

    <requirements>
        <routine>
            <routine_name>memcmp</routine_name>
            <headerfile>string.h</headerfile>
            <compatibility>ANSI, Windows 2000, Elastos 2.0</compatibility>
        </routine>
    </requirements>

    <example>
<pre>
//==========================================================================
// Copyright (c) 2000-2004,  Elastos, Inc.  All Rights Reserved.
//==========================================================================


#include &lt;string.h&gt;
#include &lt;stdio.h&gt;

int main()
{
    char first[]  = &quot;12345678901234567890&quot;;
    char second[] = &quot;12345678901234567891&quot;;
    int result;

    printf(&quot;Compare &apos;%.19s&apos; to &apos;%.19s&apos;:\n&quot;, first, second);
    result = memcmp(first, second, 19);
    if (result &lt; 0)
        printf(&quot;First is less than second.\n&quot;);
    else if (result == 0)
        printf(&quot;First is equal to second.\n&quot;);
    else if (result &gt; 0)
        printf(&quot;First is greater than second.\n&quot;);
    printf(&quot;Compare &apos;%.20s&apos; to &apos;%.20s&apos;:\n&quot;, first, second);
    result = memcmp(first, second, 20);
    if (result &lt; 0)
        printf(&quot;First is less than second.\n&quot;);
    else if (result == 0)
        printf(&quot;First is equal to second.\n&quot;);
    else if (result &gt; 0)
        printf(&quot;First is greater than second.\n&quot;);

    return 0;
}
</pre>
    </example>
<result>
Compare &apos;1234567890123456789&apos; to &apos;1234567890123456789&apos;:
First is equal to second.
Compare &apos;12345678901234567890&apos; to &apos;12345678901234567891&apos;:
First is less than second.
</result>



    <references>
        <reference>
            <ref_name>_memccpy</ref_name>
            <ref_url>_memccpy</ref_url>
        </reference>
        <reference>
            <ref_name>memchr</ref_name>
            <ref_url>memchr</ref_url>
        </reference>
        <reference>
            <ref_name>_memicmp</ref_name>
            <ref_url>_memicmp</ref_url>
        </reference>
        <reference>
            <ref_name>memcpy</ref_name>
            <ref_url>memcpy</ref_url>
        </reference>
        <reference>
            <ref_name>memset</ref_name>
            <ref_url>memset</ref_url>
        </reference>
    </references>

</manpage>