<!--==========================================================================-->
<!-- Copyright (c) 2000-2004,  Elastos, Inc.  All Rights Reserved.-->
<!--==========================================================================-->

<?xml version="1.0" encoding="GB2312"?>
<?xml:stylesheet type="text/xsl" href="/xsl/xsl_e/manual.xsl"?>

<manpage>
    <sample url="sdk\operating_system\crt\libc\string\strstr">strstr</sample>
    <title> strstr, wcsstr</title>
    <volume>C Run-Time Library</volume>
    <routine_idx> str_idx.htm </routine_idx>

    <description>
        <para>Search for substring.</para>
    </description>

    <syntax>
        <return_val>char*</return_val>
        <func_name>strstr</func_name>
        <parameters>
            <func_param>
                <param_type>const char*</param_type>
                <param_name>string</param_name>
                <param_note>
                    <para>Null-terminated string to search.</para>
                </param_note>
            </func_param>
            <func_param>
                <param_type>const char*</param_type>
                <param_name>strCharSet</param_name>
                <param_note>
                    <para>Null-terminated string to search for.</para>
                </param_note>
            </func_param>
        </parameters>
    </syntax>

    <syntax>
        <return_val>wchar_t*</return_val>
        <func_name>wcsstr</func_name>
        <parameters>
            <func_param>
                <param_type>const wchar_t*</param_type>
                <param_name>string</param_name>
            </func_param>
            <func_param>
                <param_type>const wchar_t*</param_type>
                <param_name>strCharSet</param_name>
            </func_param>
        </parameters>
    </syntax>

    <return>
        <para>Returns a pointer to the first occurrence of strSearch in str, or NULL if strSearch does not appear in str. If strSearch points to a string of zero length, the function returns str.</para>
    </return>

    <remarks>
        <para>The strstr function returns a pointer to the first occurrence of strSearch in str. The search does not include terminating null characters. wcsstris the wide-character  version of strstr. The arguments and return value of wcsstr are wide-character strings</para>
    </remarks>

    <requirements>
        <routine>
            <routine_name>strstr</routine_name>
            <headerfile>string.h</headerfile>
            <compatibility>ANSI, Windows 2000, ¡¶ºÍÐÀ 2.0¡·</compatibility>
        </routine>
        <routine>
            <routine_name>wcsstr</routine_name>
            <headerfile>string.h</headerfile>
            <compatibility>ANSI, Windows 2000, ¡¶ºÍÐÀ 2.0¡·</compatibility>
        </routine>
    </requirements>

    <example>
<pre>
//==========================================================================
// Copyright (c) 2000-2007,  Elastos, Inc.  All Rights Reserved.
//==========================================================================

//strstr.cpp:this program returns a pointer to the first occurrence of strCharSet in string
 


#include &lt;string.h&gt;
#include &lt;stdio.h&gt;

char str[] =    &quot;lazy&quot;;
char string[] = &quot;The quick brown dog jumps over the lazy fox&quot;;
char fmt1[] =   &quot;         1         2         3         4         5&quot;;
char fmt2[] =   &quot;12345678901234567890123456789012345678901234567890&quot;;

int main()
{
    char *pdest;
    int  result;
    printf(&quot;String to be searched:\n\t%s\n&quot;, string);
    printf(&quot;\t%s\n\t%s\n\n&quot;, fmt1, fmt2);
    pdest = strstr(string, str);
    result = pdest - string + 1;
    if (pdest != NULL)
        printf(&quot;%s found at position %d\n\n&quot;, str, result);
    else
        printf(&quot;%s not found\n&quot;, str);

    return 0;
}
</pre>
    </example>
<result>
Output

String to be searched:
The quick brown dog jumps over the lazy fox
1         2         3         4         5
12345678901234567890123456789012345678901234567890

lazy found at position 36
</result>


    <references>
        <reference>
            <ref_name>wcscmp</ref_name>
            <ref_url>wcscmp</ref_url>
        </reference>
        <reference>
            <ref_name>wcschr</ref_name>
            <ref_url>wcschr</ref_url>
        </reference>
    </references>

</manpage>