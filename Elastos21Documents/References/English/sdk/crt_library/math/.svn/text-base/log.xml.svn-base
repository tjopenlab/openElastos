<!--==========================================================================-->
<!-- Copyright (c) 2000-2004,  Elastos, Inc.  All Rights Reserved.-->
<!--==========================================================================-->

<?xml version="1.0" encoding="GB2312"?>
<?xml:stylesheet type="text/xsl" href="/xsl/xsl_e/manual.xsl"?>

<manpage>
    <sample url="sdk\operating_system\crt\libc\math\log">log</sample>
    <title> log</title>
    <volume>C Run-Time Library Functions</volume>
    <routine_idx> math_idx.htm </routine_idx>

    <description>
        <para>Calculates the natural logarithm.</para>
    </description>

    <syntax>
        <return_val>double</return_val>
        <func_name>log</func_name>
        <parameters>
            <func_param>
                <param_type>double</param_type>
                <param_name>x</param_name>
                <param_note>
                    <para>Floating-point value</para>
                </param_note>
            </func_param>
        </parameters>
    </syntax>

    <return>
        <para>The log functions return the natural logarithm of x if successful. If x is negative, these functions return an indefinite (same as a quiet NaN). If x is 0, they return INF (infinite). You can modify error handling by using the _matherr routine.</para>
    </return>

    <requirements>
        <routine>
            <routine_name>log</routine_name>
            <headerfile>math.h</headerfile>
            <compatibility>ANSI, Windows 2000, Elastos 2.0</compatibility>
        </routine>
    </requirements>

    <example>
<pre>
//==========================================================================
// Copyright (c) 2000-2004,  Elastos, Inc.  All Rights Reserved.
//==========================================================================

/* log.cpp: This program uses log
 * to calculate the natural logarithm of 9,000.
 */

#include &lt;math.h&gt;
#include &lt;stdio.h&gt;

int main()
{
    double x = 9000.0;
    double y;

    y = log(x);
    printf(&quot;log(%.2f) = %f\n&quot;, x, y);

    return 0;
}
</pre>
    </example>
<result>
log(9000.00) = 9.104980
</result>



    <references>
        <reference>
            <ref_name>log10</ref_name>
            <ref_url>log10</ref_url>
        </reference>
        <reference>
            <ref_name>exp</ref_name>
            <ref_url>exp</ref_url>
        </reference>
        <reference>
            <ref_name>pow</ref_name>
            <ref_url>pow</ref_url>
        </reference>
    </references>

</manpage>