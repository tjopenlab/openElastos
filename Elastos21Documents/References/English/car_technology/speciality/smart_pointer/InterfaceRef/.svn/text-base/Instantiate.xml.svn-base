<!--==========================================================================-->
<!-- Copyright (c) 2000-2004,  Elastos, Inc.  All Rights Reserved.-->
<!--==========================================================================-->

<?xml version = "1.0" encoding="GB2312" ?>
<?xml:stylesheet type="text/xsl" href="/xsl/xsl_e/methodmanual.xsl"?>

<manpage>
    <volume> Interface Smart Pointer Class Shared Methods </volume>
    <interface> InterfaceRef </interface>
    <method>Instantiate</method>

    <description>
        <para>Creates specified class object and makes the current interface smart pointer to point to the Interface interface of this object. There are two forms of this method, which are the following: </para>
    </description>

    <syntax>
        <return_val>ECODE</return_val>
        <parameters>
            <api_param>
                <param_type>CLSID</param_type>
                <param_name>CLSID_classname</param_name>
                <param_note>
                    <para>Specified class identifier CLSID</para>
                </param_note>
            </api_param>
        </parameters>
    </syntax>

    <syntax>
        <return_val>ECODE</return_val>
        <parameters>
            <api_param>
                <param_type>CLSID</param_type>
                <param_name>CLSID_classname</param_name>
            </api_param>
            <api_param>
                <param_type>DWORD</param_type>
                <param_name>dwClsContext </param_name>
                <param_note>
                    <para>There are five possible values for relative location of specified object and client, which are the following: </para>
                    <para_table>
                        <th>
                            <td>Parameter Possible Value</td><td>Description</td>
                        </th>
                        <tr>
                            <td>CTX_SAME_DOMAIN</td><td>Object and client are located in the same address space.</td>
                        </tr>
                        <tr>
                            <td>CTX_DIFF_DOMAIN</td><td>Object and client are located in different address spaces, but they are located in the same process.</td>
                        </tr>
                        <tr>
                            <td>CTX_KERN_DOMAIN</td><td>Object and client are located in different address spaces and the object is running in the kernel.</td>
                        </tr>
                        <tr>
                            <td>CTX_DIFF_PROCESS</td><td>Object and client are located in different process spaces, but they are located in the same machine.</td>
                        </tr>
                        <tr>
                            <td>CTX_DIFF_MACHINE</td><td>Object and client are located in different machines.</td>
                        </tr>
                    </para_table>
                    <para>For details please see <link url="../code_running_env.htm">executable code run-time environment (context)</link>. </para>
                </param_note>
            </api_param>
        </parameters>
    </syntax>

     <return>
        <para>The return value of this method has the following values: </para>
        <table>
            <th>
                <td>Return Value</td><td>Description</td>
            </th>
            <tr>
                <td>S_OK</td><td>Method invocation successful.</td>
            </tr>
            <tr>
                <td>CO_S_NOTALLINTERFACES</td><td>Not all interface pointers in specified class are obtained successfully.</td>
            </tr>
            <tr>
                <td>E_NOINTERFACE</td><td>All interface pointers in specified class are not successfully obtained.</td>
            </tr>
        </table>
        <para>See <link url="../../../../sdk/reference/basic_data_type/hresult.htm">ECODE</link> related help.</para>
    </return>

    <remarks>
        <para> When the user does not care the relative location of created object and client, the first method is selected.Thus when invoking <d>Instantiate</d> method, there is no need to add the parameter <i>dwClsContext</i>. The system default value is one of CTX_SAME_DOMAIN, CTX_DIFF_DOMAIN and CTX_DIFF_PROCESS. Relative location of created object and client is determined by priority.</para>
        <para> When user needs to specify the relative location between created object and client, the second method is selected.Thus when invoking <d>Instantiate</d> method, parameter <i>dwClsContext</i> need to be set. </para>
        <para> Note:If the user need to create file system object, the second method must be selected and parameter <i>dwClsContext</i> must be set to CTX_KERN_DOMAIN.</para>

    </remarks>

</manpage>