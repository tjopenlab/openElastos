<!--==========================================================================-->
<!-- Copyright (c) 2000-2004,  Elastos, Inc.  All Rights Reserved.-->
<!--==========================================================================-->

<html>

<head>
    <title>CAR Component Inheritance Mechanism</title>
    <meta http-equiv="Content-Type" content="text/html; charset=gb2312">
    <script src="/xsl/docstyles.js"></script>

</head>

<body>
    <h2>CAR Component Inheritance Mechanism</h2>
        <p>Component inheritance mechanism is a patented component technology of Koretide, which is invented to make up the shortcoming of containment, aggregation etc that are component reuse technologies.</p>
        <p>Component inheritance mechanism can achieve inheritance and overloading between binary components. Components can be reused flexibly. This mechanism is similar to class inheritance and virtual function overloading in C++. The former is binary component inheritance and overloading and the latter is C++ source code inheritance and overloading.</p>
    <h3>Requisite knowledge for a developer</h3>
        <p>It is essential that a reader to be familiar with basic component development and smart pointer.</p>
        <p>Contents in this section: </p>
        <ul>
            <li><a class="style1" href="specificity.htm">Characteristics Of CAR Component Inheritance Mechanism</a>
        </ul>
        <ul>
            <li><a class="style1" href="similar_technic.htm">Existing Technologies Similar To Component Inheritance Mechanism</a>
        </ul>
        <ul>
            <li><a class="style1" href="basic_concept.htm">Basic Concept, Keywords and Basic Functions Of Component Inheritance Mechanism</a>
        </ul>

<script>footer("english")</script>
</body>
</html>