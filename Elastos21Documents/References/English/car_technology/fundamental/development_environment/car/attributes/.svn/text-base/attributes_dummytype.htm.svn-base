<!--==========================================================================-->
<!-- Copyright (c) 2000-2004,  Elastos, Inc.  All Rights Reserved.-->
<!--==========================================================================-->

<html>
<head>
<title>CAR Attribute--dummtype</title>
<meta http-equiv="Content-Type" content="text/html; charset=gb2312">
<script src="/xsl/docstyles.js"></script>
</head>

<body>

<h2>dummytype</h2>
    <p>This attribute means this class definition is a dummy class definition. (It can pass CAR, IDL compilation).It does  not appear in header files that are automatically generated by the system. Interface method parameter type must be <a class="style1" href="../types.htm">CAR supported data type</a>, when the users want to use their defined data type (e.x.: struct, class etc.) as parameter type, they must use dummytype attribute. The syntax is: typedef&nbsp;[dummytype]&nbsp;TYPE&nbsp;ALIAS. For example: </p>
    <pre class="code">
бнбн
component DummytypeDemo
{
    бнбн
    typedef <b>[dummytype]</b> long structXXX;  //self descriptive struct structXXX
    бнбн
    [uuid(8838fffe-418d-4c80-a2c8-c66a2b3cea9d)]
    interface IInterface1 {
        ECODE Func1([in] structXXX );
    }
    бнбн
}
</pre>
    <p>In sample component DummytpyeDemo, structXXX is user defined struct and it is used as parameter of method Func1 in interface IInterface1 .</p>
    <p>When client program and component invoke each other remotely, they transfer this type (ALIAS) data by using the defined type (TYPE). For example: In the example we transfer the structXXX as a long type data (4 bytes). If size of self defined type variable (structXXX) is greater than defined type (long), then the extra data is lost during remote invocation.</p>
    <b><a class="style1" href="../attribute.htm">CAR Attribute Table</a></b>
<script>footer("english")</script>
</body>
</html>
