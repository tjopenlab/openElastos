<!--==========================================================================-->
<!-- Copyright (c) 2000-2004,  Elastos, Inc.  All Rights Reserved.-->
<!--==========================================================================-->

    <?xml version = "1.0" encoding="GB2312" ?>
    <?xml:stylesheet type="text/xsl" href="/xsl/xsl_e/methodmanual.xsl"?><manpage>
<volume>Thread and Scheduling</volume>
<interface>IThread</interface><method> SetPriority </method>
    <description>
        <para>
        	Sets the priority of a thread.
        </para>
    </description>
    <syntax>
        <return_val> ECODE </return_val>
        <parameters>
            <api_param>
                <param_inout>[in]</param_inout>
                <param_type> ThreadPriority  </param_type>
                <param_name> priority  </param_name>
                <param_note>
                    <para>
                    	A ThreadPriority enumeration type data that determines the priority.
                    </para>
                </param_note>
            </api_param>
        </parameters>
    </syntax>

	<return>
    	<table>
    	    <th>
    		<td>Return Value </td>
    		<td>Hex Value</td>
    		<td>Description</td>
    	    </th>
    	    <tr>
    		<td>S_OK</td>
    		<td>0x00000000</td>
    		<td>Thread priority is successfully set.</td>
    	    </tr>
    	    <tr>
    		<td>E_INVALIDARG</td>
    		<td>0x80070057</td>
    		<td>Invalid argument(s).</td>
    	    </tr>
    	    <tr>
    		<td>E_FAIL</td>
    		<td>0x80004005</td>
    		<td>Thread is terminated.</td>
    	    </tr>
    	</table>
    </return>

	<remarks>
		<para>
			Thread priorities are integers ranging between ThreadPriority_Lowest and ThreadPriority_Highest. If parameter 
			priority exceeds the range, then the function return E_INVALIDARG.
		</para>
		<para>
			At any given point in time, when multiple threads are ready to be executed, the runtime system chooses the 
			thread, which can run with the highest priority for execution. A lower priority thread starts execution, only when 
			that thread exits, yields, or does not run for some reason. If two threads of the same priority waits for the CPU, the scheduler chooses one of them to run.
		</para>
		<para>
			If the associated thread has been finished, the function has no effect and return E_FAIL.
		</para>
		<para>
			The default priority is ThreadPriority_Normal.
		</para>
		<table>
			<th>
				<td>Priority</td>
				<td>Value</td>
			</th>
			<tr>
				<td>ThreadPriority_Lowest</td>
				<td>1</td>
			</tr>
			<tr>
				<td>ThreadPriority_BelowNormal</td>
				<td>2</td>
			</tr>
			<tr>
				<td>ThreadPriority_Normal</td>
				<td>3</td>
			</tr>
			<tr>
				<td>ThreadPriority_AboveNormal</td>
				<td>4</td>
			</tr>
			<tr>
				<td>ThreadPriority_Highest</td>
				<td>5</td>
			</tr>
		</table>
	</remarks>

    <requirements>
        <system>
            <system_name>
				Elastos 2.0 or later.
			</system_name>
        </system>
    </requirements>
</manpage>