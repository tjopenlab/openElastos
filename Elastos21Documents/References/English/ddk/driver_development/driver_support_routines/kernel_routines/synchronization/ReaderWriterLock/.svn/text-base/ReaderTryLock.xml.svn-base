<!--==========================================================================-->
<!-- Copyright (c) 2000-2004,  Elastos, Inc.  All Rights Reserved.-->
<!--==========================================================================-->

    <?xml version = "1.0" encoding="GB2312" ?>
    <?xml:stylesheet type="text/xsl" href="../../../../../../xsl/xsl_e/methodmanual.xsl"?><manpage>
<volume>Synchronization</volume>
<interface>ReaderWriterLock</interface><method> ReaderTryLock </method>
    <description>
        <para>
            Tries to acquire the reader lock within given time interval.
        </para>
    </description>
    <syntax>
        <return_val>ECODE</return_val>
        <parameters>
            <api_param>
                <param_type> uint_t </param_type>
                <param_name> uTicks </param_name>
                <param_note>
                    <para>
                    	Specifies the time-out interval, in ticks. If <i>uTicks</i> is zero, the method returns 
                    	immediately. If the thread acquires the reader lock successfully, the method returns S_OK; 
                    	otherwise, S_TIME_OUT is returned.
                    </para>
                </param_note>
            </api_param>
        </parameters>
    </syntax>

	<return>
	    <table>
	    <th>
		<td>Return Value </td>
		<td>Hex Value</td>
		<td>Description</td>
	    </th>
	    <tr>
		<td>S_OK</td>
		<td>0x00000000</td>
		<td>Function succeeds in trying to acquire the reader lock within given time interval.</td>
	    </tr>

	     <tr>
		<td>S_TIMED_OUT </td>
		<td>0x00060003</td>
		<td>The interval elapses; attempt to acquire the reader lock failed</td>
	    </tr>

	    <tr>
		<td>S_INTERRUPTED</td>
		<td>0x00060014</td>
		<td>The waiting of the calling thread is interrupted</td>
	    </tr>

	</table>
	</return>

	<remarks>
	    <para>
	    	This method attempts to acquire the ReaderWriterLock object as a reader. If the calling thread cannot
	    	acquire a reader lock (In case, the ReaderWriterLock object is locked by a writer), it will
	    	enter the waiting state. As long as the interval does not elapse, the thread will keep on waiting, until
	    	the reader lock of the ReaderWriterLock object is acquired, then the method returns successfully. If
	    	the interval elapses, the calling thread will stop waiting immediately and the method returns. If no
	    	other threads acquire the ReaderWriterLock object, the calling thread will acquire it as a reader
	    	successfully, and the method returns immediately. If the calling thread has already acquired the
	    	ReaderWriterLock object as a reader or writer, the method will fail and cause unknown errors. The waiting
	    	of the calling thread can be interrupted.
		</para>

		<para>
			The reader or writer thread of ReaderWriterLock object can not call this member function, otherwise, 
			will get unpredictable results. 
         </para>
	</remarks>

    <requirements>
        <system>
            <system_name>
				Elastos 2.0 or later.
			</system_name>
        </system>
    </requirements>
</manpage>