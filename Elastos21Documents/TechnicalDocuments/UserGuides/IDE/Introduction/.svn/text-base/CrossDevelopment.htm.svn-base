<!--==========================================================================-->
<!-- Copyright (c) 2000-2006,  Elastos, Inc.  All Rights Reserved.-->
<!--==========================================================================-->

<html>
<head>
<title>交叉开发(Cross&nbsp;Development)的概念</title>
<meta http-equiv="Content-Type" content="text/html; charset=gb2312">
<script src="/xsl/docstyles.js"></script>
</head>

<body>
<h2>交叉开发(Cross&nbsp;Development)的概念</h2>

    

    <p>交叉开发环境是指编译、链接和调试嵌入式应用软件的环境，它与运行嵌入式应用软件的环境有所不同，通常采用宿主机／目标机模式，如图所示。</p>
    <center><img src="images/1.jpg"></center>
    <p>宿主机（Host）是一台通用计算机（如PC机或者工作站），它通过串口或者以太网接口与目标机通信。宿主机的软硬件资源比较丰富，不但包括功能强大的操作系统（如Windows），而且还有各种各样优秀的开发工具（如，和欣集成开发环境，以及编译器等等），能够大大提高嵌入式应用软件的开发速度和效率。</p>
    <p>目标机（Target）一般在嵌入式应 用软件开发期间使用，用来区别与嵌入式系统通信的宿主机，它可以是嵌入式应用软件的实际运行环境，也可以是能够替代实际运行环境的仿真系统(如 “和欣”运行平台 Elastos EP/W或者 硬件仿真器ICE ),硬件资源通常都比较有限。 嵌入式系统的交叉开发环境一般包括交叉编译器、交叉调试器和系统仿真器，其中交叉编译器用于在宿主机上生成能在目标机上运行的代码，而交叉调试器和系统仿真器则用于在宿主机与目标机间完成嵌入式软件的调试。在采用宿主机/目标机模式开发嵌入式应用软件时，首先利用宿主机上丰富的资源和良好的开发环境开发和仿真调试目标机上的软件，然后通过串口或者以网络将交叉编译生成的目标代码传输并装载到目标机上，并在监控程序或者操作系统的支持下利用交叉调试器进行分析和调试，最后目标机在特定环境下脱离宿主机单独运行。</p>
    <h3>工作在主机上：</h3>
    <p>你可以像其他通用的IDE那样，在主机端 管理项目文件、编辑、编译、链接、保存不同的版本代码、配置将要运行在目标机器上的操作系统的设置 等等工作。</p>
    <h3>为目标机和主机建立通讯连接</h3>
    <p>连接目标机到主机的方法各式各样，随不同的目标开发板卡而不同。经常用到的如：网络、串口和JTAG等。详细信息请参考2.4.3配置交叉开发环境。</p>
    <h3>运行您的代码：</h3>
    <p>运行时的代码指的是最后的整个应用的代码。包括 内核、应用、某些必须的链接库代码；但不包括“目标代理监护程序”（虽然一般在开发和调试过程中都会包含到运行时的代码里）。关于目标代理监护程序，请参考 2.4.3配置交叉开发环境</p>
    <p>另外Elastos IDE也允许您通过模拟器来运行这些代码。</p>
    <h3>使用Elastos IDE进行开发对您带来的好处：</h3>
    <ul>
      <li>有效的项目管理
      <li>编译的管理，省却makefile的烦恼
      <li>缩短开发和调试的周期
      <li>目标系统控制和管理
      <li>图形化的调试工具
    </ul>

    

<script>footer("chinese")</script>
</body>
</html>
