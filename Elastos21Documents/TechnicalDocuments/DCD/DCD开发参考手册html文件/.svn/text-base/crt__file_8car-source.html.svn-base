<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=UTF-8">
<title>Kortide DCD API: crt_file.car源文件</title>
<link href="doxygen.css" rel="stylesheet" type="text/css">
<link href="tabs.css" rel="stylesheet" type="text/css">
</head><body>
<!-- 制作者 Doxygen 1.5.4 -->
<div class="tabs">
  <ul>
    <li><a href="main.html"><span>首页</span></a></li>
    <li><a href="annotated.html"><span>类</span></a></li>
    <li class="current"><a href="files.html"><span>文件</span></a></li>
  </ul>
</div>
<h1>crt_file.car</h1><a href="crt__file_8car.html">浏览该文件的文档。</a><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 
<a name="l00010"></a>00010         FILE *<a class="code" href="crt__file_8car.html#81a531c31fb53f81d3a32dbe5636d5ee" title="打开文件.">dcd_fopen</a>(
<a name="l00011"></a>00011                         <a class="code" href="dcdenum_8car.html#a55c825970107ffb49428d8d1cf480b3" title="宽窄串的定义，如果平台支持宽串，则定义：typedef wchar_t DcdChar...">DcdChar</a> *filename,
<a name="l00012"></a>00012                         <a class="code" href="dcdenum_8car.html#a55c825970107ffb49428d8d1cf480b3" title="宽窄串的定义，如果平台支持宽串，则定义：typedef wchar_t DcdChar...">DcdChar</a> *mode
<a name="l00013"></a>00013                         );
<a name="l00014"></a>00014 
<a name="l00023"></a>00023         <span class="keywordtype">int</span> <a class="code" href="crt__file_8car.html#d478acced63488eab830d794b09078d0" title="关闭文件.">dcd_fclose</a>(
<a name="l00024"></a>00024                         FILE *stream
<a name="l00025"></a>00025                         );
<a name="l00026"></a>00026 
<a name="l00038"></a>00038         <span class="keywordtype">size_t</span> <a class="code" href="crt__file_8car.html#9f65bb0fa8cf199059ed2ac0620494a0" title="将数据写入文件流.">dcd_fwrite</a>(
<a name="l00039"></a>00039                         <span class="keywordtype">void</span>* buffer,
<a name="l00040"></a>00040                         <span class="keywordtype">size_t</span> size,
<a name="l00041"></a>00041                         <span class="keywordtype">size_t</span> count,
<a name="l00042"></a>00042                         FILE* stream
<a name="l00043"></a>00043                         );
<a name="l00044"></a>00044 
<a name="l00056"></a>00056         <span class="keywordtype">size_t</span> <a class="code" href="crt__file_8car.html#c98dbb63bb931662c950b9cf86bd0fe1" title="将数据写入文件流.">dcd_fread</a> (
<a name="l00057"></a>00057                         <span class="keywordtype">void</span>* buffer,
<a name="l00058"></a>00058                         <span class="keywordtype">size_t</span> size,
<a name="l00059"></a>00059                         <span class="keywordtype">size_t</span> count,
<a name="l00060"></a>00060                         FILE* stream
<a name="l00061"></a>00061                         );
<a name="l00062"></a>00062 
<a name="l00073"></a>00073         <span class="keywordtype">int</span> <a class="code" href="crt__file_8car.html#857c4a81d5c284948618921360f798ed" title="测定文件的访问权限.">dcd_access</a> (
<a name="l00074"></a>00074                         <span class="keywordtype">char</span>* path,
<a name="l00075"></a>00075                         <span class="keywordtype">int</span> mode
<a name="l00076"></a>00076                         );
<a name="l00077"></a>00077 
<a name="l00086"></a>00086         <span class="keywordtype">int</span> <a class="code" href="crt__file_8car.html#481a04959116cebbae989eb8c0104685" title="判断文件流是否具有文件尾（end-of-file）指示器.">dcd_feof</a>(
<a name="l00087"></a>00087                         FILE *stream
<a name="l00088"></a>00088                         );
<a name="l00089"></a>00089 
<a name="l00100"></a>00100         <span class="keywordtype">int</span> <a class="code" href="crt__file_8car.html#3108589670eb0571cc8470ebbe187952" title="将文件指针移动到指定位置.">dcd_fseek</a>(
<a name="l00101"></a>00101                         FILE* stream,
<a name="l00102"></a>00102                         <span class="keywordtype">long</span> offset,
<a name="l00103"></a>00103                         <span class="keywordtype">int</span> origin
<a name="l00104"></a>00104                         );
<a name="l00105"></a>00105 
<a name="l00115"></a>00115         <span class="keywordtype">long</span> <a class="code" href="crt__file_8car.html#2a79a31798124a8db1dac3aac744db10" title="获取文件指针的当前位置.">dcd_ftell</a>(
<a name="l00116"></a>00116                         FILE *stream
<a name="l00117"></a>00117                         );
<a name="l00118"></a>00118 
<a name="l00127"></a>00127         <span class="keywordtype">int</span> <a class="code" href="crt__file_8car.html#85e9624330baeb71b8d0ca0db6d5674d" title="删除文件.">dcd_remove</a>(
<a name="l00128"></a>00128                         <a class="code" href="dcdenum_8car.html#a55c825970107ffb49428d8d1cf480b3" title="宽窄串的定义，如果平台支持宽串，则定义：typedef wchar_t DcdChar...">DcdChar</a>* path
<a name="l00129"></a>00129                         );
<a name="l00130"></a>00130 
<a name="l00140"></a>00140         <span class="keywordtype">int</span> <a class="code" href="crt__file_8car.html#ad2a4e1b11ece315ace4acc7f3e529b5" title="重新命名文件或路径名.">dcd_rename</a>(
<a name="l00141"></a>00141                         <a class="code" href="dcdenum_8car.html#a55c825970107ffb49428d8d1cf480b3" title="宽窄串的定义，如果平台支持宽串，则定义：typedef wchar_t DcdChar...">DcdChar</a>* oldname,
<a name="l00142"></a>00142                         <a class="code" href="dcdenum_8car.html#a55c825970107ffb49428d8d1cf480b3" title="宽窄串的定义，如果平台支持宽串，则定义：typedef wchar_t DcdChar...">DcdChar</a>* newname
<a name="l00143"></a>00143                         );
<a name="l00144"></a>00144 
<a name="l00154"></a>00154         <span class="keywordtype">void</span> * <a class="code" href="crt__file_8car.html#66cc235e62d994073f859f5b87e3f9aa" title="将缓冲区设置成指定的字符.">dcd_memset</a> (
<a name="l00155"></a>00155                         <span class="keywordtype">void</span>* dest,
<a name="l00156"></a>00156                         <span class="keywordtype">int</span> c,
<a name="l00157"></a>00157                         <span class="keywordtype">size_t</span> count
<a name="l00158"></a>00158                         );
<a name="l00159"></a>00159 
<a name="l00170"></a>00170         <span class="keywordtype">int</span> <a class="code" href="crt__file_8car.html#1b822fd4f5c98a4771782b6a8eb1fefc" title="比较两个缓冲区的字符.">dcd_memcmp</a>(
<a name="l00171"></a>00171                         <span class="keywordtype">void</span>* buf1,
<a name="l00172"></a>00172                         <span class="keywordtype">void</span>* buf2,
<a name="l00173"></a>00173                         <span class="keywordtype">size_t</span> count
<a name="l00174"></a>00174                         );
<a name="l00175"></a>00175 
<a name="l00185"></a>00185         <span class="keywordtype">void</span> * <a class="code" href="crt__file_8car.html#a4e11406b298c77afacace15c115cff9" title="在两个缓冲区之间拷贝字符.">dcd_memcpy</a>(
<a name="l00186"></a>00186                         <span class="keywordtype">void</span>* dest,
<a name="l00187"></a>00187                         <span class="keywordtype">void</span>* src,
<a name="l00188"></a>00188                         <span class="keywordtype">size_t</span> count
<a name="l00189"></a>00189                         );
<a name="l00190"></a>00190 
<a name="l00200"></a>00200         <span class="keywordtype">void</span>* <a class="code" href="crt__file_8car.html#53bc5a5967cb2a44c29c8ac24293849c" title="把一个缓冲区里的内容移到另一个缓冲区.">dcd_memmove</a>(
<a name="l00201"></a>00201                         <span class="keywordtype">void</span>* dest,
<a name="l00202"></a>00202                         <span class="keywordtype">void</span>* src,
<a name="l00203"></a>00203                         <span class="keywordtype">size_t</span> count
<a name="l00204"></a>00204                         );
<a name="l00205"></a>00205 
<a name="l00214"></a>00214         <span class="keywordtype">int</span> <a class="code" href="crt__file_8car.html#481f141470ca69b0658f6d8b815a8e2d" title="创建一个新的目录.">dcd_mkdir</a>(
<a name="l00215"></a>00215                         <a class="code" href="dcdenum_8car.html#a55c825970107ffb49428d8d1cf480b3" title="宽窄串的定义，如果平台支持宽串，则定义：typedef wchar_t DcdChar...">DcdChar</a>* dirname
<a name="l00216"></a>00216                         );
<a name="l00217"></a>00217 
<a name="l00226"></a>00226         time_t <a class="code" href="crt__file_8car.html#e83e1beb8be42c8193b1569285fb8f68" title="获得系统当前时间.">dcd_time</a>(
<a name="l00227"></a>00227                         time_t *sysTime
<a name="l00228"></a>00228                         );
<a name="l00229"></a>00229 
<a name="l00238"></a>00238         <span class="keywordtype">void</span> * <a class="code" href="crt__file_8car.html#2f16d30ee643180eed07e694e5e6eded" title="分配指定大小的内存块.">dcd_malloc</a>(
<a name="l00239"></a>00239                         <span class="keywordtype">size_t</span> size
<a name="l00240"></a>00240                         );
<a name="l00241"></a>00241 
<a name="l00250"></a>00250         <span class="keywordtype">void</span> *<a class="code" href="crt__file_8car.html#7227a9b9877c0dde8fab3c46066b77e7" title="重新分配内存块.">dcd_realloc</a>(
<a name="l00251"></a>00251                         <span class="keywordtype">void</span>* memblock,
<a name="l00252"></a>00252                         <span class="keywordtype">size_t</span> size
<a name="l00253"></a>00253                         );
<a name="l00254"></a>00254 
<a name="l00262"></a>00262         <span class="keywordtype">void</span> <a class="code" href="crt__file_8car.html#07abf04ca88a4696da1e610d10e07238" title="释放已分配的内存块.">dcd_free</a>(
<a name="l00263"></a>00263                         <span class="keywordtype">void</span> * memblock
<a name="l00264"></a>00264                         );
</pre></div><hr size="1"><address style="text-align: right;"><small>Generated at Thu Mar 27 11:35:54 2008 for Kortide DCD API by&nbsp;
<a href="http://www.doxygen.org/index.html">
<img src="doxygen.png" alt="doxygen" align="middle" border="0"></a> 1.5.4 </small></address>
</body>
</html>
