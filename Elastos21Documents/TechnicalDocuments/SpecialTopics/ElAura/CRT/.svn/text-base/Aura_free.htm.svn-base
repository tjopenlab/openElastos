<HTML>
<HEAD>
<title>
Aura_free
</title>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=gb2312" />
<SCRIPT SRC="/xsl/runningbar.js"></SCRIPT>
<SCRIPT LANGUAGE="VBSCRIPT" src="/xsl/samplemenu.vbs"></SCRIPT>
</HEAD>
<BODY>
<DIV id="nstext" valign="bottom">
<div>
<H3>Aura_free</H3>
</div>
<p>Deallocates or frees a memory block.</p>
<div class="proto">
<TABLE cellspacing="3" cellpadding="2" style="font-size:90%">
<TR valign="top">
<TD colspan="5" class="datatype">EXTERN_C void CDECL Aura_free
                    (
                 </TD>
</TR>
<TR valign="top">
<TD width="8%"></TD>
<TD class="datatype">void*</TD>
<TD class="param">memblock</TD>
</TR>
<TR>
<TD colspan="5" class="datatype">);</TD>
</TR>
</TABLE>
</div>
<br />
<H4>Parameters</H4>
<DL><DT class="param" style="color:#222222;margin-left:42">memblock</DT>
<DD style="margin-left:80"><font style="font-weight:normal;font-style:normal;color:black">Pointer to previously allocated memory block to be freed.<BR /><BR />
</font></DD>
</DL>
<h4>Return Value</h4>
<p>This function does not return a value.</p>
<h4>Remarks</h4>
<p>The free function deallocates a memory block (memblock) that was previously allocated by a call to calloc, malloc or realloc. The number of freed bytes is equivalent to the number of bytes requested when the block was allocated (or reallocated, in the case of realloc). If memblock is NULL, the pointer is ignored and free immediately returns. Attempting to free an invalid pointer (a pointer to a memory block that was not allocated by calloc, malloc, or realloc) may affect subsequent allocation requests and cause errors.</p>
<h4>Requirements</h4>
<table class="methodtbl" cellspacing="0" cellpadding="0">
<THEAD class="head">
<TD width="20%" class="cell">
Routine</TD>
<TD width="20%" class="cell">
Required header</TD>
<TD class="cell">
Compatibility</TD>
</THEAD>
<TR>
<TD class="cell"><B>free</B></TD>
<TD class="cell">stdlib.h</TD>
<TD class="cell">ANSI, Windows 2000, Elastos 2.0</TD>
</TR>
</table>
<p></p>
<table class="methodtbl" cellspacing="0" cellpadding="0">
<THEAD class="head">
<TD width="30%" class="cell">
                Library
            </TD>
<TD class="cell">
                Description
            </TD>
</THEAD>
<TR>
<TD class="cell">
                libc.lib
            </TD>
<TD class="cell">
                Single thread static library
            </TD>
</TR>
<TR>
<TD class="cell">
                elacrt.lib
            </TD>
<TD class="cell">
                Import library for elacrt.dll
            </TD>
</TR>
</table>
<h4>Example</h4>
<p><script>showButton_e()</script></p>
<pre class="codeview">
//==========================================================================
// Copyright (c) 2000-2004,  Elastos, Inc.  All Rights Reserved.
//==========================================================================

/* free.cpp: This program allocates memory with
 * malloc, then frees the memory with free.
 */

#include &lt;stdlib.h&gt;            /* For _MAX_PATH definition */
#include &lt;stdio.h&gt;

int main()
{
    char *string;

    /* Allocate space for a path name */
    string = (char *)malloc(_MAX_PATH);
    if (string == NULL)
        printf("Insufficient memory available\n");
    else {
        printf("Memory space allocated for path name\n");
        free(string);
        printf("Memory freed\n");
    }

    return 0;
}
</pre>
<h4>Output</h4>
<pre class="codeview">Memory space allocated for path name
Memory freed</pre>
<p style="font-size:90%;font-weight:bold;margin-left:0">¡¡</p>
</DIV>
</BODY>
</HTML>

