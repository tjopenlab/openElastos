

<?xml version = "1.0" encoding="GB2312" ?>
<?xml:stylesheet type="text/xsl" href="/xsl/xsl_c/interfaceman.xsl"?>

<manpage>
    <volume> 常用数据结构 </volume>
    <interface> <i>ArrayOf </i></interface>

    <description>       
        <para>一种具有自描述功能的T类型数组。</para>
        <para>ArrayOf构造函数和各种方法使用介绍：</para>
        
   </description>
    <constructs>
        
        <construct>
            <construct_name>ArrayOf_(T Type, Int32 capacity)</construct_name>
            <construct_url>ArrayOf/structure/Array_Box2</construct_url>
            <construct_description>在栈中构造一个ArrayOf对象，包括capacity个元素的Buffer内存</construct_description>
        </construct>
        
        <construct>
            <construct_name>ArrayOf( T *pBuf, Int32 capacity)</construct_name>
            <construct_url>ArrayOf/structure/Array_Box1</construct_url>
            <construct_description>在栈中构造一个对象，并m_pBuf指向用户指定的内存块，同时设置其长度capacity </construct_description>
        </construct>
     </constructs>   
        
    <methods>
      <self>
          
        <method>
        <method_name>Free</method_name>
        <method_url>ArrayOf/Free</method_url>
        <m_description> 删除由Alloc或Clone在堆上创建的ArrayOf对象，并释放其所占内存空间 </m_description>
        </method>
        
        <method>
        <method_name>Clone</method_name>
        <method_url>ArrayOf/Clone</method_url>
        <m_description> 获取一个ArrayOf对象的深拷贝，即在堆上复制ArrayOf数组</m_description>
        </method>
        
        <method>
        <method_name>IsNull</method_name>
        <method_url>ArrayOf/IsNull</method_url>
        <m_description>判断当前ArrayOf对象的指向数据区的指针是否为空</m_description>
        </method>
        
        
        
          
        <method>
        <method_name>Replace</method_name>
        <method_url>ArrayOf/Replace</method_url>
        <m_description>用指定源数据覆盖指定位置的内容</m_description>
        </method>
        <method>
        <method_name>GetPayload</method_name>
        <method_url>ArrayOf/GetPayload</method_url>
        <m_description>返回指向ArrayOf对象的数据区的指针，即返回指向类型Type的指针 </m_description>
        </method>
        
        <method>
        <method_name>GetLength</method_name>
        <method_url>ArrayOf/GetLength</method_url>
        <m_description> 获取当前ArrayOf数组长度 </m_description>
        </method>
        
         
        <method>
        <method_name>Alloc(Int32 capacity )</method_name>
        <method_url>ArrayOf/Alloc</method_url>
        <m_description> 动态创建(在堆上)ArrayOf对象</m_description>
        </method>
        
       
        
        <method>
        <method_name>Alloc(T* pBuf ,Int32 capacity)</method_name>
        <method_url>ArrayOf/Alloc2</method_url>
        <m_description> 在堆中构造一个ArrayOf对象,将m_pBuf指向用户指定的内存块，并分别其长度和已使用长度为capacity</m_description>
        </method>
        
       
        <method>
        <method_name>Copy(const T* pBuf, Int32 n)</method_name>
        <method_url>ArrayOf/Copy</method_url>
        <m_description> 将T类型数组的元素拷贝到当前ArrayOf数组，并指定要拷贝的数组元素个数 </m_description>
        </method>
        
        <method>
        <method_name>Copy(const ArrayOf &lt;T&gt; *pSrc)</method_name>
        <method_url>ArrayOf/CopyEx</method_url>
        <m_description> 将ArrayOf数据类型数组，复制到当前ArrayOf数组，并指定要拷贝的数组元素个数 </m_description>
        </method>
        
       
       
       
      </self>
    </methods>

    <operators>
        <operator>
            <operator_name>operator[]</operator_name>
            <operator_url>ArrayOf/operator</operator_url>
            <operator_description>存取数组元素操作符，用来对数组元素进行存取操作</operator_description>
        </operator>
        <operator>
            <operator_name>operator[]</operator_name>
            <operator_url>ArrayOf/operator1</operator_url>
            <operator_description>存取数组元素操作符，用来对数组元素进行存取操作</operator_description>
        </operator>
        <operator>
            <operator_name>operator CarQuintet  </operator_name>
            <operator_url>ArrayOf/operator2</operator_url>
            <operator_description>取五元组的指针</operator_description>
        </operator>
        <operator>
            <operator_name> operator BufferOf &lt;T&gt;<![CDATA[&]]> </operator_name>
            <operator_url>ArrayOf/operator3</operator_url>
            <operator_description>类型转换操作符，将ArrayOf转成BufferOf
            </operator_description>
        </operator>
    </operators>
   
    <macros>
        <macro>
        <macro_name> NULL_ARRAYOF&lt;T&gt;  </macro_name>
          <macro_url> ArrayOf/NULL_ARRAYOF </macro_url>
        <macro_description> 构造一个内容为空的ArrayOf&lt;T&gt;对象  </macro_description>
        </macro>
        <macro>
        <macro_name> AUTO_ARRAYOF(T, n) </macro_name>
          <macro_url> ArrayOf/AUTO_ARRAYOF </macro_url>
        <macro_description> 构造一个ArrayOf对象  </macro_description>
        </macro>
    </macros>    
        
        
</manpage>     
        
        
       
        
        
        
        
        
        
        
        
        
    

    